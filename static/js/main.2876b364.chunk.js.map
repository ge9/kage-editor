{"version":3,"sources":["actions/drag.ts","kageUtils/glyph.ts","args.ts","actions/select.ts","kageUtils/match.ts","kageUtils/connection.ts","kageUtils/transform.ts","actions/editor.ts","callapi.ts","kage.ts","kageUtils/bbx.ts","selectors/draggedGlyph.ts","kageUtils/stretchparam.ts","kageUtils/decompose.ts","kageUtils/stroketype.ts","reducers/editor.ts","reducers/index.ts","reducers/select.ts","reducers/drag.ts","store.ts","components/Stroke.tsx","components/Glyph.tsx","components/AreaSelectRect.tsx","components/ControlPoint.tsx","components/SelectionControl.tsx","components/GlyphArea.tsx","components/SelectionInfo.tsx","components/EditorControls.tsx","App.tsx","shortcuts.ts","serviceWorker.ts","i18n.ts","index.tsx"],"names":["RectPointPosition","getNumColumns","strokeType","unparseGlyphLine","glyphLine","values","value","slice","partName","join","parseGlyph","glyphStr","split","map","line","glyphLineStr","splitLine","numColumns","i","push","Math","floor","parseGlyphLine","filter","gLine","length","args","URLSearchParams","window","location","hash","actionCreator","actionCreatorFactory","selectActions","selectSingle","selectAddSingle","selectRemoveSingle","selectNone","selectAll","selectDeselected","selectPrev","selectNext","MatchType","dragActions","startAreaSelect","startSelectionDrag","startPointDrag","startResize","mouseMove","mouseUp","updateCTMInv","connectablePairs","position","strokeTypes","shapeTypes","matchConnectablePoint","point","includes","shapeType","getConnectablePoints","result","coord","pointIndex","endPointIndex","listupConnectedPoints","memoizeOne","glyph","points","sPoints","lineIndex","sPoint","forEach","dPoint","some","point2","point1","filter1","filter2","glyph1","points1","glyph2","points2","every","index","listupConnectedPointsOfSelection","selection","selectedDescs","applyGlyphLineOperation","tX","tY","applyGlyphPointOperation","pdescs","newGlyph","newValue","moveSelectedGlyphLines","dx","dy","targetDescs","x","round","y","moveSelectedPoint","selectedDesc","targetDesc","resizeSelectedGlyphLines","oldBBX","newBBX","x11","y11","x12","y12","x21","y21","x22","y22","resizeGlyphLine","editorActions","loadedBuhin","loadedStretchParam","changeStrokeType","changeHeadShapeType","changeTailShapeType","changeStretchCoeff","swapWithPrev","swapWithNext","undo","redo","paste","copy","cut","delete","decomposeSelected","moveSelected","toggleFreehand","openOptionModal","closeOptionModal","callApi","path","a","fetch","response","ok","Error","text","getSource","name","encodeURIComponent","get","kage","Kage","waiting","Set","makeGlyphSeparated","data","kBuhin","search","has","add","then","source","stretchMatch","exec","params","store","dispatch","catch","err","console","error","loadAbsentBuhin","bbxOfPoints","xs","ys","min","max","getGlyphLineBBX","mergeBBX","getGlyphLinesBBX","glyphLines","reduce","gLines1","gLines2","gLine1","resizeSelected","selectedGlyphLine","north","west","south","east","southeast","newGlyphLine","draggedGlyphSelector","createSelector","state","dragSelection","dragPoint","resizeSelection","x1","y1","x2","y2","getStretchPositions","setStretchPositions","positions","sx","sy","tx","ty","normalizeStretchPositions","calcStretchScalar","param","x0","y0","k","abs","decompose","buhinMap","buhinSource","failedBuhin","strokesArray","getEachStrokes","unparseGlyph","box","getBox","isStretchEnabled","oldGlyphLine","stretchedX","stretch","minX","maxX","stretchedY","minY","maxY","sx2","sy2","tx2","ty2","px1","py1","px2","py2","revX","revY","headShapeTypes","1","2","3","4","6","7","tailShapeTypes","validStrokeShapeTypes","isValidStrokeShapeTypes","stroke","s0","s1","s2","setGlyphLine","initialState","areaSelectRect","ctmInv","Map","stretchParamMap","freehandMode","showOptionModal","clipboard","reducer","reducerWithInitialState","withHandling","builder","case","concat","index2","_gLine","firstSelected","evt","clientX","clientY","intersections","polygonsSep","gAreaPolygon","array","polygon","gPolygon","polygonInPolygon","polygonIntersectsPolygon","performAreaSelect","newSelection","Array","from","newMap","set","newType","newGLine","oldType","oldNumPoints","newNumPoints","x3","y3","x4","y4","xm","ym","xm1","ym1","xm2","ym2","selectedLine","stretchParam","calcStretchPositions","targetLines","newLines","subindex","createStore","StrokeComponent","props","polygons","key","GlyphComponent","nonSelection","_polygons","className","onMouseDown","handleMouseDownDeselectedStroke","Stroke","handleMouseDownSelectedStroke","AreaSelectRect","rect","temp","width","height","getMatchType","none","isOnline","match","online","ControlPoint","handleMouseDown","selectionControlSelector","rectControl","pointControl","selectedStrokes","multiSelect","coords","selectedStroke","matchType","SelectionControl","useSelector","useDispatch","handleMouseDownRectControl","useCallback","stopPropagation","handleMouseDownNorthPoint","handleMouseDownWestPoint","handleMouseDownSouthPoint","handleMouseDownEastPoint","handleMouseDownSoutheastPoint","handleMouseDownPointControls","useMemo","_control","GlyphArea","handleMouseDownCapture","ctm","currentTarget","getScreenCTM","pt","createSVGPoint","ictm","inverse","evtx","evty","matrixTransform","handleMouseDownBackground","shiftKey","ctrlKey","useEffect","handleMouseMove","handleMouseUp","document","addEventListener","removeEventListener","viewBox","onMouseDownCapture","strokeInfoSelector","selectedStroke_","headShapeType","tailShapeType","validTypes","coordString","partInfoSelector","entityName","aliasMatch","stretchCoeff","otherInfoSelector","isMultiple","selectIndexStringSelector","glyphLength","selectedIndexString","sort","b","buttonsDisabledSelector","swapPrevDisabled","swapNextDisabled","selectPrevDisabled","selectNextDisabled","SelectionInfo","strokeInfo","partInfo","otherInfo","selectIndexString","shallowEqual","t","useTranslation","onChange","entity","type","disabled","onClick","EditorControls","pasteDisabled","decomposeDisabled","options","finishEdit","App","useHotkeys","preventDefault","useShortcuts","Boolean","hostname","resources","ja","translation","host","lng","i18n","use","initReactI18next","init","returnObjects","interpolation","escapeValue","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"o7GAGYA,E,wDCECC,EAAgB,SAACC,GAC5B,OAAQA,GACN,KAAK,EACL,KAAK,EACL,KAAK,EACH,OAAO,EACT,KAAK,EACL,KAAK,EACL,KAAK,EACH,OAAO,EACT,KAAK,EACL,KAAK,EACL,KAAK,GACH,OAAO,GACT,QACE,OAAO,IAmBAC,EAAmB,SAACC,GAC/B,IAAMC,EAA8BD,EAAUE,MAAMC,QAIpD,OAHkB,KAAdF,EAAO,KACTA,EAAO,GAAKD,EAAUI,UAAY,IAE7BH,EAAOI,KAAK,MAcRC,EAAa,SAACC,GAAD,OACxBA,EAASC,MAAM,YACZC,KAAI,SAACC,GAAD,OApCqB,SAACC,GAK7B,IAJA,IAAMC,EAAYD,EAAaH,MAAM,KAC/BV,GAAcc,EAAU,GACxBC,EAAahB,EAAcC,GAC3BI,EAAQ,GACLY,EAAI,EAAGA,EAAID,EAAYC,IAC9BZ,EAAMa,KAAKC,KAAKC,OAAOL,EAAUE,IAAM,IAEzC,OAAiB,KAAbZ,EAAM,GAED,CAAEA,QAAOE,SADCQ,EAAU,IAAM,IAG5B,CAAEV,SAwBQgB,CAAeR,MAC7BS,QAAO,SAACC,GAAD,OAbiB,KADIpB,EAcOoB,GAb5BlB,MAAMmB,SAES,IAAvBrB,EAAUE,MAAM,IACO,KAAvBF,EAAUE,MAAM,IAAoC,KAAvBF,EAAUE,MAAM,IAAoC,KAAvBF,EAAUE,MAAM,IAJ9C,IAACF,MC7ClBsB,EAFF,IAAIC,gBAAgBC,OAAOC,SAASC,KAAKvB,MAAM,I,+BCEtDwB,EAAgBC,IAAqB,UAE9BC,EAAgB,CAC3BC,aAAcH,EAAsB,iBACpCI,gBAAiBJ,EAAsB,qBACvCK,mBAAoBL,EAAsB,wBAC1CM,WAAYN,EAAc,eAC1BO,UAAWP,EAAc,cACzBQ,iBAAkBR,EAAc,qBAChCS,WAAYT,EAAc,eAC1BU,WAAYV,EAAc,gB,yBHThB/B,O,iBAAAA,I,iBAAAA,I,eAAAA,I,eAAAA,I,0BAAAA,M,KAQZ,IITY0C,EJSNX,EAAgBC,IAAqB,UAE9BW,EAAc,CACzBC,gBAAiBb,EAAgC,qBACjDc,mBAAoBd,EAAgC,wBACpDe,eAAgBf,EAA0C,oBAC1DgB,YAAahB,EAAqD,gBAElEiB,UAAWjB,EAA0B,cACrCkB,QAASlB,EAA0B,YAEnCmB,aAAcnB,EAAsB,kB,cKJhCoB,EAAuE,CAC3E,CAEE,CACEC,SAAU,QACVC,YAAa,CAAC,GACdC,WAAY,CAAC,IAEf,CACEF,SAAU,QACVC,YAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7BC,WAAY,CAAC,MAGjB,CAEE,CACEF,SAAU,QACVC,YAAa,CAAC,GACdC,WAAY,CAAC,IAEf,CACEF,SAAU,MACVC,YAAa,CAAC,GACdC,WAAY,CAAC,GAAI,IAAK,OAG1B,CAEE,CACEF,SAAU,MACVC,YAAa,CAAC,GACdC,WAAY,CAAC,IAEf,CACEF,SAAU,QACVC,YAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7BC,WAAY,CAAC,MAGjB,CAEE,CACEF,SAAU,MACVC,YAAa,CAAC,GACdC,WAAY,CAAC,IAEf,CACEF,SAAU,MACVC,YAAa,CAAC,GACdC,WAAY,CAAC,GAAI,OAKjBC,EAAwB,SAAChC,EAAgCiC,GAAjC,OAC5BjC,EAAO6B,WAAaI,EAAMJ,UAC1B7B,EAAO8B,YAAYI,SAASD,EAAMtD,aAClCqB,EAAO+B,WAAWG,SAASD,EAAME,YAY7BC,EAAuB,SAACvD,GAC5B,IAAMwD,EAA6B,GACnC,OAAQxD,EAAUE,MAAM,IACtB,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACHsD,EAAOzC,KAAK,CACViC,SAAU,QACVlD,WAAYE,EAAUE,MAAM,GAC5BoD,UAAWtD,EAAUE,MAAM,GAC3BuD,MAAO,CACLzD,EAAUE,MAAM,GAChBF,EAAUE,MAAM,IAElBwD,WAAY,IAEd,IAAMC,GAAiB9D,EAAcG,EAAUE,MAAM,IAAM,GAAK,EAAI,EACpEsD,EAAOzC,KAAK,CACViC,SAAU,MACVlD,WAAYE,EAAUE,MAAM,GAC5BoD,UAAWtD,EAAUE,MAAM,GAC3BuD,MAAO,CACLzD,EAAUE,MAAM,EAAoB,EAAhByD,GACpB3D,EAAUE,MAAM,EAAoB,EAAhByD,EAAoB,IAE1CD,WAAYC,IAKlB,OAAOH,GAGII,EAAwBC,aAAW,SAACC,EAAcC,GAC7D,IAD8G,EACxGC,EAA8B,GAD0E,cAEtED,GAFsE,IAE9G,2BAAgD,CAAC,IAAD,YAAnCE,EAAmC,EAAnCA,UAAWP,EAAwB,EAAxBA,WAAwB,cACzBH,EAAqBO,EAAMG,KADF,IAC9C,2BAA6D,CAAC,IAAnDC,EAAkD,QACvDA,EAAOR,aAAeA,GACxBM,EAAQjD,KAAKmD,IAH6B,gCAF8D,8BAS9G,IAAMV,EAA4B,GAWlC,OAVAM,EAAMK,SAAQ,SAACnE,EAAWiE,GAAe,IAAD,gBACjBV,EAAqBvD,IADJ,yBAC3BoE,EAD2B,QAEhCJ,EAAQK,MAAK,SAACH,GAAD,OAzD0BI,EAyDQF,GAzDlCG,EAyD0BL,GAxDxCT,MAAM,KAAOa,EAAOb,MAAM,IACjCc,EAAOd,MAAM,KAAOa,EAAOb,MAAM,IACjCV,EAAiBsB,MAAK,mCAAEG,EAAF,KAAWC,EAAX,YACnBtB,EAAsBqB,EAASD,IAAWpB,EAAsBsB,EAASH,IACzEnB,EAAsBsB,EAASF,IAAWpB,EAAsBqB,EAASF,MALxD,IAACC,EAA0BD,MA0DzCd,EAAOzC,KAAK,CACVkD,YACAP,WAAYU,EAAOV,cAJzB,2BAAuD,IADjB,kCAUjCF,KACN,qCAAEkB,EAAF,KAAUC,EAAV,wBAAqBC,EAArB,KAA6BC,EAA7B,YACDH,IAAWE,GACXD,EAAQtD,SAAWwD,EAAQxD,QAC3BsD,EAAQG,OAAM,SAACP,EAAQQ,GAAT,OACZR,EAAON,YAAcY,EAAQE,GAAOd,WACpCM,EAAOb,aAAemB,EAAQE,GAAOrB,iBAI5BsB,EAAmCnB,aAAW,SAACC,EAAcmB,GACxE,IADmH,EAC7GC,EAAmC,GAD0E,cAE3FD,GAF2F,IAEnH,2BAAmC,CAAC,IAAzBhB,EAAwB,QAC3BjE,EAAY8D,EAAMG,GACxBiB,EAAcnE,KAAK,CAAEkD,YAAWP,WAAY,IAC5CwB,EAAcnE,KAAK,CAAEkD,YAAWP,YAAa7D,EAAcG,EAAUE,MAAM,IAAM,GAAK,EAAI,KALuB,8BAOnH,OAAO0D,EAAsBE,EAAOoB,GACjC/D,QAAO,gBAAG8C,EAAH,EAAGA,UAAH,OAAoBgB,EAAU5B,SAASY,SC7JtCkB,EAA0B,SAACnF,EAAsBoF,EAA2BC,GACvF,OAAQrF,EAAUE,MAAM,IACtB,KAAK,GACH,IAAMA,EAAQF,EAAUE,MAAMC,QAK9B,OAJAD,EAAM,GAAKkF,EAAGlF,EAAM,IACpBA,EAAM,GAAKmF,EAAGnF,EAAM,IACpBA,EAAM,GAAKkF,EAAGlF,EAAM,IACpBA,EAAM,GAAKmF,EAAGnF,EAAM,IACb,CAAEA,QAAOE,SAAUJ,EAAUI,UAEtC,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAEH,IADA,IAAMF,EAAQF,EAAUE,MAAMC,QACrBW,EAAI,EAAGA,EAAI,GAAKZ,EAAMmB,OAAQP,GAAK,EAC1CZ,EAAMY,GAAKsE,EAAGlF,EAAMY,IACpBZ,EAAMY,EAAI,GAAKuE,EAAGnF,EAAMY,EAAI,IAE9B,MAAO,CAAEZ,SAEX,QACE,OAAOF,IAIAsF,EAA2B,SAACxB,EAAcyB,EAA2BH,EAA2BC,GAC3G,GAAsB,IAAlBE,EAAOlE,OACT,OAAOyC,EAET,IAJgJ,EAI1I0B,EAAW1B,EAAM3D,QAJyH,cAKxGoF,GALwG,IAKhJ,2BAAgD,CAAC,IAAD,UAAnCtB,EAAmC,EAAnCA,UAAWP,EAAwB,EAAxBA,WAChB1D,EAAYwF,EAASvB,GACrBwB,EAAWzF,EAAUE,MAAMC,QACjCsF,EAAS,EAAiB,EAAb/B,GAAkB0B,EAAGK,EAAS,EAAiB,EAAb/B,IAC/C+B,EAAS,EAAiB,EAAb/B,EAAiB,GAAK2B,EAAGI,EAAS,EAAiB,EAAb/B,EAAiB,IACpE8B,EAASvB,GAAT,2BACKjE,GADL,IAEEE,MAAOuF,KAZqI,8BAehJ,OAAOD,GAIIE,EAAyB,SAAC5B,EAAcmB,EAAqBU,EAAYC,GACpF,GAAyB,IAArBX,EAAU5D,OACZ,OAAOyC,EAET,IAAM+B,EAAcb,EAAiClB,EAAOmB,GAEtDG,EAAK,SAACU,GAAD,OAAe9E,KAAK+E,MAAMD,EAAIH,IACnCN,EAAK,SAACW,GAAD,OAAehF,KAAK+E,MAAMC,EAAIJ,IAMzC,OALA9B,EAAQA,EAAMrD,KAAI,SAACT,EAAW+E,GAAZ,OAAsBE,EAAU5B,SAAS0B,GACvDI,EAAwBnF,EAAWoF,EAAIC,GACvCrF,KAEJ8D,EAAQwB,EAAyBxB,EAAO+B,EAAaT,EAAIC,IAI9CY,EAAoB,SAACnC,EAAcmB,EAAqBvB,EAAoBiC,EAAYC,GACnG,GAAyB,IAArBX,EAAU5D,OACZ,OAAOyC,EAET,IAAMG,EAAYgB,EAAU,GACtBiB,EAAgC,CAAEjC,YAAWP,cAC7CmC,EAAcjC,EAAsBE,EAAO,CAACoC,IAC/C/E,QAAO,SAACgF,GAAD,OAAgBA,EAAWlC,YAAcA,KACnD4B,EAAY9E,KAAKmF,GAKjB,OADApC,EAAQwB,EAAyBxB,EAAO+B,GAF7B,SAACC,GAAD,OAAe9E,KAAK+E,MAAMD,EAAIH,MAC9B,SAACK,GAAD,OAAehF,KAAK+E,MAAMC,EAAIJ,OAa9BQ,EAA2B,SAACtC,EAAcmB,EAAqBoB,EAAaC,GACvF,OAAOxC,EAAMrD,KAAI,SAACT,EAAW+E,GAAZ,OAAsBE,EAAU5B,SAAS0B,GAT7B,SAAC/E,EAAsBqG,EAAaC,GAA4B,IAAD,cAC/DD,EAD+D,GACrFE,EADqF,KAChFC,EADgF,KAC3EC,EAD2E,KACtEC,EADsE,mBAE/DJ,EAF+D,GAErFK,EAFqF,KAEhFC,EAFgF,KAE3EC,EAF2E,KAEtEC,EAFsE,KAK5F,OAAO3B,EAAwBnF,GAFpB,SAAC8F,GAAD,OAAe9E,KAAK+E,MAAMY,GAAOb,EAAIS,IAAQM,EAAMF,IAAQF,EAAMF,OACjE,SAACP,GAAD,OAAehF,KAAK+E,MAAMa,GAAOZ,EAAIQ,IAAQM,EAAMF,IAAQF,EAAMF,OAMxEO,CAAgB/G,EAAWqG,EAAQC,GACnCtG,M,QC7FA2B,EAAgBC,IAAqB,UAE9BoF,EAAgB,CAC3BC,YAAatF,EAAgC,mBAC7CuF,mBAAoBvF,EAAsC,sBAE1DwF,iBAAkBxF,EAAsB,sBACxCyF,oBAAqBzF,EAAsB,0BAC3C0F,oBAAqB1F,EAAsB,0BAC3C2F,mBAAoB3F,EAAsB,wBAE1C4F,aAAc5F,EAAc,kBAC5B6F,aAAc7F,EAAc,kBAE5B8F,KAAM9F,EAAc,QACpB+F,KAAM/F,EAAc,QAEpBgG,MAAOhG,EAAc,SACrBiG,KAAMjG,EAAc,kBACpBkG,IAAKlG,EAAc,iBACnBmG,OAAQnG,EAAc,oBACtBoG,kBAAmBpG,EAAc,uBACjCqG,aAAcrG,EAAgC,iBAE9CsG,eAAgBtG,EAAc,wBAE9BuG,gBAAiBvG,EAAc,qBAC/BwG,iBAAkBxG,EAAc,uB,wBC3B5ByG,EAAO,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACSC,MAHJ,6DAGyBF,GAD9B,WACRG,EADQ,QAEAC,GAFA,sBAGN,IAAIC,MAAM,sBAHJ,mBAKHnH,gBALG,SAKmBiH,EAASG,OAL5B,wGAAH,sDAQAC,EAAS,uCAAG,WAAOC,GAAP,eAAAP,EAAA,sEACFF,EAAQ,wBAAD,OAAyBU,mBAAmBD,KADjD,cACjBrF,EADiB,yBAEhBA,EAAOuF,IAAI,SAFK,2CAAH,sDCDTC,EAAO,IAAIC,OAEpBC,EAAU,IAAIC,IA2BLC,EAAqBvF,aAAW,SAACC,EAAcrD,GAC1D,IAAM4I,EAAOvF,EAAMrD,IAAIV,GAUvB,OATAiJ,EAAKM,OAAOC,OAAS,SAACV,GACpB,IAAMrF,EAAS/C,EAAIsI,IAAIF,GACvB,MAAsB,qBAAXrF,GA9BS,SAACqF,GACnBK,EAAQM,IAAIX,KAGhBK,EAAQO,IAAIZ,GACZD,EAAUC,GACPa,MAAK,SAACC,GACL,GAAsB,kBAAXA,EACT,MAAM,IAAIjB,MAAJ,wCAA2CG,IAEnD,IAAMe,EAAe,iDAAiDC,KAAKF,GAC3E,GAAIC,EAAc,CAChB,IAAME,EAAuB,EAC1BF,EAAa,IAAM,GACnBA,EAAa,IAAM,GACnBA,EAAa,IAAM,GACnBA,EAAa,IAAM,GAEtBG,GAAMC,SAAShD,EAAcE,mBAAmB,CAAC2B,EAAMiB,KAEzDC,GAAMC,SAAShD,EAAcC,YAAY,CAAC4B,EAAMc,KAChDT,EAAQpB,OAAOe,MAEhBoB,OAAM,SAACC,GAAD,OAASC,QAAQC,MAAMF,OAQ5BG,CAAgBxB,GACT,IAEFrF,GAEMwF,EAAKI,mBAAmBC,M,OC5C5BiB,EAAc,SAACvG,GAC1B,IAAMwG,EAAKxG,EAAOtD,KAAI,0CAChB+J,EAAKzG,EAAOtD,KAAI,0CACtB,MAAO,CACLO,KAAKyJ,IAAL,MAAAzJ,KAAI,YAAQuJ,IACZvJ,KAAKyJ,IAAL,MAAAzJ,KAAI,YAAQwJ,IACZxJ,KAAK0J,IAAL,MAAA1J,KAAI,YAAQuJ,IACZvJ,KAAK0J,IAAL,MAAA1J,KAAI,YAAQwJ,MAIHG,EAAkB,SAAC3K,GAC9B,OAAQA,EAAUE,MAAM,IACtB,KAAK,GACH,OAAOoK,EAAY,CACjB,CAACtK,EAAUE,MAAM,GAAIF,EAAUE,MAAM,IACrC,CAACF,EAAUE,MAAM,GAAIF,EAAUE,MAAM,MAEzC,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAEH,IADA,IAAM6D,EAA6B,GAC1BjD,EAAI,EAAGA,EAAI,GAAKd,EAAUE,MAAMmB,OAAQP,GAAK,EACpDiD,EAAOhD,KAAK,CAACf,EAAUE,MAAMY,GAAId,EAAUE,MAAMY,EAAI,KAEvD,OAAOwJ,EAAYvG,GAErB,QACE,OAAOuG,EAAY,MAIZM,EAAW,SAAC,EAAD,0BAAErE,EAAF,KAAOC,EAAP,KAAYC,EAAZ,KAAiBC,EAAjB,wBAA6BC,EAA7B,KAAkCC,EAAlC,KAAuCC,EAAvC,KAA4CC,EAA5C,WAA+D,CACrF9F,KAAKyJ,IAAIlE,EAAKI,GACd3F,KAAKyJ,IAAIjE,EAAKI,GACd5F,KAAK0J,IAAIjE,EAAKI,GACd7F,KAAK0J,IAAIhE,EAAKI,KAGH+D,EAAmBhH,aAAW,SAACiH,GAC1C,OAAOA,EAAWrK,IAAIkK,GAAiBI,OAAOH,EAAUN,EAAY,QACnE,kBAAEU,EAAF,oBAAaC,EAAb,2BACDD,EAAQ3J,SAAW4J,EAAQ5J,QAC3B2J,EAAQlG,OAAM,SAACoG,EAAQnG,GAAT,OAAmBmG,IAAWD,EAAQlG,SC5CzCoG,GAAiB,SAACrH,EAAcmB,EAAqBjC,EAA6B2C,EAAYC,GACzG,GAAyB,IAArBX,EAAU5D,OAAc,CAC1B,IAAM+J,EAAoBtH,EAAMmB,EAAU,IAC1C,OAAQmG,EAAkBlL,MAAM,IAC9B,KAAK,EACL,KAAK,EACL,KAAK,GACH,IAAMuF,EAAW2F,EAAkBlL,MAAMC,QACzC,OAAQ6C,GACN,KAAKpD,EAAkByL,MACrB5F,EAAS,IAAMG,EACf,MACF,KAAKhG,EAAkB0L,KACrB7F,EAAS,IAAME,EACf,MACF,KAAK/F,EAAkB2L,MACrB9F,EAAS,IAAMG,EACf,MACF,KAAKhG,EAAkB4L,KACrB/F,EAAS,IAAME,EACf,MACF,KAAK/F,EAAkB6L,UACrBhG,EAAS,IAAME,EACfF,EAAS,IAAMG,EAMnB,IAAM8F,EAAyD,KAA/BN,EAAkBlL,MAAM,GACpD,CAAEA,MAAOuF,EAAUrF,SAAUgL,EAAkBhL,UAC/C,CAAEF,MAAOuF,GACb,OAAO3B,EAAMrD,KAAI,SAACT,EAAW+E,GAAZ,OAAsBA,IAAUE,EAAU,GAAKyG,EAAe1L,MAIrF,IACMqG,EAASwE,EAAiB5F,EAAUxE,KAAI,SAACsE,GAAD,OAAWjB,EAAMiB,OACzDuB,EAASD,EAAOlG,QACtB,OAAQ6C,GACN,KAAKpD,EAAkByL,MACrB/E,EAAO,GAAKtF,KAAKyJ,IAAInE,EAAO,GAAKV,EAAIU,EAAO,GALhC,IAMZ,MACF,KAAK1G,EAAkB0L,KACrBhF,EAAO,GAAKtF,KAAKyJ,IAAInE,EAAO,GAAKX,EAAIW,EAAO,GARhC,IASZ,MACF,KAAK1G,EAAkB2L,MACrBjF,EAAO,GAAKtF,KAAK0J,IAAIpE,EAAO,GAAKV,EAAIU,EAAO,GAXhC,IAYZ,MACF,KAAK1G,EAAkB4L,KACrBlF,EAAO,GAAKtF,KAAK0J,IAAIpE,EAAO,GAAKX,EAAIW,EAAO,GAdhC,IAeZ,MACF,KAAK1G,EAAkB6L,UACrBnF,EAAO,GAAKtF,KAAK0J,IAAIpE,EAAO,GAAKX,EAAIW,EAAO,GAjBhC,IAkBZA,EAAO,GAAKtF,KAAK0J,IAAIpE,EAAO,GAAKV,EAAIU,EAAO,GAlBhC,IAwBhB,OAAOF,EAAyBtC,EAAOmB,EAAWoB,EAAQC,IAG/CqF,GAAuBC,YAAe,CACjD,SAACC,GAAD,OAAqBA,EAAM/H,OAC3B,SAAC+H,GAAD,OAAqBA,EAAM5G,WAC3B,SAAC4G,GAAD,OAAqBA,EAAMC,eAC3B,SAACD,GAAD,OAAqBA,EAAME,WAC3B,SAACF,GAAD,OAAqBA,EAAMG,mBAC1B,SAAClI,EAAOmB,EAAW6G,EAAeC,EAAWC,GAC9C,GAAIF,EAAe,CAAC,IAAD,cACQA,EADR,GACVG,EADU,KACNC,EADM,KACFC,EADE,KACEC,EADF,KAIjBtI,EAAQ4B,EAAuB5B,EAAOmB,EAF3BkH,EAAKF,EACLG,EAAKF,QAEX,GAAIH,EAAW,CAAC,IAAD,cACmBA,EADnB,GACbrI,EADa,2BACAuI,EADA,KACIC,EADJ,KACQC,EADR,KACYC,EADZ,KAIpBtI,EAAQmC,EAAkBnC,EAAOmB,EAAWvB,EAFjCyI,EAAKF,EACLG,EAAKF,QAEX,GAAIF,EAAiB,CAAC,IAAD,cACWA,EADX,GACnBhJ,EADmB,2BACRiJ,EADQ,KACJC,EADI,KACAC,EADA,KACIC,EADJ,KAI1BtI,EAAQqH,GAAerH,EAAOmB,EAAWjC,EAF9BmJ,EAAKF,EACLG,EAAKF,GAGlB,OAAOpI,KC3FIuI,GAAsB,SAACrM,GAClC,OAA2B,KAAvBA,EAAUE,MAAM,GACX,KAMF,CAJIF,EAAUE,MAAM,GAChBF,EAAUE,MAAM,IAChBF,EAAUE,MAAM,GAChBF,EAAUE,MAAM,KAIhBoM,GAAsB,SAACtM,EAAsBuM,GACxD,GAA2B,KAAvBvM,EAAUE,MAAM,GAClB,OAAOF,EAF0F,kBAI1EuM,EAJ0E,GAI5FC,EAJ4F,KAIxFC,EAJwF,KAIpFC,EAJoF,KAIhFC,EAJgF,KAM7FlH,EAAWzF,EAAUE,MAAMC,QAKjC,OAJAsF,EAAS,GAAK+G,EACd/G,EAAS,IAAMgH,EACfhH,EAAS,GAAKiH,EACdjH,EAAS,GAAKkH,EACP,CAAEzM,MAAOuF,EAAUrF,SAAUJ,EAAUI,WAGnCwM,GAA4B,SAACL,GAAmD,IAAD,cACnEA,EADmE,GACrFC,EADqF,KACjFC,EADiF,KAC7EC,EAD6E,KAM1F,OAJIA,GAAM,MACRA,GAAM,IACNF,EAAKC,EAAK,GAEL,CAACD,EAAIC,EAAIC,EAN0E,OAqB/EG,GAAoB,SAACC,EAAqBP,GAAyC,IAAD,cACpEO,EADoE,GACtFC,EADsF,KAClFC,EADkF,KAC9Ef,EAD8E,KAC1EC,EAD0E,KAE7F,GAAIa,IAAOd,GAAMe,IAAOd,EACtB,OAAO,EAHoF,IAFnEe,EAEmE,EAKpEL,GAA0BL,GAL0C,mBAKtFC,EALsF,KAKlFC,EALkF,KAK9EC,EAL8E,KAK1EC,EAL0E,KAM7F,OAAIH,IAAOE,EAAK,KAAOD,IAAOE,EACrB,GATiBM,EAWAjM,KAAK+E,MAC7B/E,KAAKkM,IAAIH,EAAKd,GAAMjL,KAAKkM,IAAIF,EAAKd,IAC7BQ,EAAK,IAAMK,IAAOd,EAAKc,GAAM,IAC7BJ,EAAK,IAAMK,IAAOd,EAAKc,GAAM,IAdYhM,KAAK0J,KAAK,GAAI1J,KAAKyJ,IAAI,GAAIwC,KAerE,IC1DKE,GAAY,SAACnN,EAAsBoN,GAC9C,GAA2B,KAAvBpN,EAAUE,MAAM,GAClB,MAAO,CAACF,GAEV,IAAMqN,EAAcD,EAASrE,IAAI/I,EAAUI,UAC3C,IAAKiN,EACH,MAAO,CAACrN,GAGV,IAAIsN,GAAc,EAClBtE,EAAKM,OAAOC,OAAS,SAACV,GACpB,IAAMQ,EAAO+D,EAASrE,IAAIF,GAC1B,MAAoB,kBAATQ,GACTiE,GAAc,EACP,IAEFjE,GAGT,IAAMvF,EAAQxD,EAAW+M,GAEnBE,EAEJvE,EAAKwE,eZmCmB,SAAC1J,GAAD,OAC1BA,EACGrD,KAAI,SAACW,GAAD,OAAWrB,EAAiBqB,MAChCf,KAAK,KYrCJoN,CAAa3J,IAEX4J,EAEJ1E,EAAK2E,OACHJ,GAGJ,GAAID,EACF,MAAO,CAACtN,GAGV,IAAMiM,EAAKjM,EAAUE,MAAM,GACrBgM,EAAKlM,EAAUE,MAAM,GACrBiM,EAAKnM,EAAUE,MAAM,GACrBkM,EAAKpM,EAAUE,MAAM,GAvCkE,EAwCpE0M,GAA0BP,GAAoBrM,IAxCsB,mBAwCtFwM,EAxCsF,KAwClFC,EAxCkF,KAwC9EC,EAxC8E,KAwC1EC,EAxC0E,KAyCvFiB,IAAqBpB,IAAOE,EAAK,KAAOD,IAAOE,GAErD,OAAO7I,EAAMrD,KAAI,SAACoN,GAChB,IAYMnC,EAAevG,EAAwB0I,GAZlC,SAAC/H,GACV,IAAMgI,EAAaF,EACf5E,EAAK+E,QAAQrB,EAAK,IAAKF,EAAI1G,EAAG4H,EAAIM,KAAMN,EAAIO,MAC5CnI,EACJ,OAAO9E,KAAK+E,MAAM+H,EAAa,KAAO3B,EAAKF,GAAMA,MAExC,SAACjG,GACV,IAAMkI,EAAaN,EACf5E,EAAK+E,QAAQpB,EAAIF,EAAIzG,EAAG0H,EAAIS,KAAMT,EAAIU,MACtCpI,EACJ,OAAOhF,KAAK+E,MAAMmI,EAAa,KAAO9B,EAAKF,GAAMA,MAInD,IAAM0B,GAA8C,KAA1BlC,EAAaxL,MAAM,GAC3C,OAAOwL,EAhBwB,MAmBJkB,GAA0BP,GAAoBX,IAnB1C,mBAmB1B2C,EAnB0B,KAmBrBC,EAnBqB,KAmBhBC,EAnBgB,KAmBXC,EAnBW,KAoBjC,GAAMH,IAAQE,EAAM,KAAOD,IAAQE,EAEjC,OAAO9C,EAGT,IAAM+C,EAAM/C,EAAaxL,MAAM,GACzBwO,EAAMhD,EAAaxL,MAAM,GACzByO,EAAMjD,EAAaxL,MAAM,GACzB0O,EAAMlD,EAAaxL,MAAM,GAE/B,GAAIuO,IAAQE,GAAOD,IAAQE,EACzB,OAAOlD,EAGT,IAAMmD,EAAO,SAAC/I,GAAD,OAAgBA,EAAI2I,IAAQE,EAAMF,GAAO,KAChDK,EAAO,SAAC9I,GAAD,OAAgBA,EAAI0I,IAAQE,EAAMF,GAAO,KACtD,OAAOpC,GAAoBZ,EAAc,CACvCmD,EAAKR,EAAM,KACXS,EAAKR,EAAM,KACXO,EAAKN,EAAM,KAAO,IAClBO,EAAKN,EAAM,WCrFJvL,GAAc,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAE9B8L,GAA2C,CACtDC,EAAG,CAAC,EAAG,EAAG,GAAI,GAAI,IAClBC,EAAG,CAAC,EAAG,GAAI,GAAI,GAAI,GACnBC,EAAG,CAAC,EAAG,GAAI,GAAI,IACfC,EAAG,CAAC,EAAG,IACPC,EAAG,CAAC,EAAG,GAAI,GAAI,GAAI,GACnBC,EAAG,CAAC,EAAG,GAAI,GAAI,KAGJC,GAA2C,CACtDN,EAAG,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,IAAK,IACnCC,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,GAChBC,EAAG,CAAC,EAAG,GACPC,EAAG,CAAC,EAAG,GACPC,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,GAChBC,EAAG,CAAC,IA+GAE,GAAoD,CACxD,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IACP,CAAC,EAAG,EAAG,IACP,CAAC,EAAG,EAAG,IACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,KACP,CAAC,EAAG,EAAG,KACP,CAAC,EAAG,EAAG,IACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,KACR,CAAC,EAAG,GAAI,KACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,KACR,CAAC,EAAG,GAAI,KACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,KACR,CAAC,EAAG,GAAI,KACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,IAGGC,GAA0B3L,aAAW,SAAC4L,GACjD,OAAKxM,GAAYI,SAASoM,EAAOvP,MAAM,KAIhCqP,GAAsBlL,MAAK,mCAAEqL,EAAF,KAAMC,EAAN,KAAUC,EAAV,YAChCF,IAAOD,EAAOvP,MAAM,IACpByP,IAAOF,EAAOvP,MAAM,IACpB0P,IAAOH,EAAOvP,MAAM,SC5MlB2P,GAAe,SAAC/L,EAAciB,EAAe/E,GACjD,IAAMwF,EAAW1B,EAAM3D,QAEvB,OADAqF,EAAST,GAAS/E,EACXwF,GCYHsK,GAAyB,CAC7BhM,MAAOxD,EAAWgB,EAAKyH,IAAI,SAAW,IACtC9D,UAAW,GACX8K,eAAgB,KAChBjE,cAAe,KACfC,UAAW,KACXC,gBAAiB,KACjBgE,OAAQ,KACR5C,SAAU,IAAI6C,IACdC,gBAAiB,IAAID,IACrBE,cAAc,EACdC,iBAAiB,EACjBC,UAAW,IAQEC,GALCC,kCAAwBT,IACrCU,cCtCY,SAACC,GAAD,OAAuCA,EACnDC,KAAK7O,EAAcC,cAAc,SAAC+J,EAAO9G,GAAR,mBAAC,eAC9B8G,GAD6B,IAEhC5G,UAAW,CAACF,QAEb2L,KAAK7O,EAAcE,iBAAiB,SAAC8J,EAAO9G,GAAR,mBAAC,eACjC8G,GADgC,IAEnC5G,UAAW4G,EAAM5G,UAAU5B,SAAS0B,GAAS8G,EAAM5G,UAAY4G,EAAM5G,UAAU0L,OAAO,CAAC5L,SAExF2L,KAAK7O,EAAcG,oBAAoB,SAAC6J,EAAO9G,GAAR,mBAAC,eACpC8G,GADmC,IAEtC5G,UAAW4G,EAAM5G,UAAU9D,QAAO,SAACyP,GAAD,OAAY7L,IAAU6L,UAEzDF,KAAK7O,EAAcK,WAAW,SAAC2J,GAAD,mBAAC,eAC3BA,GAD0B,IAE7B5G,UAAW4G,EAAM/H,MAAMrD,KAAI,SAACoQ,EAAQ9L,GAAT,OAAmBA,UAE/C2L,KAAK7O,EAAcM,kBAAkB,SAAC0J,GAAD,mBAAC,eAClCA,GADiC,IAEpC5G,UAAW4G,EAAM/H,MAAMrD,KAAI,SAACoQ,EAAQ9L,GAAT,OAAmBA,KAAO5D,QAAO,SAAC4D,GAAD,OAAY8G,EAAM5G,UAAU5B,SAAS0B,WAElG2L,KAAK7O,EAAcI,YAAY,SAAC4J,GAAD,mBAAC,eAC5BA,GAD2B,IAE9B5G,UAAW,QAEZyL,KAAK7O,EAAcO,YAAY,SAACyJ,GAC/B,GAA2B,IAAvBA,EAAM/H,MAAMzC,OACd,OAAO,2BAAKwK,GAAZ,IAAmB5G,UAAW,KAEhC,IAAM6L,EAA2C,IAA3BjF,EAAM5G,UAAU5D,OAAe,EAAIL,KAAKyJ,IAAL,MAAAzJ,KAAI,YAAQ6K,EAAM5G,YAC3E,OAAO,2BACF4G,GADL,IAEE5G,UAAW,EAAE6L,EAAgB,EAAIjF,EAAM/H,MAAMzC,QAAUwK,EAAM/H,MAAMzC,aAGtEqP,KAAK7O,EAAcQ,YAAY,SAACwJ,GAC/B,GAA2B,IAAvBA,EAAM/H,MAAMzC,OACd,OAAO,2BAAKwK,GAAZ,IAAmB5G,UAAW,KAEhC,IAAM6L,EAA2C,IAA3BjF,EAAM5G,UAAU5D,QAAgB,EAAIL,KAAK0J,IAAL,MAAA1J,KAAI,YAAQ6K,EAAM5G,YAC5E,OAAO,2BACF4G,GADL,IAEE5G,UAAW,EAAE6L,EAAgB,EAAIjF,EAAM/H,MAAMzC,QAAUwK,EAAM/H,MAAMzC,gBDHtEmP,cEDY,SAACC,GAAD,OAAuCA,EACnDC,KAAKnO,EAAYC,iBAAiB,SAACqJ,EAAOkF,GACzC,IAAKlF,EAAMmE,OACT,OAAOnE,EAFwC,MAIhCA,EAAMmE,OAAOe,EAAIC,QAASD,EAAIE,SAJE,mBAI1ChF,EAJ0C,KAItCC,EAJsC,KAKjD,OAAO,2BACFL,GADL,IAEEkE,eAAgB,CAAC9D,EAAIC,EAAID,EAAIC,QAGhCwE,KAAKnO,EAAYE,oBAAoB,SAACoJ,EAAOkF,GAC5C,IAAKlF,EAAMmE,OACT,OAAOnE,EAF2C,MAInCA,EAAMmE,OAAOe,EAAIC,QAASD,EAAIE,SAJK,mBAI7ChF,EAJ6C,KAIzCC,EAJyC,KAKpD,OAAO,2BACFL,GADL,IAEEC,cAAe,CAACG,EAAIC,EAAID,EAAIC,QAG/BwE,KAAKnO,EAAYG,gBAAgB,SAACmJ,EAAD,GAA+B,IAAD,mBAArBkF,EAAqB,KAAhBrN,EAAgB,KAC9D,IAAKmI,EAAMmE,OACT,OAAOnE,EAFqD,MAI7CA,EAAMmE,OAAOe,EAAIC,QAASD,EAAIE,SAJe,mBAIvDhF,EAJuD,KAInDC,EAJmD,KAK9D,OAAO,2BACFL,GADL,IAEEE,UAAW,CAACrI,EAAY,CAACuI,EAAIC,EAAID,EAAIC,SAGxCwE,KAAKnO,EAAYI,aAAa,SAACkJ,EAAD,GAA6B,IAAD,mBAAnBkF,EAAmB,KAAd/N,EAAc,KACzD,IAAK6I,EAAMmE,OACT,OAAOnE,EAFgD,MAIxCA,EAAMmE,OAAOe,EAAIC,QAASD,EAAIE,SAJU,mBAIlDhF,EAJkD,KAI9CC,EAJ8C,KAKzD,OAAO,2BACFL,GADL,IAEEG,gBAAiB,CAAChJ,EAAU,CAACiJ,EAAIC,EAAID,EAAIC,SAI5CwE,KAAKnO,EAAYK,WAAW,SAACiJ,EAAOkF,GACnC,IAAKlF,EAAMmE,OACT,OAAOnE,EAET,GAAIA,EAAMkE,eAAgB,CAAC,IAAD,cACPlE,EAAMkE,eADC,GACjB9D,EADiB,KACbC,EADa,OAEPL,EAAMmE,OAAOe,EAAIC,QAASD,EAAIE,SAFvB,mBAEjB9E,EAFiB,KAEbC,EAFa,KAGxB,OAAO,2BACFP,GADL,IAEEkE,eAAgB,CAAC9D,EAAIC,EAAIC,EAAIC,KAGjC,GAAIP,EAAMC,cAAe,CAAC,IAAD,cACND,EAAMC,cADA,GAChBG,EADgB,KACZC,EADY,OAENL,EAAMmE,OAAOe,EAAIC,QAASD,EAAIE,SAFxB,mBAEhB9E,EAFgB,KAEZC,EAFY,KAGvB,OAAO,2BACFP,GADL,IAEEC,cAAe,CAACG,EAAIC,EAAIC,EAAIC,KAGhC,GAAIP,EAAME,UAAW,CAAC,IAAD,cACYF,EAAME,UADlB,GACZrI,EADY,2BACCuI,EADD,KACKC,EADL,OAEFL,EAAMmE,OAAOe,EAAIC,QAASD,EAAIE,SAF5B,mBAEZ9E,EAFY,KAERC,EAFQ,KAGnB,OAAO,2BACFP,GADL,IAEEE,UAAW,CAACrI,EAAY,CAACuI,EAAIC,EAAIC,EAAIC,MAGzC,GAAIP,EAAMG,gBAAiB,CAAC,IAAD,cACIH,EAAMG,gBADV,GAClBhJ,EADkB,2BACPiJ,EADO,KACHC,EADG,OAERL,EAAMmE,OAAOe,EAAIC,QAASD,EAAIE,SAFtB,mBAElB9E,EAFkB,KAEdC,EAFc,KAGzB,OAAO,2BACFP,GADL,IAEEG,gBAAiB,CAAChJ,EAAU,CAACiJ,EAAIC,EAAIC,EAAIC,MAG7C,OAAOP,KAER6E,KAAKnO,EAAYM,SAAS,SAACgJ,EAAOkF,GACjC,IAAKlF,EAAMmE,OACT,OAAOnE,EAET,GAAIA,EAAMkE,eAAgB,CAAC,IAAD,cACPlE,EAAMkE,eADC,GACjB9D,EADiB,KACbC,EADa,OAEPL,EAAMmE,OAAOe,EAAIC,QAASD,EAAIE,SAFvB,mBAEjB9E,EAFiB,KAEbC,EAFa,KAGlB8E,EArHc,SAACpN,EAAcsJ,EAA+BnB,EAAYC,EAAYC,EAAYC,GAY1G,IAXA,IAAM+E,EAAc/H,EAAmBtF,EAAOsJ,GACxC5J,EAAS,GAET4N,EAAmC,CACvC,CAACnF,EAAIC,GACL,CAACD,EAAIG,GACL,CAACD,EAAIC,GACL,CAACD,EAAID,GACL,CAACD,EAAIC,IAGEnH,EAAQ,EAAGA,EAAQoM,EAAY9P,OAAQ0D,IAAS,CACtCoM,EAAYpM,GAChBsM,MAAMhN,MAAK,SAACiN,GACvB,IAAMC,EAAWD,EAAQD,MAAM5Q,KAAI,kBAAc,CAAd,EAAGqF,EAAH,EAAME,MAGzC,OAFAuL,EAASxQ,KAAKwQ,EAAS,IAGrBC,YAAiBJ,EAAcG,IAC/BC,YAAiBD,EAAUH,IAC3BK,YAAyBL,EAAcG,OAGzC/N,EAAOzC,KAAKgE,GAGhB,OAAOvB,EA0FmBkO,CAAkB7F,EAAM/H,MAAO+H,EAAMuB,SAAUnB,EAAIC,EAAIC,EAAIC,GAE3EuF,EAAeC,MAAMC,KAAK,IAAI1I,IAAI0C,EAAM5G,UAAU0L,OAAOO,KAC/D,OAAO,2BACFrF,GADL,IAEE5G,UAAW0M,EACX5B,eAAgB,OAGpB,GAAIlE,EAAMC,cAAe,CAAC,IAAD,cACND,EAAMC,cADA,GAChBG,EADgB,KACZC,EADY,OAENL,EAAMmE,OAAOe,EAAIC,QAASD,EAAIE,SAFxB,mBAEhB9E,EAFgB,KAEZC,EAFY,KAIjB5G,EAAWE,EAAuBmG,EAAM/H,MAAO+H,EAAM5G,UAAWkH,EAAKF,EAAIG,EAAKF,GACpF,OAAO,2BACFL,GADL,IAEE/H,MAAO0B,EACPsG,cAAe,OAGnB,GAAID,EAAME,UAAW,CAAC,IAAD,cACYF,EAAME,UADlB,GACZrI,EADY,2BACCuI,EADD,KACKC,EADL,OAEFL,EAAMmE,OAAOe,EAAIC,QAASD,EAAIE,SAF5B,mBAEZ9E,EAFY,KAERC,EAFQ,KAIb5G,EAAWS,EAAkB4F,EAAM/H,MAAO+H,EAAM5G,UAAWvB,EAAYyI,EAAKF,EAAIG,EAAKF,GAC3F,OAAO,2BACFL,GADL,IAEE/H,MAAO0B,EACPuG,UAAW,OAGf,GAAIF,EAAMG,gBAAiB,CAAC,IAAD,cACIH,EAAMG,gBADV,GAClBhJ,EADkB,2BACPiJ,EADO,KACHC,EADG,OAERL,EAAMmE,OAAOe,EAAIC,QAASD,EAAIE,SAFtB,mBAElB9E,EAFkB,KAEdC,EAFc,KAInB5G,EAAW2F,GAAeU,EAAM/H,MAAO+H,EAAM5G,UAAWjC,EAAUmJ,EAAKF,EAAIG,EAAKF,GACtF,OAAO,2BACFL,GADL,IAEE/H,MAAO0B,EACPwG,gBAAiB,OAGrB,OAAOH,KAGR6E,KAAKnO,EAAYO,cAAc,SAAC+I,EAAOmE,GAAR,mBAAC,eAC5BnE,GAD2B,IAE9BmE,iBFpIDQ,cD3BY,SAACC,GAAD,OAAuCA,EACnDC,KAAK1J,EAAcC,aAAa,SAAC4E,EAAD,GAA0B,IAAD,mBAAhBhD,EAAgB,KAAVQ,EAAU,KAClDyI,EAAS,IAAI7B,IAAIpE,EAAMuB,UAE7B,OADA0E,EAAOC,IAAIlJ,EAAMQ,GACV,2BACFwC,GADL,IAEEuB,SAAU0E,OAGbpB,KAAK1J,EAAcE,oBAAoB,SAAC2E,EAAD,GAA2B,IAAD,mBAAjBhD,EAAiB,KAAXiE,EAAW,KAC1DgF,EAAS,IAAI7B,IAAIpE,EAAMqE,iBAE7B,OADA4B,EAAOC,IAAIlJ,EAAMiE,GACV,2BACFjB,GADL,IAEEqE,gBAAiB4B,OAIpBpB,KAAK1J,EAAcG,kBAAkB,SAAC0E,EAAOmG,GAC5C,GAA+B,IAA3BnG,EAAM5G,UAAU5D,OAClB,OAAOwK,EAET,IAAM5H,EAAY4H,EAAM5G,UAAU,GAC5BgN,EDlBsB,SAACjS,EAAsBgS,GACrD,IAAME,EAAUlS,EAAUE,MAAM,GAChC,IAAK+C,GAAYI,SAAS6O,KAAajP,GAAYI,SAAS2O,GAC1D,OAAOhS,EAET,IAAM0L,EAAe,CACnBxL,MAAOF,EAAUE,MAAMC,SAGzBuL,EAAaxL,MAAM,GAAK8R,EAEnBjD,GAAeiD,GAAS3O,SAASqI,EAAaxL,MAAM,MACvDwL,EAAaxL,MAAM,GAAK6O,GAAeiD,GAAS,IAE7C1C,GAAe0C,GAAS3O,SAASqI,EAAaxL,MAAM,MACvDwL,EAAaxL,MAAM,GAAKoP,GAAe0C,GAAS,IAGlD,IAAMG,GAAgBtS,EAAcqS,GAAW,GAAK,EAC9CE,GAAgBvS,EAAcmS,GAAW,GAAK,EACpD,GAAIG,IAAiBC,EACnB,OAAO1G,EAET,GAAqB,IAAjByG,GAAuC,IAAjBC,EAAoB,CAC5C,IAAMnG,EAAKP,EAAaxL,MAAM,GACxBgM,EAAKR,EAAaxL,MAAM,GACxBmS,EAAK3G,EAAaxL,MAAM,GACxBoS,EAAK5G,EAAaxL,MAAM,GAExBiM,EAAKnL,KAAK+E,OAAOkG,EAAKoG,GAAM,GAC5BjG,EAAKpL,KAAK+E,OAAOmG,EAAKoG,GAAM,GAIlC,OAHA5G,EAAaxL,MAAQwL,EAAaxL,MAAMC,MAAM,EAAG,GAAGwQ,OAClD,CAAC1E,EAAIC,EAAIC,EAAIC,EAAIiG,EAAIC,IAEhB5G,EAET,GAAqB,IAAjByG,GAAuC,IAAjBC,EAAoB,CAC5C,IAAMnG,EAAKP,EAAaxL,MAAM,GACxBgM,EAAKR,EAAaxL,MAAM,GACxBqS,EAAK7G,EAAaxL,MAAM,GACxBsS,EAAK9G,EAAaxL,MAAM,GAExBiM,EAAKnL,KAAK+E,OAAO,EAAIkG,EAAKsG,GAAM,GAChCnG,EAAKpL,KAAK+E,OAAO,EAAImG,EAAKsG,GAAM,GAChCH,EAAKrR,KAAK+E,OAAOkG,EAAK,EAAIsG,GAAM,GAChCD,EAAKtR,KAAK+E,OAAOmG,EAAK,EAAIsG,GAAM,GAItC,OAHA9G,EAAaxL,MAAQwL,EAAaxL,MAAMC,MAAM,EAAG,GAAGwQ,OAClD,CAAC1E,EAAIC,EAAIC,EAAIC,EAAIiG,EAAIC,EAAIC,EAAIC,IAExB9G,EAET,GAAqB,IAAjByG,GAAuC,IAAjBC,EAAoB,CAC5C,IAAMnG,EAAKP,EAAaxL,MAAM,GACxBgM,EAAKR,EAAaxL,MAAM,GACxBiM,EAAKT,EAAaxL,MAAM,GACxBkM,EAAKV,EAAaxL,MAAM,GAI9B,OAHAwL,EAAaxL,MAAQwL,EAAaxL,MAAMC,MAAM,EAAG,GAAGwQ,OAClD,CAAC1E,EAAIC,EAAIC,EAAIC,IAERV,EAET,GAAqB,IAAjByG,GAAuC,IAAjBC,EAAoB,CAC5C,IAAMnG,EAAKP,EAAaxL,MAAM,GACxBgM,EAAKR,EAAaxL,MAAM,GACxBuS,EAAK/G,EAAaxL,MAAM,GACxBwS,EAAKhH,EAAaxL,MAAM,GACxBqS,EAAK7G,EAAaxL,MAAM,GACxBsS,EAAK9G,EAAaxL,MAAM,GAExBiM,EAAKnL,KAAK+E,OAAOkG,EAAK,EAAIwG,GAAM,GAChCrG,EAAKpL,KAAK+E,OAAOmG,EAAK,EAAIwG,GAAM,GAChCL,EAAKrR,KAAK+E,OAAOwM,EAAK,EAAIE,GAAM,GAChCH,EAAKtR,KAAK+E,OAAOyM,EAAK,EAAIE,GAAM,GAItC,OAHAhH,EAAaxL,MAAQwL,EAAaxL,MAAMC,MAAM,EAAG,GAAGwQ,OAClD,CAAC1E,EAAIC,EAAIC,EAAIC,EAAIiG,EAAIC,EAAIC,EAAIC,IAExB9G,EAET,GAAqB,IAAjByG,GAAuC,IAAjBC,EAAoB,CAC5C,IAAMnG,EAAKP,EAAaxL,MAAM,GACxBgM,EAAKR,EAAaxL,MAAM,GACxBiM,EAAKT,EAAaxL,MAAM,GACxBkM,EAAKV,EAAaxL,MAAM,IAI9B,OAHAwL,EAAaxL,MAAQwL,EAAaxL,MAAMC,MAAM,EAAG,GAAGwQ,OAClD,CAAC1E,EAAIC,EAAIC,EAAIC,IAERV,EAET,GAAqB,IAAjByG,GAAuC,IAAjBC,EAAoB,CAC5C,IAAMnG,EAAKP,EAAaxL,MAAM,GACxBgM,EAAKR,EAAaxL,MAAM,GACxByS,EAAMjH,EAAaxL,MAAM,GACzB0S,EAAMlH,EAAaxL,MAAM,GACzB2S,EAAMnH,EAAaxL,MAAM,GACzB4S,EAAMpH,EAAaxL,MAAM,GACzBmS,EAAK3G,EAAaxL,MAAM,GACxBoS,EAAK5G,EAAaxL,MAAM,IAExBiM,EAAKnL,KAAK+E,OAAO4M,EAAME,GAAO,GAC9BzG,EAAKpL,KAAK+E,OAAO6M,EAAME,GAAO,GAIpC,OAHApH,EAAaxL,MAAQwL,EAAaxL,MAAMC,MAAM,EAAG,GAAGwQ,OAClD,CAAC1E,EAAIC,EAAIC,EAAIC,EAAIiG,EAAIC,IAEhB5G,EAET,OAAOA,ECvFYvE,CAAiB0E,EAAM/H,MAAMG,GAAY+N,GAC1D,OAAO,2BACFnG,GADL,IAEE/H,MAAO+L,GAAahE,EAAM/H,MAAOG,EAAWgO,QAG/CvB,KAAK1J,EAAcI,qBAAqB,SAACyE,EAAOmG,GAC/C,GAA+B,IAA3BnG,EAAM5G,UAAU5D,OAClB,OAAOwK,EAET,IAAM5H,EAAY4H,EAAM5G,UAAU,GAC5BgN,EAAQ,2BACTpG,EAAM/H,MAAMG,IADH,IAEZ/D,MAAO2L,EAAM/H,MAAMG,GAAW/D,MAAMC,UAGtC,OADA8R,EAAS/R,MAAM,GAAK8R,EACb,2BACFnG,GADL,IAEE/H,MAAO+L,GAAahE,EAAM/H,MAAOG,EAAWgO,QAG/CvB,KAAK1J,EAAcK,qBAAqB,SAACwE,EAAOmG,GAC/C,GAA+B,IAA3BnG,EAAM5G,UAAU5D,OAClB,OAAOwK,EAET,IAAM5H,EAAY4H,EAAM5G,UAAU,GAC5BgN,EAAQ,2BACTpG,EAAM/H,MAAMG,IADH,IAEZ/D,MAAO2L,EAAM/H,MAAMG,GAAW/D,MAAMC,UAGtC,OADA8R,EAAS/R,MAAM,GAAK8R,EACb,2BACFnG,GADL,IAEE/H,MAAO+L,GAAahE,EAAM/H,MAAOG,EAAWgO,QAG/CvB,KAAK1J,EAAcM,oBAAoB,SAACuE,EAAO3L,GAC9C,GAA+B,IAA3B2L,EAAM5G,UAAU5D,OAClB,OAAOwK,EAET,IAAM5H,EAAY4H,EAAM5G,UAAU,GAC5B8N,EAAelH,EAAM/H,MAAMG,GACjC,IAAK8O,EAAa3S,SAChB,OAAOyL,EAET,IAAMmH,EAAenH,EAAMqE,gBAAgBnH,IAAIgK,EAAa3S,UAC5D,IAAK4S,EACH,OAAOnH,EAET,IAAMoG,EAAW3F,GACfT,EAAM/H,MAAMG,GHrDkB,SAAC6I,EAAqBG,GAAiC,IAAD,cAC/DH,EAD+D,GACjFC,EADiF,KAC7EC,EAD6E,KAExF,MAAO,CACLD,EAAK,IACLC,EAAK,IACLD,GALsF,KAK3EA,GAAME,EAAI,GAAK,IAC1BD,GANsF,KAM3EA,GAAMC,EAAI,GAAK,KGgDxBgG,CAAqBD,EAAc9S,IAErC,OAAO,2BACF2L,GADL,IAEE/H,MAAO+L,GAAahE,EAAM/H,MAAOG,EAAWgO,QAI/CvB,KAAK1J,EAAcO,cAAc,SAACsE,GACjC,GAA+B,IAA3BA,EAAM5G,UAAU5D,OAClB,OAAOwK,EAET,IAAM5H,EAAY4H,EAAM5G,UAAU,GAClC,GAAkB,IAAdhB,EACF,OAAO4H,EAET,IAAMrG,EAAWqG,EAAM/H,MAAM3D,QAG7B,OAFAqF,EAASvB,EAAY,GAAK4H,EAAM/H,MAAMG,GACtCuB,EAASvB,GAAa4H,EAAM/H,MAAMG,EAAY,GACvC,2BACF4H,GADL,IAEE/H,MAAO0B,EACPP,UAAW,CAAChB,EAAY,QAG3ByM,KAAK1J,EAAcQ,cAAc,SAACqE,GACjC,GAA+B,IAA3BA,EAAM5G,UAAU5D,OAClB,OAAOwK,EAET,IAAM5H,EAAY4H,EAAM5G,UAAU,GAClC,GAAIhB,IAAc4H,EAAM/H,MAAMzC,OAAS,EACrC,OAAOwK,EAET,IAAMrG,EAAWqG,EAAM/H,MAAM3D,QAG7B,OAFAqF,EAASvB,EAAY,GAAK4H,EAAM/H,MAAMG,GACtCuB,EAASvB,GAAa4H,EAAM/H,MAAMG,EAAY,GACvC,2BACF4H,GADL,IAEE/H,MAAO0B,EACPP,UAAW,CAAChB,EAAY,QAI3ByM,KAAK1J,EAAcS,MAAM,SAACoE,GAAD,OAAWA,KACpC6E,KAAK1J,EAAcU,MAAM,SAACmE,GAAD,OAAWA,KAEpC6E,KAAK1J,EAAcW,OAAO,SAACkE,GAAD,mBAAC,eACvBA,GADsB,IAEzB/H,MAAO+H,EAAM/H,MAAM6M,OAAO9E,EAAMwE,WAChCpL,UAAW4G,EAAMwE,UAAU5P,KAAI,SAACoQ,EAAQ9L,GAAT,OAAmB8G,EAAM/H,MAAMzC,OAAS0D,UAExE2L,KAAK1J,EAAcY,MAAM,SAACiE,GACzB,IAAMqH,EAAcrH,EAAM5G,UAAUxE,KAAI,SAACsE,GAAD,OAAW8G,EAAM/H,MAAMiB,MAD5B,EAElB8F,EAAiBqI,GAFC,mBAE5BjH,EAF4B,KAExBC,EAFwB,KAG7B9G,EAAK,SAACU,GAAD,OAAe,IAAMA,EAAImG,GAC9B5G,EAAK,SAACW,GAAD,OAAe,GAAKA,EAAIkG,GACnC,OAAO,2BACFL,GADL,IAEEwE,UAAWxE,EAAM5G,UAAUxE,KAAI,SAACsE,GAAD,OAC7BI,EAAwB0G,EAAM/H,MAAMiB,GAAQK,EAAIC,WAIrDqL,KAAK1J,EAAca,KAAK,SAACgE,GAAD,mBAAC,eACrBA,GADoB,IAEvB/H,MAAO+H,EAAM/H,MAAM3C,QAAO,SAAC0P,EAAQ9L,GAAT,OAAoB8G,EAAM5G,UAAU5B,SAAS0B,MACvEsL,UAAWxE,EAAM5G,UAAUxE,KAAI,SAACsE,GAAD,OAAW8G,EAAM/H,MAAMiB,MACtDE,UAAW,QAEZyL,KAAK1J,EAAcc,QAAQ,SAAC+D,GAAD,mBAAC,eACxBA,GADuB,IAE1B/H,MAAO+H,EAAM/H,MAAM3C,QAAO,SAAC0P,EAAQ9L,GAAT,OAAoB8G,EAAM5G,UAAU5B,SAAS0B,MACvEE,UAAW,QAGZyL,KAAK1J,EAAce,mBAAmB,SAAC8D,GACtC,IAAIrG,EAAkB,GAClBmM,EAAyB,GAY7B,OAXA9F,EAAM/H,MAAMK,SAAQ,SAAC/C,EAAO2D,GAC1B,GAAK8G,EAAM5G,UAAU5B,SAAS0B,GAA9B,CAIA,IAAMoO,EAAWhG,GAAU/L,EAAOyK,EAAMuB,UACxCuE,EAAeA,EAAahB,OAC1BwC,EAAS1S,KAAI,SAACoQ,EAAQuC,GAAT,OAAsB5N,EAASnE,OAAS+R,MAEvD5N,EAAWA,EAASmL,OAAOwC,QAPzB3N,EAASzE,KAAKK,MASX,2BACFyK,GADL,IAEE/H,MAAO0B,EACPP,UAAW0M,OAGdjB,KAAK1J,EAAcgB,cAAc,SAAC6D,EAAD,0BAASlG,EAAT,KAAaC,EAAb,wBAAC,eAC9BiG,GAD6B,IAEhC/H,MAAO4B,EAAuBmG,EAAM/H,MAAO+H,EAAM5G,UAAWU,EAAIC,QAGjE8K,KAAK1J,EAAciB,gBAAgB,SAAC4D,GAAD,mBAAC,eAChCA,GAD+B,IAElC5G,UAAW4G,EAAMsE,aAAetE,EAAM5G,UAAY,GAClDkL,cAAetE,EAAMsE,kBAGtBO,KAAK1J,EAAckB,iBAAiB,SAAC2D,GAAD,mBAAC,eACjCA,GADgC,IAEnCuE,iBAAiB,OAElBM,KAAK1J,EAAcmB,kBAAkB,SAAC0D,GAAD,mBAAC,eAClCA,GADiC,IAEpCuE,iBAAiB,UIvMNrG,GAFDsJ,YAAY/C,ICYXgD,I,MARS,SAACC,GAAD,OACtB,oCACGA,EAAMC,SAASnC,MAAM5Q,KAAI,SAAC6Q,EAASxQ,GAAV,OACxB,6BAAS2S,IAAK3S,EAAGiD,OAAQuN,EAAQD,MAAM5Q,KAAI,gBAAGqF,EAAH,EAAGA,EAAGE,EAAN,EAAMA,EAAN,gBAAiBF,EAAjB,YAAsBE,EAAtB,QAA4B3F,KAAK,YCgCnEqT,I,MA3BQ,SAACH,GACtB,IAAMpC,EAAc/H,EAAmBmK,EAAMzP,MAAOyP,EAAMnG,UAElDnI,EAAcsO,EAAdtO,UACF0O,EAAexC,EAAY1Q,KAAI,SAACmT,EAAW7O,GAAZ,OAAsBA,KACxD5D,QAAO,SAAC4D,GAAD,OAAYE,EAAU5B,SAAS0B,MAEzC,OACE,oCACE,uBAAG8O,UAAU,sBACVF,EAAalT,KAAI,SAACsE,GAAD,OAChB,uBAAG0O,IAAK1O,EAAO+O,YAAa,SAAC/C,GAAD,uBAASwC,EAAMQ,uCAAf,aAAS,OAAAR,EAAwCxC,EAAKhM,KAChF,kBAACiP,GAAD,CAAQR,SAAUrC,EAAYpM,UAIpC,uBAAG8O,UAAU,oBACV5O,EAAUxE,KAAI,SAACsE,GAAD,OACb,uBAAG0O,IAAK1O,EAAO+O,YAAa,SAAC/C,GAAD,uBAASwC,EAAMU,qCAAf,aAAS,OAAAV,EAAsCxC,EAAKhM,KAC9E,kBAACiP,GAAD,CAAQR,SAAUrC,EAAYpM,aCN3BmP,I,MArBQ,SAACX,GACtB,IAAKA,EAAMY,KACT,OAAO,KAF4C,kBAI9BZ,EAAMY,KAJwB,GAIhDlI,EAJgD,KAI5CC,EAJ4C,KAIxCC,EAJwC,KAIpCC,EAJoC,KAKrD,GAAIH,EAAKE,EAAI,CAEX,IAAMiI,EAAOnI,EACbA,EAAKE,EACLA,EAAKiI,EAEP,GAAIlI,EAAKE,EAAI,CAEX,IAAMgI,EAAOlI,EACbA,EAAKE,EACLA,EAAKgI,EAGP,OAAO,0BAAMP,UAAU,kBAAkB/N,EAAGmG,EAAIjG,EAAGkG,EAAImI,MAAOlI,EAAKF,EAAIqI,OAAQlI,EAAKF,O,SlBxB1E5J,O,eAAAA,I,mBAAAA,I,kBAAAA,M,KAML,IAAMiS,GAAe,SAACzQ,EAAcV,GACzC,IAAMpD,EAAY8D,EAAMV,EAAMa,WAExBN,GAAiB9D,EAAcG,EAAUE,MAAM,IAAM,GAAK,EAAI,EACpE,GAAyB,IAArBkD,EAAMM,YAAoBN,EAAMM,aAAeC,EACjD,OAAOrB,EAAUkS,KAgBnB,IAbA,IAAM1O,EAAI9F,EAAUE,MAAM,EAAuB,EAAnBkD,EAAMM,YAC9BsC,EAAIhG,EAAUE,MAAM,EAAuB,EAAnBkD,EAAMM,WAAiB,GAC/C+Q,EAAW,SAACxI,EAAYC,EAAYC,EAAYC,GAArC,OAEbH,IAAOE,GACPF,IAAOnG,GAAKoG,GAAMlG,GAAKA,GAAKoG,GAE5BF,IAAOE,GACPF,IAAOlG,GAAKiG,GAAMnG,GAAKA,GAAKqG,GAI5B3I,EAASlB,EAAUkS,KACdvQ,EAAY,EAAGA,EAAYH,EAAMzC,OAAQ4C,IAChD,GAAIb,EAAMa,YAAcA,EAAxB,CAGA,IAAMjE,EAAY8D,EAAMG,GACxB,IAAI,CAAC,EAAG,EAAG,IAAIZ,SAASrD,EAAUE,MAAM,IAAxC,CAIA,GAAIF,EAAUE,MAAM,KAAO4F,GAAK9F,EAAUE,MAAM,KAAO8F,EACrD,OAAO1D,EAAUoS,MAEnB,IAAM/Q,GAAiB9D,EAAcG,EAAUE,MAAM,IAAM,GAAK,EAAI,EACpE,GACEF,EAAUE,MAAM,EAAoB,EAAhByD,KAAuBmC,GAC3C9F,EAAUE,MAAM,EAAoB,EAAhByD,EAAoB,KAAOqC,EAE/C,OAAO1D,EAAUoS,MAGnB,OAAQ1U,EAAUE,MAAM,IACtB,KAAK,EACL,KAAK,GAEDuU,EAASzU,EAAUE,MAAM,GAAIF,EAAUE,MAAM,GAAIF,EAAUE,MAAM,GAAIF,EAAUE,MAAM,KACrFuU,EAASzU,EAAUE,MAAM,GAAIF,EAAUE,MAAM,GAAIF,EAAUE,MAAM,GAAIF,EAAUE,MAAM,OAErFsD,EAASlB,EAAUqS,QAErB,MACF,KAAK,EACL,KAAK,EACCF,EAASzU,EAAUE,MAAM,GAAIF,EAAUE,MAAM,GAAIF,EAAUE,MAAM,GAAIF,EAAUE,MAAM,MACvFsD,EAASlB,EAAUqS,UAK3B,OAAOnR,GmB9CMoR,I,MAVM,SAACrB,GAAD,OACnB,0BACEzN,EAAGyN,EAAMzN,EAAI,EACbE,EAAGuN,EAAMvN,EAAI,EACbqO,MAAO,EAAGC,OAAQ,EAClBT,UAAS,4BAAuBN,EAAMM,WAAa,IACnDC,YAAaP,EAAMsB,oBCajBC,I,MAA2BlJ,YAC/B,CACED,GACA,SAACE,GAAD,OAAqBA,EAAM5G,aAE7B,SAACnB,EAAOmB,GACN,GAAyB,IAArBA,EAAU5D,OACZ,MAAO,CAAE0T,YAAa,KAAMC,aAAc,IAE5C,GAAI/P,EAAU5D,OAAS,EAAG,CACxB,IAAM4T,EAAkBhQ,EAAUxE,KAAI,SAACsE,GAAD,OAAWjB,EAAMiB,MAEvD,MAAO,CACLgQ,YAAa,CACXG,aAAa,EACbC,OAJQtK,EAAiBoK,IAM3BD,aAAc,IAGlB,IAAMI,EAAiBtR,EAAMmB,EAAU,IACvC,OAAQmQ,EAAelV,MAAM,IAC3B,KAAK,EACL,KAAK,EACL,KAAK,GACH,MAAO,CACL6U,YAAa,CACXG,aAAa,EACbC,OAAQ,CACNC,EAAelV,MAAM,GACrBkV,EAAelV,MAAM,GACrBkV,EAAelV,MAAM,GACrBkV,EAAelV,MAAM,KAGzB8U,aAAc,IAElB,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAEH,IADA,IAAMA,EAA+B,GAC5BlU,EAAI,EAAGA,EAAI,GAAKsU,EAAelV,MAAMmB,OAAQP,GAAK,EAAG,CAC5D,IAAMuU,EAAYd,GAAazQ,EAAO,CACpCG,UAAWgB,EAAU,GACrBvB,YAAa5C,EAAI,GAAK,IAEpB+S,EAAY,GACZwB,IAAc/S,EAAUoS,MACxBb,EAAY,QACLwB,IAAc/S,EAAUqS,SAC/Bd,EAAY,UAGhBmB,EAAajU,KAAK,CAChB+E,EAAGsP,EAAelV,MAAMY,GACxBkF,EAAGoP,EAAelV,MAAMY,EAAI,GAC5B+S,cAGJ,MAAO,CAAEkB,YAAa,KAAMC,gBAE9B,QACE,MAAO,CAAED,YAAa,KAAMC,aAAc,SA6FnCM,GAxFU,WAAO,IAAD,EACSC,YAAYT,IAA1CC,EADqB,EACrBA,YAAaC,EADQ,EACRA,aAEfhL,EAAWwL,cACXC,EAA6BC,uBAAY,SAAC3E,EAAuB/N,GACrEgH,EAASzH,EAAYI,YAAY,CAACoO,EAAK/N,KACvC+N,EAAI4E,oBACH,CAAC3L,IAEE4L,EAA4BF,uBAChC,SAAC3E,GAAD,OAA2B0E,EAA2B1E,EAAKnR,EAAkByL,SAC7E,CAACoK,IAEGI,EAA2BH,uBAC/B,SAAC3E,GAAD,OAA2B0E,EAA2B1E,EAAKnR,EAAkB0L,QAC7E,CAACmK,IAEGK,EAA4BJ,uBAChC,SAAC3E,GAAD,OAA2B0E,EAA2B1E,EAAKnR,EAAkB2L,SAC7E,CAACkK,IAEGM,EAA2BL,uBAC/B,SAAC3E,GAAD,OAA2B0E,EAA2B1E,EAAKnR,EAAkB4L,QAC7E,CAACiK,IAEGO,EAAgCN,uBACpC,SAAC3E,GAAD,OAA2B0E,EAA2B1E,EAAKnR,EAAkB6L,aAC7E,CAACgK,IAGGQ,EAA+BC,mBAAQ,WAC3C,OAAOlB,EAAavU,KAAI,SAAC0V,EAAUzS,GAAX,OAA0B,SAACqN,GACjD/G,EAASzH,EAAYG,eAAe,CAACqO,EAAKrN,KAC1CqN,EAAI4E,wBAEL,CAAC3L,EAAUgL,IAEd,OAAO,oCACJD,GAAe,oCACd,0BACElB,UAAU,iBACV/N,EAAGiP,EAAYI,OAAO,GACtBnP,EAAG+O,EAAYI,OAAO,GACtBd,MAAOU,EAAYI,OAAO,GAAKJ,EAAYI,OAAO,GAClDb,OAAQS,EAAYI,OAAO,GAAKJ,EAAYI,OAAO,KAErD,kBAAC,GAAD,CACErP,GAAIiP,EAAYI,OAAO,GAAKJ,EAAYI,OAAO,IAAM,EACrDnP,EAAG+O,EAAYI,OAAO,GACtBtB,UAAU,QACVgB,gBAAiBe,IAEnB,kBAAC,GAAD,CACE9P,EAAGiP,EAAYI,OAAO,GACtBnP,GAAI+O,EAAYI,OAAO,GAAKJ,EAAYI,OAAO,IAAM,EACrDtB,UAAU,OACVgB,gBAAiBgB,IAEnB,kBAAC,GAAD,CACE/P,GAAIiP,EAAYI,OAAO,GAAKJ,EAAYI,OAAO,IAAM,EACrDnP,EAAG+O,EAAYI,OAAO,GACtBtB,UAAU,QACVgB,gBAAiBiB,IAEnB,kBAAC,GAAD,CACEhQ,EAAGiP,EAAYI,OAAO,GACtBnP,GAAI+O,EAAYI,OAAO,GAAKJ,EAAYI,OAAO,IAAM,EACrDtB,UAAU,OACVgB,gBAAiBkB,IAEnB,kBAAC,GAAD,CACEjQ,EAAGiP,EAAYI,OAAO,GACtBnP,EAAG+O,EAAYI,OAAO,GACtBtB,UAAU,YACVgB,gBAAiBmB,KAGpBhB,EAAavU,KAAI,WAAsBsE,GAAtB,IAAGe,EAAH,EAAGA,EAAGE,EAAN,EAAMA,EAAG6N,EAAT,EAASA,UAAT,OAChB,kBAAC,GAAD,CACEJ,IAAK1O,EACLe,EAAGA,EAAGE,EAAGA,EACT6N,UAAWA,EACXgB,gBAAiBoB,EAA6BlR,UCnFvCqR,I,MArFG,WAChB,IAAMtS,EAAQyR,YAAY5J,IACpByB,EAAWmI,aAAY,SAAC1J,GAAD,OAAqBA,EAAMuB,YAClDnI,EAAYsQ,aAAY,SAAC1J,GAAD,OAAqBA,EAAM5G,aACnD8K,EAAiBwF,aAAY,SAAC1J,GAAD,OAAqBA,EAAMkE,kBAExD/F,EAAWwL,cACXa,EAAyBX,uBAAY,SAAC3E,GAC1C,IAAMuF,EAAMvF,EAAIwF,cAAcC,eAC9B,GAAKF,EAAL,CAGA,IAAMG,EAAK1F,EAAIwF,cAAcG,iBACvBC,EAAOL,EAAIM,UAOjB5M,EAASzH,EAAYO,cANE,SAAC+T,EAAMC,GAC5BL,EAAG3Q,EAAI+Q,EACPJ,EAAGzQ,EAAI8Q,EAF8B,MAGpBL,EAAGM,gBAAgBJ,GACpC,MAAO,CAJ8B,EAG7B7Q,EAH6B,EAG1BE,UAIZ,CAACgE,IAEEgN,EAA4BtB,uBAAY,SAAC3E,GACvCA,EAAIkG,UAAYlG,EAAImG,SACxBlN,EAASnI,EAAcI,cAEzB+H,EAASzH,EAAYC,gBAAgBuO,MACpC,CAAC/G,IACE+J,EAAkC2B,uBAAY,SAAC3E,EAAuBhM,GACtEgM,EAAIkG,UAAYlG,EAAImG,QACtBlN,EAASnI,EAAcE,gBAAgBgD,IAEvCiF,EAASnI,EAAcC,aAAaiD,IAEtCiF,EAASzH,EAAYE,mBAAmBsO,IACxCA,EAAI4E,oBACH,CAAC3L,IACEiK,EAAgCyB,uBAAY,SAAC3E,EAAuBhM,IACpEgM,EAAIkG,UAAYlG,EAAImG,UACtBlN,EAASnI,EAAcG,mBAAmB+C,IAE5CiF,EAASzH,EAAYE,mBAAmBsO,IACxCA,EAAI4E,oBACH,CAAC3L,IAiBJ,OAfAmN,qBAAU,WACR,IAAMC,EAAkB,SAACrG,GACvB/G,EAASzH,EAAYK,UAAUmO,KAE3BsG,EAAgB,SAACtG,GACrB/G,EAASzH,EAAYM,QAAQkO,KAI/B,OAFAuG,SAASC,iBAAiB,YAAaH,GACvCE,SAASC,iBAAiB,UAAWF,GAC9B,WACLC,SAASE,oBAAoB,YAAaJ,GAC1CE,SAASE,oBAAoB,UAAWH,MAEzC,CAACrN,IAGF,yBAAK6J,UAAU,cACb,yBACEQ,MAAM,OAAOC,OAAO,OAAOmD,QAAQ,kBACnCC,mBAAoBrB,EACpBvC,YAAakD,GAGb,0BAAMlR,EAAE,IAAIE,EAAE,IAAIqO,MAAM,MAAMC,OAAO,MAAMT,UAAU,mBACrD,0BAAM/N,EAAE,KAAKE,EAAE,KAAKqO,MAAM,MAAMC,OAAO,MAAMT,UAAU,gBACvD,kBAAC,GAAD,CACE/P,MAAOA,EACPsJ,SAAUA,EACVnI,UAAWA,EACX8O,gCAAiCA,EACjCE,8BAA+BA,IAEjC,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAgBE,KAAMpE,Q,SCtExB4H,I,MAAqB/L,YAAe,CACxC,SAACC,GAAD,OAAqBA,EAAM5G,WAC3B,SAAC4G,GAAD,OAAqBA,EAAM5G,UAAU5D,OAASwK,EAAM/H,MAAM+H,EAAM5G,UAAU,IAAM,QAC/E,SAACA,EAAW2S,GACb,GAAyB,IAArB3S,EAAU5D,OACZ,OAAO,KAET,IAAM+T,EAAiBwC,EACvB,IAAK3U,GAAYI,SAAS+R,EAAelV,MAAM,IAC7C,OAAO,KAIT,IADA,IAAM6D,EAAS,GACNjD,EAAI,EAAGA,EAAI,GAAKsU,EAAelV,MAAMmB,OAAQP,GAAK,EACzDiD,EAAOhD,KAAP,WAAgBqU,EAAelV,MAAMY,GAArC,YAA2CsU,EAAelV,MAAMY,EAAI,GAApE,MAEF,MAAO,CACLhB,WAAYsV,EAAelV,MAAM,GACjC2X,cAAezC,EAAelV,MAAM,GACpC4X,cAAe1C,EAAelV,MAAM,GACpC6X,WAAYvI,GAAwB4F,GACpC4C,YAAajU,EAAO1D,KAAK,iBAUvB4X,GAAmBrM,YAAe,CACtC,SAACC,GAAD,OAAqBA,EAAM5G,WAC3B,SAAC4G,GAAD,OAAqBA,EAAM5G,UAAU5D,OAASwK,EAAM/H,MAAM+H,EAAM5G,UAAU,IAAM,MAChF,SAAC4G,GAAD,OAAqBA,EAAMuB,UAC3B,SAACvB,GAAD,OAAqBA,EAAMqE,mBAC1B,SAACjL,EAAW2S,EAAiBxK,EAAU8C,GACxC,GAAyB,IAArBjL,EAAU5D,OACZ,OAAO,KAET,IAAM+T,EAAiBwC,EACvB,GAAgC,KAA5BxC,EAAelV,MAAM,GACvB,OAAO,KAET,IAAME,EAAWgV,EAAehV,SAC1BiN,EAAcD,EAASrE,IAAI3I,GAC7B8X,EAA4B,KAChC,GAAI7K,EAAa,CACf,IAAM8K,EAAa,iDAAiDtO,KAAKwD,GACrE8K,IACFD,EAAaC,EAAW,IAG5B,IAAMnF,EAAe9C,EAAgBnH,IAAI3I,GACnCgY,EAAepF,EACjBnG,GAAkBmG,EAAc3G,GAAoB+I,IACpD,KAEJ,MAAO,CACLhV,WACA8X,aACAF,YAAY,IAAD,OAAM5C,EAAelV,MAAM,GAA3B,YAAiCkV,EAAelV,MAAM,GAAtD,qBAAgEkV,EAAelV,MAAM,GAArF,YAA2FkV,EAAelV,MAAM,GAAhH,KACXkY,mBAQEC,GAAoBzM,YAAe,CACvC,SAACC,GAAD,OAAqBA,EAAM5G,WAC3B,SAAC4G,GAAD,OAAqBA,EAAM5G,UAAU5D,OAASwK,EAAM/H,MAAM+H,EAAM5G,UAAU,IAAM,QAC/E,SAACA,EAAW2S,GACb,GAAI3S,EAAU5D,OAAS,EACrB,MAAO,CAAEiX,YAAY,GAEvB,GAAyB,IAArBrT,EAAU5D,OACZ,MAAO,CAAEiX,YAAY,GAEvB,IAAMlD,EAAiBwC,EACjB9X,EAAasV,EAAelV,MAAM,GACxC,GAAI+C,GAAYI,SAASvD,IAA8B,KAAfA,EACtC,OAAO,KAIT,IADA,IAAMiE,EAAS,GACNjD,EAAI,EAAGA,EAAI,GAAKsU,EAAelV,MAAMmB,OAAQP,GAAK,EACzDiD,EAAOhD,KAAP,WAAgBqU,EAAelV,MAAMY,GAArC,YAA2CsU,EAAelV,MAAMY,EAAI,GAApE,MAEF,MAAO,CAAEwX,YAAY,EAAON,YAAajU,EAAO1D,KAAK,gBAGjDkY,GAA4B3M,YAAe,CAC/C,SAACC,GAAD,OAAqBA,EAAM/H,MAAMzC,QACjC,SAACwK,GAAD,OAAqBA,EAAM5G,aAC1B,SAACuT,EAAavT,GACf,IAAMwT,EAAsBxT,EACzBxE,KAAI,SAACsE,GAAD,OAAWA,EAAQ,KACvB2T,MAAK,SAACpQ,EAAGqQ,GAAJ,OAAUrQ,EAAIqQ,KAAGtY,KAAK,KAC9B,MAAM,GAAN,OAAUoY,GAAuB,IAAjC,cAA0CD,GAAe,QAGrDI,GAA0BhN,YAAe,CAC7C,SAACC,GAAD,OAAqBA,EAAM/H,MAAMzC,QACjC,SAACwK,GAAD,OAAqBA,EAAM5G,aAC1B,SAACuT,EAAavT,GAAd,MAA6B,CAC9B4T,iBAAuC,IAArB5T,EAAU5D,QAAiC,IAAjB4D,EAAU,GACtD6T,iBAAuC,IAArB7T,EAAU5D,QAAgB4D,EAAU,KAAOuT,EAAc,EAC3EO,mBAAoC,IAAhBP,EACpBQ,mBAAoC,IAAhBR,MAkJPS,GA/IO,WAEpB,IAAMC,EAAa3D,YAAYoC,IACzBwB,EAAW5D,YAAY0C,IACvBmB,EAAY7D,YAAY8C,IAExBgB,EAAoB9D,YAAYgD,IANZ,EAWtBhD,YAAYqD,GAAyBU,KAFvCT,EATwB,EASxBA,iBAAkBC,EATM,EASNA,iBAClBC,EAVwB,EAUxBA,mBAAoBC,EAVI,EAUJA,mBAGhBhP,EAAWwL,cACXrO,EAAmBuO,uBAAY,SAAC3E,GACpC/G,EAAShD,EAAcG,kBAAkB4J,EAAIwF,cAAcrW,UAC1D,CAAC8J,IACE5C,EAAsBsO,uBAAY,SAAC3E,GACvC/G,EAAShD,EAAcI,qBAAqB2J,EAAIwF,cAAcrW,UAC7D,CAAC8J,IACE3C,EAAsBqO,uBAAY,SAAC3E,GACvC/G,EAAShD,EAAcK,qBAAqB0J,EAAIwF,cAAcrW,UAC7D,CAAC8J,IACE1C,EAAqBoO,uBAAY,SAAC3E,GACtC/G,EAAShD,EAAcM,oBAAoByJ,EAAIwF,cAAcrW,UAC5D,CAAC8J,IACE5H,EAAasT,uBAAY,WAC7B1L,EAASnI,EAAcO,gBACtB,CAAC4H,IACE3H,EAAaqT,uBAAY,WAC7B1L,EAASnI,EAAcQ,gBACtB,CAAC2H,IACEzC,EAAemO,uBAAY,WAC/B1L,EAAShD,EAAcO,kBACtB,CAACyC,IACExC,EAAekO,uBAAY,WAC/B1L,EAAShD,EAAcQ,kBACtB,CAACwC,IAEIuP,EAAMC,eAAND,EACR,OACE,yBAAK1F,UAAU,kBACb,yBAAKA,UAAU,iBACZqF,GAAc,oCACb,6BACGK,EAAE,eACH,4BAAQrZ,MAAOgZ,EAAWpZ,WAAY2Z,SAAUtS,GAC7ClE,GAAYxC,KAAI,SAACX,GAAD,OACf,4BAAQ2T,IAAK3T,EAAYI,MAAOJ,GAC7ByZ,EAAE,eAAD,OAAgBzZ,SAIvB,IACAyZ,EAAE,aACH,4BAAQrZ,MAAOgZ,EAAWrB,cAAe4B,SAAUrS,GAChD2H,GAAemK,EAAWpZ,YAAYW,KAAI,SAACoX,GAAD,OACzC,4BAAQpE,IAAKoE,EAAe3X,MAAO2X,GAChC0B,EAAE,aAAD,OAAcL,EAAWpZ,WAAzB,YAAuC+X,SAI9C,IACA0B,EAAE,aACH,4BAAQrZ,MAAOgZ,EAAWpB,cAAe2B,SAAUpS,GAChDiI,GAAe4J,EAAWpZ,YAAYW,KAAI,SAACqX,GAAD,OACzC,4BAAQrE,IAAKqE,EAAe5X,MAAO4X,GAChCyB,EAAE,aAAD,OAAcL,EAAWpZ,WAAzB,YAAuCgY,SAI9C,KACCoB,EAAWnB,YACX,0BAAMlE,UAAU,SACb0F,EAAE,gCAIT,6BAAML,EAAWlB,cAElBmB,GAAY,oCACX,6BACGI,EAAE,QACF,IACD,gCAASJ,EAAS/Y,UACjB,IACA+Y,EAASjB,YAAcqB,EAAE,WAAY,CAAEG,OAAQP,EAASjB,cAE3D,6BAAMiB,EAASnB,aACY,OAA1BmB,EAASf,cACR,6BACGmB,EAAE,WACF,IACD,2BACEI,KAAK,QAAQlP,KAAM,GAAIC,IAAK,GAC5BxK,MAAOiZ,EAASf,aAChBqB,SAAUnS,IAEX,IACA6R,EAASf,eAIfgB,GAAa,oCACXA,EAAUd,YAAc,6BAAMiB,EAAE,+BAChCH,EAAUpB,aAAe,6BAAMoB,EAAUpB,eAG9C,yBAAKnE,UAAU,qBACb,4BACE+F,SAAUf,EACVgB,QAAStS,GAERgS,EAAE,mBAEL,4BACE1F,UAAU,yBACV+F,SAAUb,EACVc,QAASzX,GAERmX,EAAE,gBAEL,yBAAK1F,UAAU,iBACZwF,GAEH,4BACExF,UAAU,yBACV+F,SAAUZ,EACVa,QAASxX,GAERkX,EAAE,gBAEL,4BACEK,SAAUd,EACVe,QAASrS,GAER+R,EAAE,sBCrIEO,I,MA9HQ,WACrB,IAAMhW,EAAQyR,aAAY,SAAC1J,GAAD,OAAqBA,EAAM/H,SAC/CmB,EAAYsQ,aAAY,SAAC1J,GAAD,OAAqBA,EAAM5G,aACnDoL,EAAYkF,aAAY,SAAC1J,GAAD,OAAqBA,EAAMwE,aACnDF,EAAeoF,aAAY,SAAC1J,GAAD,OAAqBA,EAAMsE,gBAItD4J,EAAqC,IAArB1J,EAAUhP,OAC1B2Y,GAAqB/U,EAAUZ,MAAK,SAACU,GAAD,OAAqC,KAA1BjB,EAAMiB,GAAO7E,MAAM,MAElE8J,EAAWwL,cACX/N,EAAOiO,uBAAY,WACvB1L,EAAShD,EAAcS,UACtB,CAACuC,IACEtC,EAAOgO,uBAAY,WACvB1L,EAAShD,EAAcU,UACtB,CAACsC,IACE9H,EAAYwT,uBAAY,WAC5B1L,EAASnI,EAAcK,eACtB,CAAC8H,IACE7H,EAAmBuT,uBAAY,WACnC1L,EAASnI,EAAcM,sBACtB,CAAC6H,IACEpC,EAAO8N,uBAAY,WACvB1L,EAAShD,EAAcY,UACtB,CAACoC,IACErC,EAAQ+N,uBAAY,WACxB1L,EAAShD,EAAcW,WACtB,CAACqC,IACEnC,EAAM6N,uBAAY,WACtB1L,EAAShD,EAAca,SACtB,CAACmC,IACE/B,EAAiByN,uBAAY,WACjC1L,EAAShD,EAAciB,oBACtB,CAAC+B,IACEmD,EAAYuI,uBAAY,WAC5B1L,EAAShD,EAAce,uBACtB,CAACiC,IACEiQ,EAAUvE,uBAAY,WAC1B1L,EAAShD,EAAckB,qBACtB,CAAC8B,IACEkQ,EAAaxE,uBAAY,cAG5B,IAEK6D,EAAMC,eAAND,EACR,OACE,yBAAK1F,UAAU,mBACb,kBAAC,GAAD,MACA,yBAAKA,UAAU,mBACb,4BACE+F,UA/Ca,EAgDbC,QAASpS,GAER8R,EAAE,SAEL,4BACEK,UApDa,EAqDbC,QAASnS,GAER6R,EAAE,SAEL,4BACEK,SAAUzJ,GAAiC,IAAjBrM,EAAMzC,OAChCwY,QAAS3X,GAERqX,EAAE,eAEL,4BACEK,SAAUzJ,GAAiC,IAAjBrM,EAAMzC,OAChCwY,QAAS1X,GAERoX,EAAE,qBAEL,4BACEK,SAA+B,IAArB3U,EAAU5D,OACpBwY,QAASjS,GAER2R,EAAE,SAEL,4BACEK,SAAUG,EACVF,QAASlS,GAER4R,EAAE,UAEL,4BACEK,SAA+B,IAArB3U,EAAU5D,OACpBwY,QAAShS,GAER0R,EAAE,QAEL,4BACEK,UAAQ,EACRC,QAAS5R,GAEOsR,EAAfpJ,EAAiB,eAAoB,mBAExC,4BACEyJ,SAAUI,EACVH,QAAS1M,GAERoM,EAAE,cAEL,4BACEK,UAAQ,EACRC,QAASI,GAERV,EAAE,aAGP,yBAAK1F,UAAU,WACb,yBAAKA,UAAU,oBAAoB4D,QAAQ,cAAcpD,MAAM,KAAKC,OAAO,OAC3E,4BACEsF,UAAQ,EACRC,QAASK,GAERX,EAAE,oB,QClHEY,OAXf,WAEE,OCH0B,WAC1B,IAAMnQ,EAAWwL,cACjB4E,aAAW,qBAAqB,SAACrJ,GAC/B/G,EAASnI,EAAcK,aACvB6O,EAAIsJ,mBACH,GAAI,CAACrQ,IACRoQ,aAAW,qBAAqB,SAACrJ,GAC/B/G,EAASnI,EAAcM,oBACvB4O,EAAIsJ,mBACH,GAAI,CAACrQ,IAERoQ,aAAW,qBAAqB,SAACrJ,GAC/B/G,EAAShD,EAAcS,QACvBsJ,EAAIsJ,mBACH,GAAI,CAACrQ,IACRoQ,aAAW,oDAAoD,SAACrJ,GAC9D/G,EAAShD,EAAcU,QACvBqJ,EAAIsJ,mBACH,GAAI,CAACrQ,IACRoQ,aAAW,qBAAqB,SAACrJ,GAC/B/G,EAAShD,EAAca,OACvBkJ,EAAIsJ,mBACH,GAAI,CAACrQ,IACRoQ,aAAW,qBAAqB,SAACrJ,GAC/B/G,EAAShD,EAAcY,QACvBmJ,EAAIsJ,mBACH,GAAI,CAACrQ,IACRoQ,aAAW,qBAAqB,SAACrJ,GAC/B/G,EAAShD,EAAcW,SACvBoJ,EAAIsJ,mBACH,GAAI,CAACrQ,IACRoQ,aAAW,OAAO,SAACrJ,GACjB/G,EAAShD,EAAcc,UACvBiJ,EAAIsJ,mBACH,GAAI,CAACrQ,IAERoQ,aAAW,OAAO,SAACrJ,GACjB/G,EAAShD,EAAcc,UACvBiJ,EAAIsJ,mBACH,GAAI,CAACrQ,IAERoQ,aAAW,gBAAgB,SAACrJ,GAC1B/G,EAAShD,EAAcgB,aAAa,EAAE,EAAG,KACzC+I,EAAIsJ,mBACH,GAAI,CAACrQ,IACRoQ,aAAW,gBAAgB,SAACrJ,GAC1B/G,EAAShD,EAAcgB,aAAa,CAAC,EAAG,KACxC+I,EAAIsJ,mBACH,GAAI,CAACrQ,IACRoQ,aAAW,cAAc,SAACrJ,GACxB/G,EAAShD,EAAcgB,aAAa,CAAC,GAAI,KACzC+I,EAAIsJ,mBACH,GAAI,CAACrQ,IACRoQ,aAAW,iBAAiB,SAACrJ,GAC3B/G,EAAShD,EAAcgB,aAAa,CAAC,EAAG,KACxC+I,EAAIsJ,mBACH,GAAI,CAACrQ,IACRoQ,aAAW,4BAA4B,SAACrJ,GACtC/G,EAAShD,EAAcgB,aAAa,EAAE,EAAG,KACzC+I,EAAIsJ,mBACH,GAAI,CAACrQ,IACRoQ,aAAW,4BAA4B,SAACrJ,GACtC/G,EAAShD,EAAcgB,aAAa,CAAC,EAAG,KACxC+I,EAAIsJ,mBACH,GAAI,CAACrQ,IACRoQ,aAAW,0BAA0B,SAACrJ,GACpC/G,EAAShD,EAAcgB,aAAa,CAAC,GAAI,KACzC+I,EAAIsJ,mBACH,GAAI,CAACrQ,IACRoQ,aAAW,6BAA6B,SAACrJ,GACvC/G,EAAShD,EAAcgB,aAAa,CAAC,EAAG,KACxC+I,EAAIsJ,mBACH,GAAI,CAACrQ,IDtERsQ,GAEE,yBAAKzG,UAAU,OACb,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,yBAAKA,UAAU,sBEDD0G,QACW,cAA7B/Y,OAAOC,SAAS+Y,UAEe,UAA7BhZ,OAAOC,SAAS+Y,UAEhBhZ,OAAOC,SAAS+Y,SAAS9F,MACvB,2D,sBCXA+F,GAAY,CAChBC,GAAI,CACFC,Y,QAIEC,GAAOtZ,EAAKyH,IAAI,QAClB8R,GAAM,KACV,GAAID,GACF,OAAQA,GAAKpa,MAAM,KAAK,IACtB,IAAK,KACHqa,GAAM,KACN,MACF,IAAK,KACHA,GAAM,KACN,MACF,IAAK,MACHA,GAAM,UACN,MACF,IAAK,MACHA,GAAM,UAKZC,KACGC,IAAIC,MACJC,KAAK,CACJR,aACAI,OAEAK,eAAe,EACfC,cAAe,CACbC,aAAa,KAIJN,GAAf,E,MChCAO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUxR,MAAOA,IACf,kBAAC,GAAD,QAGJuN,SAASkE,eAAe,SFyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjS,MAAK,SAAAkS,GACJA,EAAaC,gBAEd5R,OAAM,SAAAG,GACLD,QAAQC,MAAMA,EAAM0R,c","file":"static/js/main.2876b364.chunk.js","sourcesContent":["import actionCreatorFactory from 'typescript-fsa';\n\nexport type CTMInv = (x: number, y: number) => [number, number];\nexport enum RectPointPosition {\n  north,\n  south,\n  east,\n  west,\n  southeast,\n}\n\nconst actionCreator = actionCreatorFactory('EDITOR');\n\nexport const dragActions = {\n  startAreaSelect: actionCreator<React.MouseEvent>('AREA_SELECT_START'),\n  startSelectionDrag: actionCreator<React.MouseEvent>('SELECTION_DRAG_START'),\n  startPointDrag: actionCreator<[React.MouseEvent, number]>('MOVE_POINT_START'),\n  startResize: actionCreator<[React.MouseEvent, RectPointPosition]>('RESIZE_START'),\n\n  mouseMove: actionCreator<MouseEvent>('MOUSE_MOVE'),\n  mouseUp: actionCreator<MouseEvent>('MOUSE_UP'),\n\n  updateCTMInv: actionCreator<CTMInv>('UPDATE_CTMINV'),\n}\n","export interface GlyphLine {\n  value: number[];\n  partName?: string;\n}\n\nexport const getNumColumns = (strokeType: number): number => {\n  switch (strokeType) {\n    case 0:\n    case 1:\n    case 9:\n      return 7;\n    case 2:\n    case 3:\n    case 4:\n      return 9;\n    case 6:\n    case 7:\n    case 99:\n      return 11;\n    default:\n      return 0;\n  }\n};\n\nexport const parseGlyphLine = (glyphLineStr: string): GlyphLine => {\n  const splitLine = glyphLineStr.split(':');\n  const strokeType = +splitLine[0];\n  const numColumns = getNumColumns(strokeType);\n  const value = [];\n  for (let i = 0; i < numColumns; i++) {\n    value.push(Math.floor(+splitLine[i] || 0));\n  }\n  if (value[0] === 99) {\n    const partName = splitLine[7] || '';\n    return { value, partName }\n  }\n  return { value };\n};\n\nexport const unparseGlyphLine = (glyphLine: GlyphLine): string => {\n  const values: (number | string)[] = glyphLine.value.slice();\n  if (values[0] === 99) {\n    values[7] = glyphLine.partName || '';\n  }\n  return values.join(':');\n};\n\nexport const isValidGlyphLine = (glyphLine: GlyphLine): boolean => (\n  glyphLine.value.length !== 0 &&\n  (\n    glyphLine.value[0] !== 0 ||\n    glyphLine.value[1] === 97 || glyphLine.value[1] === 98 || glyphLine.value[1] === 99\n  )\n);\n\n\nexport type Glyph = GlyphLine[];\n\nexport const parseGlyph = (glyphStr: string): Glyph => (\n  glyphStr.split(/[$\\r\\n]+/)\n    .map((line) => parseGlyphLine(line))\n    .filter((gLine) => isValidGlyphLine(gLine))\n);\n\nexport const unparseGlyph = (glyph: Glyph): string => (\n  glyph\n    .map((gLine) => unparseGlyphLine(gLine))\n    .join('$')\n);\n\n\nexport interface PointDescriptor {\n  lineIndex: number;\n  pointIndex: number;\n}\n","const args = new URLSearchParams(window.location.hash.slice(1));\n\nexport default args;\n","import actionCreatorFactory from 'typescript-fsa';\n\nconst actionCreator = actionCreatorFactory('SELECT');\n\nexport const selectActions = {\n  selectSingle: actionCreator<number>('SELECT_SINGLE'),\n  selectAddSingle: actionCreator<number>('SELECT_ADD_SINGLE'),\n  selectRemoveSingle: actionCreator<number>('SELECT_REMOVE_SINGLE'),\n  selectNone: actionCreator('SELECT_NONE'),\n  selectAll: actionCreator('SELECT_ALL'),\n  selectDeselected: actionCreator('SELECT_TOGGLE_ALL'),\n  selectPrev: actionCreator('SELECT_PREV'),\n  selectNext: actionCreator('SELECT_NEXT'),\n};\n","import { Glyph, PointDescriptor, getNumColumns } from './glyph';\n\nexport enum MatchType {\n  none,\n  online,\n  match,\n}\n\nexport const getMatchType = (glyph: Glyph, point: PointDescriptor): MatchType => {\n  const glyphLine = glyph[point.lineIndex];\n\n  const endPointIndex = (getNumColumns(glyphLine.value[0]) - 3) / 2 - 1;\n  if (point.pointIndex !== 0 && point.pointIndex !== endPointIndex) {\n    return MatchType.none;\n  }\n\n  const x = glyphLine.value[3 + point.pointIndex * 2];\n  const y = glyphLine.value[3 + point.pointIndex * 2 + 1];\n  const isOnline = (x1: number, y1: number, x2: number, y2: number): boolean => (\n    (\n      x1 === x2 && // 垂直\n      x1 === x && y1 <= y && y <= y2\n    ) || (\n      y1 === y2 && // 水平\n      y1 === y && x1 <= x && x <= x2\n    )\n  );\n\n  let result = MatchType.none;\n  for (let lineIndex = 0; lineIndex < glyph.length; lineIndex++) {\n    if (point.lineIndex === lineIndex) {\n      continue;\n    }\n    const glyphLine = glyph[lineIndex];\n    if ([0, 9, 99].includes(glyphLine.value[0])) {\n      continue;\n    }\n\n    if (glyphLine.value[3] === x && glyphLine.value[4] === y) {\n      return MatchType.match;\n    }\n    const endPointIndex = (getNumColumns(glyphLine.value[0]) - 3) / 2 - 1;\n    if (\n      glyphLine.value[3 + endPointIndex * 2] === x &&\n      glyphLine.value[3 + endPointIndex * 2 + 1] === y\n    ) {\n      return MatchType.match;\n    }\n\n    switch (glyphLine.value[0]) {\n      case 3:\n      case 4:\n        if (\n          isOnline(glyphLine.value[3], glyphLine.value[4], glyphLine.value[5], glyphLine.value[6]) ||\n          isOnline(glyphLine.value[5], glyphLine.value[6], glyphLine.value[7], glyphLine.value[8])\n        ) {\n          result = MatchType.online;\n        }\n        break;\n      case 1:\n      case 7:\n        if (isOnline(glyphLine.value[3], glyphLine.value[4], glyphLine.value[5], glyphLine.value[6])) {\n          result = MatchType.online;\n        }\n        break;\n    }\n  }\n  return result;\n};\n","import memoizeOne from 'memoize-one';\n\nimport { GlyphLine, Glyph, PointDescriptor, getNumColumns } from './glyph';\n\ninterface ConnectablePoint {\n  position: 'start' | 'end';\n  strokeType: number;\n  shapeType: number;\n  coord: [number, number];\n  pointIndex: number;\n}\n\ninterface ConnectablePointFilter {\n  position: 'start' | 'end';\n  strokeTypes: number[];\n  shapeTypes: number[];\n}\n\nconst connectablePairs: [ConnectablePointFilter, ConnectablePointFilter][] = [\n  [\n    // 左上\n    {\n      position: 'start',\n      strokeTypes: [1],\n      shapeTypes: [2],\n    },\n    {\n      position: 'start',\n      strokeTypes: [1, 2, 3, 4, 6, 7],\n      shapeTypes: [12],\n    },\n  ],\n  [\n    // 左下\n    {\n      position: 'start',\n      strokeTypes: [1],\n      shapeTypes: [2],\n    },\n    {\n      position: 'end',\n      strokeTypes: [1],\n      shapeTypes: [13, 313, 413],\n    },\n  ],\n  [\n    // 右上\n    {\n      position: 'end',\n      strokeTypes: [1],\n      shapeTypes: [2],\n    },\n    {\n      position: 'start',\n      strokeTypes: [1, 2, 3, 4, 6, 7],\n      shapeTypes: [22],\n    },\n  ],\n  [\n    // 右下\n    {\n      position: 'end',\n      strokeTypes: [1],\n      shapeTypes: [2],\n    },\n    {\n      position: 'end',\n      strokeTypes: [1],\n      shapeTypes: [23, 24],\n    },\n  ],\n];\n\nconst matchConnectablePoint = (filter: ConnectablePointFilter, point: ConnectablePoint) => (\n  filter.position === point.position &&\n  filter.strokeTypes.includes(point.strokeType) &&\n  filter.shapeTypes.includes(point.shapeType)\n)\n\nconst isConnectable = (point1: ConnectablePoint, point2: ConnectablePoint) => (\n  point1.coord[0] === point2.coord[0] &&\n  point1.coord[1] === point2.coord[1] &&\n  connectablePairs.some(([filter1, filter2]) => (\n    (matchConnectablePoint(filter1, point1) && matchConnectablePoint(filter2, point2)) ||\n    (matchConnectablePoint(filter2, point1) && matchConnectablePoint(filter1, point2))\n  ))\n);\n\nconst getConnectablePoints = (glyphLine: GlyphLine): ConnectablePoint[] => {\n  const result: ConnectablePoint[] = [];\n  switch (glyphLine.value[0]) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 6:\n    case 7: {\n      result.push({\n        position: 'start',\n        strokeType: glyphLine.value[0],\n        shapeType: glyphLine.value[1],\n        coord: [\n          glyphLine.value[3],\n          glyphLine.value[4],\n        ],\n        pointIndex: 0,\n      });\n      const endPointIndex = (getNumColumns(glyphLine.value[0]) - 3) / 2 - 1;\n      result.push({\n        position: 'end',\n        strokeType: glyphLine.value[0],\n        shapeType: glyphLine.value[2],\n        coord: [\n          glyphLine.value[3 + endPointIndex * 2],\n          glyphLine.value[3 + endPointIndex * 2 + 1],\n        ],\n        pointIndex: endPointIndex,\n      });\n      break;\n    }\n  }\n  return result;\n};\n\nexport const listupConnectedPoints = memoizeOne((glyph: Glyph, points: PointDescriptor[]): PointDescriptor[] => {\n  const sPoints: ConnectablePoint[] = [];\n  for (const { lineIndex, pointIndex } of points) {\n    for (const sPoint of getConnectablePoints(glyph[lineIndex])) {\n      if (sPoint.pointIndex === pointIndex) {\n        sPoints.push(sPoint);\n      }\n    }\n  }\n  const result: PointDescriptor[] = [];\n  glyph.forEach((glyphLine, lineIndex) => {\n    for (const dPoint of getConnectablePoints(glyphLine)) {\n      if (sPoints.some((sPoint) => isConnectable(sPoint, dPoint))) {\n        result.push({\n          lineIndex,\n          pointIndex: dPoint.pointIndex,\n        });\n      }\n    }\n  });\n  return result;\n}, ([glyph1, points1], [glyph2, points2]) => (\n  glyph1 === glyph2 &&\n  points1.length === points2.length &&\n  points1.every((point1, index) => (\n    point1.lineIndex === points2[index].lineIndex &&\n    point1.pointIndex === points2[index].pointIndex\n  ))\n));\n\nexport const listupConnectedPointsOfSelection = memoizeOne((glyph: Glyph, selection: number[]): PointDescriptor[] => {\n  const selectedDescs: PointDescriptor[] = [];\n  for (const lineIndex of selection) {\n    const glyphLine = glyph[lineIndex];\n    selectedDescs.push({ lineIndex, pointIndex: 0 });\n    selectedDescs.push({ lineIndex, pointIndex: (getNumColumns(glyphLine.value[0]) - 3) / 2 - 1 });\n  }\n  return listupConnectedPoints(glyph, selectedDescs)\n    .filter(({ lineIndex }) => !selection.includes(lineIndex));\n});\n","import { GlyphLine, Glyph, PointDescriptor } from './glyph';\n\nimport { BBX } from './bbx';\nimport { listupConnectedPoints, listupConnectedPointsOfSelection } from './connection';\n\nexport const applyGlyphLineOperation = (glyphLine: GlyphLine, tX: (x: number) => number, tY: (y: number) => number): GlyphLine => {\n  switch (glyphLine.value[0]) {\n    case 99: {\n      const value = glyphLine.value.slice();\n      value[3] = tX(value[3]);\n      value[4] = tY(value[4]);\n      value[5] = tX(value[5]);\n      value[6] = tY(value[6]);\n      return { value, partName: glyphLine.partName };\n    }\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 6:\n    case 7:\n    case 9: {\n      const value = glyphLine.value.slice();\n      for (let i = 3; i + 2 <= value.length; i += 2) {\n        value[i] = tX(value[i]);\n        value[i + 1] = tY(value[i + 1]);\n      }\n      return { value };\n    }\n    default:\n      return glyphLine;\n  }\n}\n\nexport const applyGlyphPointOperation = (glyph: Glyph, pdescs: PointDescriptor[], tX: (x: number) => number, tY: (y: number) => number): Glyph => {\n  if (pdescs.length === 0) {\n    return glyph;\n  }\n  const newGlyph = glyph.slice();\n  for (const { lineIndex, pointIndex } of pdescs) {\n    const glyphLine = newGlyph[lineIndex];\n    const newValue = glyphLine.value.slice();\n    newValue[3 + pointIndex * 2] = tX(newValue[3 + pointIndex * 2]);\n    newValue[3 + pointIndex * 2 + 1] = tY(newValue[3 + pointIndex * 2 + 1]);\n    newGlyph[lineIndex] = {\n      ...glyphLine,\n      value: newValue,\n    };\n  }\n  return newGlyph;\n};\n\n\nexport const moveSelectedGlyphLines = (glyph: Glyph, selection: number[], dx: number, dy: number): Glyph => {\n  if (selection.length === 0) {\n    return glyph;\n  }\n  const targetDescs = listupConnectedPointsOfSelection(glyph, selection);\n\n  const tX = (x: number) => Math.round(x + dx);\n  const tY = (y: number) => Math.round(y + dy);\n  glyph = glyph.map((glyphLine, index) => selection.includes(index)\n    ? applyGlyphLineOperation(glyphLine, tX, tY)\n    : glyphLine\n  );\n  glyph = applyGlyphPointOperation(glyph, targetDescs, tX, tY);\n  return glyph;\n};\n\nexport const moveSelectedPoint = (glyph: Glyph, selection: number[], pointIndex: number, dx: number, dy: number): Glyph => {\n  if (selection.length === 0) {\n    return glyph;\n  }\n  const lineIndex = selection[0];\n  const selectedDesc: PointDescriptor = { lineIndex, pointIndex };\n  const targetDescs = listupConnectedPoints(glyph, [selectedDesc])\n    .filter((targetDesc) => targetDesc.lineIndex !== lineIndex);\n  targetDescs.push(selectedDesc);\n\n  const tX = (x: number) => Math.round(x + dx);\n  const tY = (y: number) => Math.round(y + dy);\n  glyph = applyGlyphPointOperation(glyph, targetDescs, tX, tY);\n  return glyph;\n};\n\nexport const resizeGlyphLine = (glyphLine: GlyphLine, oldBBX: BBX, newBBX: BBX): GlyphLine => {\n  const [x11, y11, x12, y12] = oldBBX;\n  const [x21, y21, x22, y22] = newBBX;\n  const tX = (x: number) => Math.round(x21 + (x - x11) * (x22 - x21) / (x12 - x11));\n  const tY = (y: number) => Math.round(y21 + (y - y11) * (y22 - y21) / (y12 - y11));\n  return applyGlyphLineOperation(glyphLine, tX, tY);\n};\n\nexport const resizeSelectedGlyphLines = (glyph: Glyph, selection: number[], oldBBX: BBX, newBBX: BBX): Glyph => {\n  return glyph.map((glyphLine, index) => selection.includes(index)\n    ? resizeGlyphLine(glyphLine, oldBBX, newBBX)\n    : glyphLine\n  );\n};\n","import actionCreatorFactory from 'typescript-fsa';\n\nimport { StretchParam } from '../kageUtils/stretchparam';\n\nconst actionCreator = actionCreatorFactory('EDITOR');\n\nexport const editorActions = {\n  loadedBuhin: actionCreator<[string, string]>('LOAD_BUHIN_DATA'),\n  loadedStretchParam: actionCreator<[string, StretchParam]>('LOAD_STRETCH_PARAM'),\n\n  changeStrokeType: actionCreator<number>('CHANGE_STROKE_TYPE'),\n  changeHeadShapeType: actionCreator<number>('CHANGE_HEAD_SHAPE_TYPE'),\n  changeTailShapeType: actionCreator<number>('CHANGE_TAIL_SHAPE_TYPE'),\n  changeStretchCoeff: actionCreator<number>('CHANGE_STRETCH_COEFF'),\n\n  swapWithPrev: actionCreator('SWAP_WITH_PREV'),\n  swapWithNext: actionCreator('SWAP_WITH_NEXT'),\n\n  undo: actionCreator('UNDO'),\n  redo: actionCreator('REDO'),\n\n  paste: actionCreator('PASTE'),\n  copy: actionCreator('COPY_SELECTION'),\n  cut: actionCreator('CUT_SELECTION'),\n  delete: actionCreator('DELETE_SELECTION'),\n  decomposeSelected: actionCreator('DECOMPOSE_SELECTION'),\n  moveSelected: actionCreator<[number, number]>('MOVE_SELECTED'),\n\n  toggleFreehand: actionCreator('TOGGLE_FREEHAND_MODE'),\n\n  openOptionModal: actionCreator('OPEN_OPTION_MODAL'),\n  closeOptionModal: actionCreator('CLOSE_OPTION_MODAL'),\n};\n","// The temporary reverse proxy which adds 'Access-Control-Allow-Origin: *' header.\n// This header is required for cross-origin requests.\nconst apiUrlPrefix = 'https://asia-northeast1-ku6goma.cloudfunctions.net/gwproxy';\n\nconst callApi = async (path: string) => {\n  const response = await fetch(apiUrlPrefix + path);\n  if (!response.ok) {\n    throw new Error('API error occurred');\n  }\n  return new URLSearchParams(await response.text());\n};\n\nexport const getSource = async (name: string) => {\n  const result = await callApi(`/get_source.cgi?name=${encodeURIComponent(name)}`);\n  return result.get('data');\n};\n\nexport const search = async (query: string) => {\n  const result = await callApi(`/search4ge.cgi?query=${encodeURIComponent(query)}`);\n  return result.get('data')!;\n};\n\nexport const getCandidate = async (name: string) => {\n  const result = await callApi(`/get_candidate.cgi?name=${encodeURIComponent(name)}`);\n  return result.get('data')!;\n};\n","import memoizeOne from 'memoize-one';\n\nimport { Kage, Polygons } from '@kurgm/kage-engine';\nimport { Glyph, unparseGlyphLine } from './kageUtils/glyph';\nimport { StretchParam } from './kageUtils/stretchparam';\n\nimport store from './store';\nimport { editorActions } from './actions/editor';\n\nimport { getSource } from './callapi';\n\nexport const kage = new Kage();\n\nlet waiting = new Set<string>();\nconst loadAbsentBuhin = (name: string) => {\n  if (waiting.has(name)) {\n    return;\n  }\n  waiting.add(name);\n  getSource(name)\n    .then((source) => {\n      if (typeof source !== 'string') {\n        throw new Error(`failed to get buhin source of ${name}`);\n      }\n      const stretchMatch = /^0:1:0:(-?\\d+):(-?\\d+):(-?\\d+):(-?\\d+)(?=$|\\$)/.exec(source);\n      if (stretchMatch) {\n        const params: StretchParam = [\n          +stretchMatch[1] || 0,\n          +stretchMatch[2] || 0,\n          +stretchMatch[3] || 0,\n          +stretchMatch[4] || 0,\n        ];\n        store.dispatch(editorActions.loadedStretchParam([name, params]));\n      }\n      store.dispatch(editorActions.loadedBuhin([name, source]));\n      waiting.delete(name);\n    })\n    .catch((err) => console.error(err));\n};\n\nexport const makeGlyphSeparated = memoizeOne((glyph: Glyph, map: Map<string, string>): Polygons[] => {\n  const data = glyph.map(unparseGlyphLine);\n  kage.kBuhin.search = (name) => {\n    const result = map.get(name);\n    if (typeof result === 'undefined') {\n      loadAbsentBuhin(name);\n      return '';\n    }\n    return result;\n  };\n  const result = kage.makeGlyphSeparated(data);\n  return result;\n});\n","import memoizeOne from 'memoize-one';\n\nimport { GlyphLine } from './glyph';\n\nexport type BBX = [number, number, number, number];\n\nexport const bbxOfPoints = (points: [number, number][]): BBX => {\n  const xs = points.map(([x]) => x);\n  const ys = points.map(([, y]) => y);\n  return [\n    Math.min(...xs),\n    Math.min(...ys),\n    Math.max(...xs),\n    Math.max(...ys),\n  ];\n};\n\nexport const getGlyphLineBBX = (glyphLine: GlyphLine): BBX => {\n  switch (glyphLine.value[0]) {\n    case 99:\n      return bbxOfPoints([\n        [glyphLine.value[3], glyphLine.value[4]],\n        [glyphLine.value[5], glyphLine.value[6]],\n      ]);\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 6:\n    case 7:\n    case 9: {\n      const points: [number, number][] = [];\n      for (let i = 3; i + 2 <= glyphLine.value.length; i += 2) {\n        points.push([glyphLine.value[i], glyphLine.value[i + 1]]);\n      }\n      return bbxOfPoints(points);\n    }\n    default:\n      return bbxOfPoints([]);\n  }\n}\n\nexport const mergeBBX = ([x11, y11, x12, y12]: BBX, [x21, y21, x22, y22]: BBX): BBX => [\n  Math.min(x11, x21),\n  Math.min(y11, y21),\n  Math.max(x12, x22),\n  Math.max(y12, y22),\n];\n\nexport const getGlyphLinesBBX = memoizeOne((glyphLines: GlyphLine[]): BBX => {\n  return glyphLines.map(getGlyphLineBBX).reduce(mergeBBX, bbxOfPoints([]));\n}, ([gLines1], [gLines2]) => (\n  gLines1.length === gLines2.length &&\n  gLines1.every((gLine1, index) => gLine1 === gLines2[index])\n));\n","import { createSelector } from 'reselect';\n\nimport { RectPointPosition } from '../actions/drag';\n\nimport { AppState } from '../reducers';\n\nimport { Glyph, GlyphLine } from '../kageUtils/glyph';\nimport { getGlyphLinesBBX } from '../kageUtils/bbx';\nimport { moveSelectedGlyphLines, moveSelectedPoint, resizeSelectedGlyphLines } from '../kageUtils/transform';\n\nexport const resizeSelected = (glyph: Glyph, selection: number[], position: RectPointPosition, dx: number, dy: number): Glyph => {\n  if (selection.length === 1) {\n    const selectedGlyphLine = glyph[selection[0]];\n    switch (selectedGlyphLine.value[0]) {\n      case 0:\n      case 9:\n      case 99: {\n        const newValue = selectedGlyphLine.value.slice();\n        switch (position) {\n          case RectPointPosition.north:\n            newValue[4] += dy;\n            break;\n          case RectPointPosition.west:\n            newValue[3] += dx;\n            break;\n          case RectPointPosition.south:\n            newValue[6] += dy;\n            break;\n          case RectPointPosition.east:\n            newValue[5] += dx;\n            break;\n          case RectPointPosition.southeast:\n            newValue[5] += dx;\n            newValue[6] += dy;\n            break;\n          default:\n            // exhaustive?\n            ((_x: never) => { })(position);\n        }\n        const newGlyphLine: GlyphLine = selectedGlyphLine.value[0] === 99\n          ? { value: newValue, partName: selectedGlyphLine.partName }\n          : { value: newValue };\n        return glyph.map((glyphLine, index) => index === selection[0] ? newGlyphLine : glyphLine);\n      }\n    }\n  }\n  const minSize = 20;\n  const oldBBX = getGlyphLinesBBX(selection.map((index) => glyph[index]));\n  const newBBX = oldBBX.slice() as typeof oldBBX;\n  switch (position) {\n    case RectPointPosition.north:\n      newBBX[1] = Math.min(newBBX[1] + dy, newBBX[3] - minSize);\n      break;\n    case RectPointPosition.west:\n      newBBX[0] = Math.min(newBBX[0] + dx, newBBX[2] - minSize);\n      break;\n    case RectPointPosition.south:\n      newBBX[3] = Math.max(newBBX[3] + dy, newBBX[1] + minSize);\n      break;\n    case RectPointPosition.east:\n      newBBX[2] = Math.max(newBBX[2] + dx, newBBX[0] + minSize);\n      break;\n    case RectPointPosition.southeast:\n      newBBX[2] = Math.max(newBBX[2] + dx, newBBX[0] + minSize);\n      newBBX[3] = Math.max(newBBX[3] + dy, newBBX[1] + minSize);\n      break;\n    default:\n      // exhaustive?\n      ((_x: never) => { })(position);\n  }\n  return resizeSelectedGlyphLines(glyph, selection, oldBBX, newBBX);\n};\n\nexport const draggedGlyphSelector = createSelector([\n  (state: AppState) => state.glyph,\n  (state: AppState) => state.selection,\n  (state: AppState) => state.dragSelection,\n  (state: AppState) => state.dragPoint,\n  (state: AppState) => state.resizeSelection,\n], (glyph, selection, dragSelection, dragPoint, resizeSelection) => {\n  if (dragSelection) {\n    const [x1, y1, x2, y2] = dragSelection;\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    glyph = moveSelectedGlyphLines(glyph, selection, dx, dy);\n  } else if (dragPoint) {\n    const [pointIndex, [x1, y1, x2, y2]] = dragPoint;\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    glyph = moveSelectedPoint(glyph, selection, pointIndex, dx, dy);\n  } else if (resizeSelection) {\n    const [position, [x1, y1, x2, y2]] = resizeSelection;\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    glyph = resizeSelected(glyph, selection, position, dx, dy);\n  };\n  return glyph;\n});\n","import { GlyphLine } from './glyph';\n\nexport type StretchParam = [number, number, number, number];\nexport type StretchPositions = [number, number, number, number];\n\nexport const getStretchPositions = (glyphLine: GlyphLine): StretchPositions | null => {\n  if (glyphLine.value[0] !== 99) {\n    return null;\n  }\n  const sx = glyphLine.value[9];\n  const sy = glyphLine.value[10];\n  const tx = glyphLine.value[1];\n  const ty = glyphLine.value[2];\n  return [sx, sy, tx, ty];\n};\n\nexport const setStretchPositions = (glyphLine: GlyphLine, positions: StretchPositions): GlyphLine => {\n  if (glyphLine.value[0] !== 99) {\n    return glyphLine;\n  }\n  const [sx, sy, tx, ty] = positions;\n\n  const newValue = glyphLine.value.slice();\n  newValue[9] = sx;\n  newValue[10] = sy;\n  newValue[1] = tx;\n  newValue[2] = ty;\n  return { value: newValue, partName: glyphLine.partName };\n};\n\nexport const normalizeStretchPositions = (positions: StretchPositions): StretchPositions => {\n  let [sx, sy, tx, ty] = positions;\n  if (tx <= 100) {\n    tx += 200;\n    sx = sy = 0;\n  }\n  return [sx, sy, tx, ty];\n};\n\nexport const calcStretchPositions = (param: StretchParam, k: number): StretchPositions => {\n  const [x0, y0, x1, y1] = param;\n  return [\n    x0 - 100,\n    y0 - 100,\n    x0 + (x1 - x0) * k / 20 + 100,\n    y0 + (y1 - y0) * k / 20 - 100,\n  ];\n};\n\nconst clampStretchScalar = (k: number): number => Math.max(-10, Math.min(10, k));\n\nexport const calcStretchScalar = (param: StretchParam, positions: StretchPositions): number => {\n  const [x0, y0, x1, y1] = param;\n  if (x0 === x1 && y0 === y1) {\n    return 0;\n  }\n  const [sx, sy, tx, ty] = normalizeStretchPositions(positions);\n  if (sx === tx - 200 && sy === ty) {\n    return 0;\n  }\n  return clampStretchScalar(Math.round(\n    Math.abs(x0 - x1) > Math.abs(y0 - y1)\n      ? (tx - 100 - x0) / (x1 - x0) * 20\n      : (ty + 100 - y0) / (y1 - y0) * 20\n  )) || 0;\n}\n","import { kage } from '../kage';\n\nimport { GlyphLine, parseGlyph, unparseGlyph } from './glyph';\nimport { getStretchPositions, normalizeStretchPositions, setStretchPositions } from './stretchparam';\nimport { applyGlyphLineOperation } from './transform';\n\nexport const decompose = (glyphLine: GlyphLine, buhinMap: Map<string, string>): GlyphLine[] => {\n  if (glyphLine.value[0] !== 99) {\n    return [glyphLine];\n  }\n  const buhinSource = buhinMap.get(glyphLine.partName!);\n  if (!buhinSource) {\n    return [glyphLine];\n  }\n\n  let failedBuhin = false;\n  kage.kBuhin.search = (name: string) => {\n    const data = buhinMap.get(name);\n    if (typeof data !== 'string') {\n      failedBuhin = true;\n      return '';\n    }\n    return data;\n  };\n\n  const glyph = parseGlyph(buhinSource);\n\n  const strokesArray =\n    // @ts-ignore 2445\n    kage.getEachStrokes(\n      unparseGlyph(glyph)\n    );\n  const box =\n    // @ts-ignore 2445\n    kage.getBox(\n      strokesArray\n    );\n\n  if (failedBuhin) {\n    return [glyphLine];\n  }\n\n  const x1 = glyphLine.value[3];\n  const y1 = glyphLine.value[4];\n  const x2 = glyphLine.value[5];\n  const y2 = glyphLine.value[6];\n  const [sx, sy, tx, ty] = normalizeStretchPositions(getStretchPositions(glyphLine)!);\n  const isStretchEnabled = !(sx === tx - 200 && sy === ty);\n\n  return glyph.map((oldGlyphLine) => {\n    const tX = (x: number) => {\n      const stretchedX = isStretchEnabled\n        ? kage.stretch(tx - 200, sx, x, box.minX, box.maxX)\n        : x;\n      return Math.round(stretchedX / 200 * (x2 - x1) + x1);\n    };\n    const tY = (y: number) => {\n      const stretchedY = isStretchEnabled\n        ? kage.stretch(ty, sy, y, box.minY, box.maxY)\n        : y;\n      return Math.round(stretchedY / 200 * (y2 - y1) + y1);\n    };\n    const newGlyphLine = applyGlyphLineOperation(oldGlyphLine, tX, tY);\n\n    if (!(isStretchEnabled && newGlyphLine.value[0] === 99)) {\n      return newGlyphLine;\n    }\n\n    const [sx2, sy2, tx2, ty2] = normalizeStretchPositions(getStretchPositions(newGlyphLine)!);\n    if (!(sx2 === tx2 - 200 && sy2 === ty2)) {\n      // Cannot compose two stretches...\n      return newGlyphLine;\n    }\n\n    const px1 = newGlyphLine.value[3];\n    const py1 = newGlyphLine.value[4];\n    const px2 = newGlyphLine.value[5];\n    const py2 = newGlyphLine.value[6];\n\n    if (px1 === px2 || py1 === py2) {\n      return newGlyphLine;\n    }\n\n    const revX = (x: number) => (x - px1) / (px2 - px1) * 200;\n    const revY = (y: number) => (y - py1) / (py2 - py1) * 200;\n    return setStretchPositions(newGlyphLine, [\n      revX(sx2 + 100),\n      revY(sy2 + 100),\n      revX(tx2 - 100) + 100,\n      revY(ty2 + 100),\n    ]);\n  });\n};\n","import memoizeOne from 'memoize-one';\n\nimport { GlyphLine, getNumColumns } from './glyph';\n\nexport const strokeTypes = [1, 2, 3, 4, 6, 7];\n\nexport const headShapeTypes: Record<number, number[]> = {\n  1: [0, 2, 32, 12, 22],\n  2: [0, 32, 12, 22, 7],\n  3: [0, 32, 12, 22],\n  4: [0, 22],\n  6: [0, 32, 12, 22, 7],\n  7: [0, 32, 12, 22],\n};\n\nexport const tailShapeTypes: Record<number, number[]> = {\n  1: [0, 2, 32, 13, 23, 4, 313, 413, 24],\n  2: [7, 0, 8, 4, 5],\n  3: [0, 5],\n  4: [0, 5],\n  6: [7, 0, 8, 4, 5],\n  7: [7],\n};\n\nexport const changeStrokeType = (glyphLine: GlyphLine, newType: number): GlyphLine => {\n  const oldType = glyphLine.value[0];\n  if (!strokeTypes.includes(oldType) || !strokeTypes.includes(newType)) {\n    return glyphLine;\n  }\n  const newGlyphLine = {\n    value: glyphLine.value.slice(),\n  };\n\n  newGlyphLine.value[0] = newType;\n\n  if (!headShapeTypes[newType].includes(newGlyphLine.value[1])) {\n    newGlyphLine.value[1] = headShapeTypes[newType][0];\n  }\n  if (!tailShapeTypes[newType].includes(newGlyphLine.value[2])) {\n    newGlyphLine.value[2] = tailShapeTypes[newType][0];\n  }\n\n  const oldNumPoints = (getNumColumns(oldType) - 3) / 2;\n  const newNumPoints = (getNumColumns(newType) - 3) / 2;\n  if (oldNumPoints === newNumPoints) {\n    return newGlyphLine;\n  }\n  if (oldNumPoints === 2 && newNumPoints === 3) {\n    const x1 = newGlyphLine.value[3];\n    const y1 = newGlyphLine.value[4];\n    const x3 = newGlyphLine.value[5];\n    const y3 = newGlyphLine.value[6];\n\n    const x2 = Math.round((x1 + x3) / 2);\n    const y2 = Math.round((y1 + y3) / 2);\n    newGlyphLine.value = newGlyphLine.value.slice(0, 3).concat(\n      [x1, y1, x2, y2, x3, y3]\n    );\n    return newGlyphLine;\n  }\n  if (oldNumPoints === 2 && newNumPoints === 4) {\n    const x1 = newGlyphLine.value[3];\n    const y1 = newGlyphLine.value[4];\n    const x4 = newGlyphLine.value[5];\n    const y4 = newGlyphLine.value[6];\n\n    const x2 = Math.round((2 * x1 + x4) / 3);\n    const y2 = Math.round((2 * y1 + y4) / 3);\n    const x3 = Math.round((x1 + 2 * x4) / 3);\n    const y3 = Math.round((y1 + 2 * y4) / 3);\n    newGlyphLine.value = newGlyphLine.value.slice(0, 3).concat(\n      [x1, y1, x2, y2, x3, y3, x4, y4]\n    );\n    return newGlyphLine;\n  }\n  if (oldNumPoints === 3 && newNumPoints === 2) {\n    const x1 = newGlyphLine.value[3];\n    const y1 = newGlyphLine.value[4];\n    const x2 = newGlyphLine.value[7];\n    const y2 = newGlyphLine.value[8];\n    newGlyphLine.value = newGlyphLine.value.slice(0, 3).concat(\n      [x1, y1, x2, y2]\n    );\n    return newGlyphLine;\n  }\n  if (oldNumPoints === 3 && newNumPoints === 4) {\n    const x1 = newGlyphLine.value[3];\n    const y1 = newGlyphLine.value[4];\n    const xm = newGlyphLine.value[5];\n    const ym = newGlyphLine.value[6];\n    const x4 = newGlyphLine.value[7];\n    const y4 = newGlyphLine.value[8];\n\n    const x2 = Math.round((x1 + 2 * xm) / 3);\n    const y2 = Math.round((y1 + 2 * ym) / 3);\n    const x3 = Math.round((x4 + 2 * xm) / 3);\n    const y3 = Math.round((y4 + 2 * ym) / 3);\n    newGlyphLine.value = newGlyphLine.value.slice(0, 3).concat(\n      [x1, y1, x2, y2, x3, y3, x4, y4]\n    );\n    return newGlyphLine;\n  }\n  if (oldNumPoints === 4 && newNumPoints === 2) {\n    const x1 = newGlyphLine.value[3];\n    const y1 = newGlyphLine.value[4];\n    const x2 = newGlyphLine.value[9];\n    const y2 = newGlyphLine.value[10];\n    newGlyphLine.value = newGlyphLine.value.slice(0, 3).concat(\n      [x1, y1, x2, y2]\n    );\n    return newGlyphLine;\n  }\n  if (oldNumPoints === 4 && newNumPoints === 3) {\n    const x1 = newGlyphLine.value[3];\n    const y1 = newGlyphLine.value[4];\n    const xm1 = newGlyphLine.value[5];\n    const ym1 = newGlyphLine.value[6];\n    const xm2 = newGlyphLine.value[7];\n    const ym2 = newGlyphLine.value[8];\n    const x3 = newGlyphLine.value[9];\n    const y3 = newGlyphLine.value[10];\n\n    const x2 = Math.round((xm1 + xm2) / 2);\n    const y2 = Math.round((ym1 + ym2) / 2);\n    newGlyphLine.value = newGlyphLine.value.slice(0, 3).concat(\n      [x1, y1, x2, y2, x3, y3]\n    );\n    return newGlyphLine;\n  }\n  return newGlyphLine;\n};\n\nconst validStrokeShapeTypes: [number, number, number][] = [\n  [1, 0, 0],\n  [1, 0, 2],\n  [1, 0, 32],\n  [1, 0, 13],\n  [1, 0, 23],\n  [1, 0, 4],\n  [1, 0, 313],\n  [1, 0, 413],\n  [1, 0, 24],\n  [1, 2, 0],\n  [1, 2, 2],\n  [1, 32, 0],\n  [1, 32, 32],\n  [1, 32, 13],\n  [1, 32, 23],\n  [1, 32, 4],\n  [1, 32, 313],\n  [1, 32, 413],\n  [1, 32, 24],\n  [1, 12, 0],\n  [1, 12, 32],\n  [1, 12, 13],\n  [1, 12, 23],\n  [1, 12, 313],\n  [1, 12, 413],\n  [1, 12, 24],\n  [1, 22, 0],\n  [1, 22, 32],\n  [1, 22, 13],\n  [1, 22, 23],\n  [1, 22, 4],\n  [1, 22, 313],\n  [1, 22, 413],\n  [1, 22, 24],\n  [2, 0, 7],\n  [2, 0, 5],\n  [2, 32, 7],\n  [2, 32, 4],\n  [2, 32, 5],\n  [2, 12, 7],\n  [2, 22, 7],\n  [2, 22, 4],\n  [2, 22, 5],\n  [2, 7, 0],\n  [2, 7, 8],\n  [2, 7, 4],\n  [3, 0, 0],\n  [3, 0, 5],\n  [3, 32, 0],\n  [3, 32, 5],\n  [3, 12, 0],\n  [3, 12, 5],\n  [3, 22, 0],\n  [3, 22, 5],\n  [4, 0, 0],\n  [4, 0, 5],\n  [4, 22, 0],\n  [4, 22, 5],\n  [6, 0, 7],\n  [6, 0, 5],\n  [6, 32, 7],\n  [6, 32, 4],\n  [6, 32, 5],\n  [6, 12, 7],\n  [6, 22, 7],\n  [6, 22, 4],\n  [6, 22, 5],\n  [6, 7, 0],\n  [6, 7, 8],\n  [6, 7, 4],\n  [7, 0, 7],\n  [7, 32, 7],\n  [7, 12, 7],\n  [7, 22, 7],\n];\n\nexport const isValidStrokeShapeTypes = memoizeOne((stroke: GlyphLine) => {\n  if (!strokeTypes.includes(stroke.value[0])) {\n    return true;\n  }\n\n  return validStrokeShapeTypes.some(([s0, s1, s2]) => (\n    s0 === stroke.value[0] &&\n    s1 === stroke.value[1] &&\n    s2 === stroke.value[2]\n  ));\n});\n","import { ReducerBuilder } from 'typescript-fsa-reducers';\n\nimport { editorActions } from '../actions/editor';\n\nimport { Glyph, GlyphLine } from '../kageUtils/glyph';\nimport { getGlyphLinesBBX } from '../kageUtils/bbx';\nimport { decompose } from '../kageUtils/decompose';\nimport { calcStretchPositions, setStretchPositions } from '../kageUtils/stretchparam';\nimport { changeStrokeType } from '../kageUtils/stroketype';\nimport { applyGlyphLineOperation, moveSelectedGlyphLines } from '../kageUtils/transform';\n\nimport { AppState } from '.';\n\nconst setGlyphLine = (glyph: Glyph, index: number, glyphLine: GlyphLine): Glyph => {\n  const newGlyph = glyph.slice();\n  newGlyph[index] = glyphLine;\n  return newGlyph;\n};\n\nexport default (builder: ReducerBuilder<AppState>) => builder\n  .case(editorActions.loadedBuhin, (state, [name, data]) => {\n    const newMap = new Map(state.buhinMap);\n    newMap.set(name, data);\n    return {\n      ...state,\n      buhinMap: newMap,\n    };\n  })\n  .case(editorActions.loadedStretchParam, (state, [name, param]) => {\n    const newMap = new Map(state.stretchParamMap);\n    newMap.set(name, param);\n    return {\n      ...state,\n      stretchParamMap: newMap,\n    }\n  })\n\n  .case(editorActions.changeStrokeType, (state, newType) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    const newGLine = changeStrokeType(state.glyph[lineIndex], newType);\n    return {\n      ...state,\n      glyph: setGlyphLine(state.glyph, lineIndex, newGLine),\n    }\n  })\n  .case(editorActions.changeHeadShapeType, (state, newType) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    const newGLine = {\n      ...state.glyph[lineIndex],\n      value: state.glyph[lineIndex].value.slice(),\n    };\n    newGLine.value[1] = newType;\n    return {\n      ...state,\n      glyph: setGlyphLine(state.glyph, lineIndex, newGLine),\n    };\n  })\n  .case(editorActions.changeTailShapeType, (state, newType) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    const newGLine = {\n      ...state.glyph[lineIndex],\n      value: state.glyph[lineIndex].value.slice(),\n    };\n    newGLine.value[2] = newType;\n    return {\n      ...state,\n      glyph: setGlyphLine(state.glyph, lineIndex, newGLine),\n    };\n  })\n  .case(editorActions.changeStretchCoeff, (state, value) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    const selectedLine = state.glyph[lineIndex];\n    if (!selectedLine.partName) {\n      return state;\n    }\n    const stretchParam = state.stretchParamMap.get(selectedLine.partName);\n    if (!stretchParam) {\n      return state;\n    }\n    const newGLine = setStretchPositions(\n      state.glyph[lineIndex],\n      calcStretchPositions(stretchParam, value)\n    );\n    return {\n      ...state,\n      glyph: setGlyphLine(state.glyph, lineIndex, newGLine),\n    };\n  })\n\n  .case(editorActions.swapWithPrev, (state) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    if (lineIndex === 0) {\n      return state;\n    }\n    const newGlyph = state.glyph.slice();\n    newGlyph[lineIndex - 1] = state.glyph[lineIndex];\n    newGlyph[lineIndex] = state.glyph[lineIndex - 1];\n    return {\n      ...state,\n      glyph: newGlyph,\n      selection: [lineIndex - 1],\n    };\n  })\n  .case(editorActions.swapWithNext, (state) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    if (lineIndex === state.glyph.length - 1) {\n      return state;\n    }\n    const newGlyph = state.glyph.slice();\n    newGlyph[lineIndex + 1] = state.glyph[lineIndex];\n    newGlyph[lineIndex] = state.glyph[lineIndex + 1];\n    return {\n      ...state,\n      glyph: newGlyph,\n      selection: [lineIndex + 1],\n    };\n  })\n\n  .case(editorActions.undo, (state) => state) // TODO\n  .case(editorActions.redo, (state) => state) // TODO\n\n  .case(editorActions.paste, (state) => ({\n    ...state,\n    glyph: state.glyph.concat(state.clipboard),\n    selection: state.clipboard.map((_gLine, index) => state.glyph.length + index),\n  }))\n  .case(editorActions.copy, (state) => {\n    const targetLines = state.selection.map((index) => state.glyph[index]);\n    const [x1, y1] = getGlyphLinesBBX(targetLines);\n    const tX = (x: number) => 230 + x - x1;\n    const tY = (y: number) => 20 + y - y1;\n    return {\n      ...state,\n      clipboard: state.selection.map((index) => (\n        applyGlyphLineOperation(state.glyph[index], tX, tY)\n      )),\n    };\n  })\n  .case(editorActions.cut, (state) => ({\n    ...state,\n    glyph: state.glyph.filter((_gLine, index) => !state.selection.includes(index)),\n    clipboard: state.selection.map((index) => state.glyph[index]),\n    selection: [],\n  }))\n  .case(editorActions.delete, (state) => ({\n    ...state,\n    glyph: state.glyph.filter((_gLine, index) => !state.selection.includes(index)),\n    selection: [],\n  }))\n\n  .case(editorActions.decomposeSelected, (state) => {\n    let newGlyph: Glyph = [];\n    let newSelection: number[] = [];\n    state.glyph.forEach((gLine, index) => {\n      if (!state.selection.includes(index)) {\n        newGlyph.push(gLine);\n        return;\n      }\n      const newLines = decompose(gLine, state.buhinMap);\n      newSelection = newSelection.concat(\n        newLines.map((_gLine, subindex) => newGlyph.length + subindex)\n      );\n      newGlyph = newGlyph.concat(newLines);\n    });\n    return {\n      ...state,\n      glyph: newGlyph,\n      selection: newSelection,\n    };\n  })\n  .case(editorActions.moveSelected, (state, [dx, dy]) => ({\n    ...state,\n    glyph: moveSelectedGlyphLines(state.glyph, state.selection, dx, dy),\n  }))\n\n  .case(editorActions.toggleFreehand, (state) => ({\n    ...state,\n    selection: state.freehandMode ? state.selection : [],\n    freehandMode: !state.freehandMode,\n  }))\n\n  .case(editorActions.openOptionModal, (state) => ({\n    ...state,\n    showOptionModal: true,\n  }))\n  .case(editorActions.closeOptionModal, (state) => ({\n    ...state,\n    showOptionModal: false,\n  }));\n","import { reducerWithInitialState } from 'typescript-fsa-reducers';\n\nimport { RectPointPosition, CTMInv } from '../actions/drag';\n\nimport { GlyphLine, Glyph, parseGlyph } from '../kageUtils/glyph';\nimport { StretchParam } from '../kageUtils/stretchparam';\nimport args from '../args';\n\nimport select from './select';\nimport drag from './drag';\nimport editor from './editor';\n\n\nexport interface AppState {\n  glyph: Glyph;\n  selection: number[];\n  areaSelectRect: [number, number, number, number] | null;\n  dragSelection: [number, number, number, number] | null;\n  dragPoint: [number, [number, number, number, number]] | null;\n  resizeSelection: [RectPointPosition, [number, number, number, number]] | null;\n  ctmInv: CTMInv | null;\n  buhinMap: Map<string, string>;\n  stretchParamMap: Map<string, StretchParam>;\n  freehandMode: boolean;\n  showOptionModal: boolean;\n  clipboard: GlyphLine[];\n}\n\nconst initialState: AppState = {\n  glyph: parseGlyph(args.get('data') || ''),\n  selection: [],\n  areaSelectRect: null,\n  dragSelection: null,\n  dragPoint: null,\n  resizeSelection: null,\n  ctmInv: null,\n  buhinMap: new Map<string, string>(),\n  stretchParamMap: new Map<string, StretchParam>(),\n  freehandMode: false,\n  showOptionModal: false,\n  clipboard: [],\n};\n\nconst reducer = reducerWithInitialState(initialState)\n  .withHandling(select)\n  .withHandling(drag)\n  .withHandling(editor);\n\nexport default reducer;\n","import { ReducerBuilder } from 'typescript-fsa-reducers';\n\nimport { selectActions } from '../actions/select';\n\nimport { AppState } from '.';\n\nexport default (builder: ReducerBuilder<AppState>) => builder\n  .case(selectActions.selectSingle, (state, index) => ({\n    ...state,\n    selection: [index],\n  }))\n  .case(selectActions.selectAddSingle, (state, index) => ({\n    ...state,\n    selection: state.selection.includes(index) ? state.selection : state.selection.concat([index]),\n  }))\n  .case(selectActions.selectRemoveSingle, (state, index) => ({\n    ...state,\n    selection: state.selection.filter((index2) => index !== index2),\n  }))\n  .case(selectActions.selectAll, (state) => ({\n    ...state,\n    selection: state.glyph.map((_gLine, index) => index),\n  }))\n  .case(selectActions.selectDeselected, (state) => ({\n    ...state,\n    selection: state.glyph.map((_gLine, index) => index).filter((index) => !state.selection.includes(index)),\n  }))\n  .case(selectActions.selectNone, (state) => ({\n    ...state,\n    selection: [],\n  }))\n  .case(selectActions.selectPrev, (state) => {\n    if (state.glyph.length === 0) {\n      return { ...state, selection: [] };\n    }\n    const firstSelected = state.selection.length === 0 ? 0 : Math.min(...state.selection);\n    return {\n      ...state,\n      selection: [(firstSelected - 1 + state.glyph.length) % state.glyph.length],\n    };\n  })\n  .case(selectActions.selectNext, (state) => {\n    if (state.glyph.length === 0) {\n      return { ...state, selection: [] };\n    }\n    const firstSelected = state.selection.length === 0 ? -1 : Math.max(...state.selection);\n    return {\n      ...state,\n      selection: [(firstSelected + 1 + state.glyph.length) % state.glyph.length],\n    };\n  });\n","import { ReducerBuilder } from 'typescript-fsa-reducers';\n\n// @ts-ignore\nimport { polygonInPolygon, polygonIntersectsPolygon } from 'geometric';\n\nimport { dragActions } from '../actions/drag';\n\nimport { moveSelectedGlyphLines, moveSelectedPoint } from '../kageUtils/transform';\nimport { Glyph } from '../kageUtils/glyph';\nimport { makeGlyphSeparated } from '../kage';\n\nimport { AppState } from '.';\nimport { resizeSelected } from '../selectors/draggedGlyph';\n\nconst performAreaSelect = (glyph: Glyph, buhinMap: Map<string, string>, x1: number, y1: number, x2: number, y2: number): number[] => {\n  const polygonsSep = makeGlyphSeparated(glyph, buhinMap);\n  const result = [];\n\n  const gAreaPolygon: [number, number][] = [\n    [x1, y1],\n    [x1, y2],\n    [x2, y2],\n    [x2, y1],\n    [x1, y1],\n  ];\n\n  for (let index = 0; index < polygonsSep.length; index++) {\n    const polygons = polygonsSep[index];\n    if (polygons.array.some((polygon) => {\n      const gPolygon = polygon.array.map(({ x, y }) => [x, y]);\n      gPolygon.push(gPolygon[0]); // close polygon\n\n      return (\n        polygonInPolygon(gAreaPolygon, gPolygon) ||\n        polygonInPolygon(gPolygon, gAreaPolygon) ||\n        polygonIntersectsPolygon(gAreaPolygon, gPolygon)\n      ) as boolean;\n    })) {\n      result.push(index);\n    }\n  }\n  return result;\n};\n\nexport default (builder: ReducerBuilder<AppState>) => builder\n  .case(dragActions.startAreaSelect, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      areaSelectRect: [x1, y1, x1, y1],\n    };\n  })\n  .case(dragActions.startSelectionDrag, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      dragSelection: [x1, y1, x1, y1],\n    };\n  })\n  .case(dragActions.startPointDrag, (state, [evt, pointIndex]) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      dragPoint: [pointIndex, [x1, y1, x1, y1]],\n    };\n  })\n  .case(dragActions.startResize, (state, [evt, position]) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      resizeSelection: [position, [x1, y1, x1, y1]],\n    };\n  })\n\n  .case(dragActions.mouseMove, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    if (state.areaSelectRect) {\n      const [x1, y1] = state.areaSelectRect;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        areaSelectRect: [x1, y1, x2, y2],\n      };\n    }\n    if (state.dragSelection) {\n      const [x1, y1] = state.dragSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        dragSelection: [x1, y1, x2, y2],\n      };\n    }\n    if (state.dragPoint) {\n      const [pointIndex, [x1, y1]] = state.dragPoint;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        dragPoint: [pointIndex, [x1, y1, x2, y2]],\n      };\n    }\n    if (state.resizeSelection) {\n      const [position, [x1, y1]] = state.resizeSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        resizeSelection: [position, [x1, y1, x2, y2]],\n      };\n    }\n    return state;\n  })\n  .case(dragActions.mouseUp, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    if (state.areaSelectRect) {\n      const [x1, y1] = state.areaSelectRect;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      const intersections = performAreaSelect(state.glyph, state.buhinMap, x1, y1, x2, y2);\n\n      const newSelection = Array.from(new Set(state.selection.concat(intersections)));\n      return {\n        ...state,\n        selection: newSelection,\n        areaSelectRect: null,\n      };\n    }\n    if (state.dragSelection) {\n      const [x1, y1] = state.dragSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n\n      const newGlyph = moveSelectedGlyphLines(state.glyph, state.selection, x2 - x1, y2 - y1);\n      return {\n        ...state,\n        glyph: newGlyph,\n        dragSelection: null,\n      };\n    }\n    if (state.dragPoint) {\n      const [pointIndex, [x1, y1]] = state.dragPoint;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n\n      const newGlyph = moveSelectedPoint(state.glyph, state.selection, pointIndex, x2 - x1, y2 - y1);\n      return {\n        ...state,\n        glyph: newGlyph,\n        dragPoint: null,\n      };\n    }\n    if (state.resizeSelection) {\n      const [position, [x1, y1]] = state.resizeSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n\n      const newGlyph = resizeSelected(state.glyph, state.selection, position, x2 - x1, y2 - y1);\n      return {\n        ...state,\n        glyph: newGlyph,\n        resizeSelection: null,\n      };\n    }\n    return state;\n  })\n\n  .case(dragActions.updateCTMInv, (state, ctmInv) => ({\n    ...state,\n    ctmInv,\n  }));\n","import { createStore } from 'redux';\n\nimport reducer from './reducers';\n\nconst store = createStore(reducer);\n\nexport default store;\n","import React from 'react';\n\nimport { Polygons } from '@kurgm/kage-engine';\n\nexport interface StrokeComponentProps {\n  polygons: Polygons;\n}\n\nconst StrokeComponent = (props: StrokeComponentProps) => (\n  <>\n    {props.polygons.array.map((polygon, i) => (\n      <polygon key={i} points={polygon.array.map(({ x, y }) => `${x},${y} `).join(\"\")} />\n    ))}\n  </>\n);\n\nexport default StrokeComponent;\n","import React from 'react';\n\nimport { Glyph } from '../kageUtils/glyph';\nimport { makeGlyphSeparated } from '../kage';\nimport Stroke from './Stroke';\n\nimport './Glyph.css'\n\nexport interface GlyphComponentProps {\n  glyph: Glyph;\n  buhinMap: Map<string, string>;\n  selection: number[];\n  handleMouseDownDeselectedStroke?: (evt: React.MouseEvent, index: number) => void;\n  handleMouseDownSelectedStroke?: (evt: React.MouseEvent, index: number) => void;\n}\n\nconst GlyphComponent = (props: GlyphComponentProps) => {\n  const polygonsSep = makeGlyphSeparated(props.glyph, props.buhinMap);\n\n  const { selection } = props;\n  const nonSelection = polygonsSep.map((_polygons, index) => index)\n    .filter((index) => !selection.includes(index));\n\n  return (\n    <>\n      <g className=\"strokes-deselected\">\n        {nonSelection.map((index) => (\n          <g key={index} onMouseDown={(evt) => props.handleMouseDownDeselectedStroke?.(evt, index)}>\n            <Stroke polygons={polygonsSep[index]} />\n          </g>\n        ))}\n      </g>\n      <g className=\"strokes-selected\">\n        {selection.map((index) => (\n          <g key={index} onMouseDown={(evt) => props.handleMouseDownSelectedStroke?.(evt, index)}>\n            <Stroke polygons={polygonsSep[index]} />\n          </g>\n        ))}\n      </g>\n    </>\n  );\n};\n\nexport default GlyphComponent;\n","import React from 'react';\n\nimport './AreaSelectRect.css';\n\ninterface AreaSelectRectProps {\n  rect: [number, number, number, number] | null;\n}\n\nconst AreaSelectRect = (props: AreaSelectRectProps) => {\n  if (!props.rect) {\n    return null;\n  }\n  let [x1, y1, x2, y2] = props.rect;\n  if (x1 > x2) {\n    // swap\n    const temp = x1;\n    x1 = x2;\n    x2 = temp;\n  }\n  if (y1 > y2) {\n    // swap\n    const temp = y1;\n    y1 = y2;\n    y2 = temp;\n  }\n\n  return <rect className='areaselect-rect' x={x1} y={y1} width={x2 - x1} height={y2 - y1} />;\n};\n\nexport default AreaSelectRect;\n","import React from 'react';\n\nimport './ControlPoint.css';\n\ninterface ControlPointProps {\n  x: number;\n  y: number;\n  className?: string;\n  handleMouseDown: (evt: React.MouseEvent) => void;\n}\n\nconst ControlPoint = (props: ControlPointProps) => (\n  <rect\n    x={props.x - 4}\n    y={props.y - 4}\n    width={8} height={8}\n    className={`controlpoint-rect ${props.className || ''}`}\n    onMouseDown={props.handleMouseDown}\n  />\n);\n\nexport default ControlPoint;\n","import React, { useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { createSelector } from 'reselect';\n\nimport { dragActions, RectPointPosition } from '../actions/drag';\nimport { AppState } from '../reducers';\nimport { draggedGlyphSelector } from '../selectors/draggedGlyph';\nimport { getGlyphLinesBBX } from '../kageUtils/bbx';\nimport { getMatchType, MatchType } from '../kageUtils/match';\n\nimport ControlPoint from './ControlPoint';\n\nimport './SelectionControl.css';\n\ninterface RectControl {\n  multiSelect: boolean;\n  coords: [number, number, number, number];\n}\ninterface ControlPoint {\n  x: number;\n  y: number;\n  className: string;\n}\n\ninterface SelectionControlSpec {\n  rectControl: RectControl | null;\n  pointControl: ControlPoint[];\n}\n\nconst selectionControlSelector = createSelector(\n  [\n    draggedGlyphSelector,\n    (state: AppState) => state.selection,\n  ],\n  (glyph, selection): SelectionControlSpec => {\n    if (selection.length === 0) {\n      return { rectControl: null, pointControl: [] };\n    }\n    if (selection.length > 1) {\n      const selectedStrokes = selection.map((index) => glyph[index]);\n      const bbx = getGlyphLinesBBX(selectedStrokes);\n      return {\n        rectControl: {\n          multiSelect: true,\n          coords: bbx,\n        },\n        pointControl: [],\n      };\n    }\n    const selectedStroke = glyph[selection[0]];\n    switch (selectedStroke.value[0]) {\n      case 0:\n      case 9:\n      case 99:\n        return {\n          rectControl: {\n            multiSelect: false,\n            coords: [\n              selectedStroke.value[3],\n              selectedStroke.value[4],\n              selectedStroke.value[5],\n              selectedStroke.value[6],\n            ],\n          },\n          pointControl: [],\n        };\n      case 1:\n      case 2:\n      case 3:\n      case 4:\n      case 6:\n      case 7: {\n        const pointControl: ControlPoint[] = [];\n        for (let i = 3; i + 2 <= selectedStroke.value.length; i += 2) {\n          const matchType = getMatchType(glyph, {\n            lineIndex: selection[0],\n            pointIndex: (i - 3) / 2,\n          });\n          let className = '';\n          if (matchType === MatchType.match) {\n              className = 'match';\n          } else if (matchType === MatchType.online) {\n              className = 'online';\n          }\n\n          pointControl.push({\n            x: selectedStroke.value[i],\n            y: selectedStroke.value[i + 1],\n            className,\n          });\n        }\n        return { rectControl: null, pointControl };\n      }\n      default:\n        return { rectControl: null, pointControl: [] };\n    }\n  }\n);\n\nconst SelectionControl = () => {\n  const { rectControl, pointControl } = useSelector(selectionControlSelector);\n\n  const dispatch = useDispatch();\n  const handleMouseDownRectControl = useCallback((evt: React.MouseEvent, position: RectPointPosition) => {\n    dispatch(dragActions.startResize([evt, position]));\n    evt.stopPropagation();\n  }, [dispatch]);\n\n  const handleMouseDownNorthPoint = useCallback(\n    (evt: React.MouseEvent) => handleMouseDownRectControl(evt, RectPointPosition.north),\n    [handleMouseDownRectControl]\n  );\n  const handleMouseDownWestPoint = useCallback(\n    (evt: React.MouseEvent) => handleMouseDownRectControl(evt, RectPointPosition.west),\n    [handleMouseDownRectControl]\n  );\n  const handleMouseDownSouthPoint = useCallback(\n    (evt: React.MouseEvent) => handleMouseDownRectControl(evt, RectPointPosition.south),\n    [handleMouseDownRectControl]\n  );\n  const handleMouseDownEastPoint = useCallback(\n    (evt: React.MouseEvent) => handleMouseDownRectControl(evt, RectPointPosition.east),\n    [handleMouseDownRectControl]\n  );\n  const handleMouseDownSoutheastPoint = useCallback(\n    (evt: React.MouseEvent) => handleMouseDownRectControl(evt, RectPointPosition.southeast),\n    [handleMouseDownRectControl]\n  );\n\n  const handleMouseDownPointControls = useMemo(() => {\n    return pointControl.map((_control, pointIndex) => (evt: React.MouseEvent) => {\n      dispatch(dragActions.startPointDrag([evt, pointIndex]));\n      evt.stopPropagation();\n    });\n  }, [dispatch, pointControl]);\n\n  return <>\n    {rectControl && <>\n      <rect\n        className='selection-rect'\n        x={rectControl.coords[0]}\n        y={rectControl.coords[1]}\n        width={rectControl.coords[2] - rectControl.coords[0]}\n        height={rectControl.coords[3] - rectControl.coords[1]}\n      />\n      <ControlPoint\n        x={(rectControl.coords[0] + rectControl.coords[2]) / 2}\n        y={rectControl.coords[1]}\n        className='north'\n        handleMouseDown={handleMouseDownNorthPoint}\n      />\n      <ControlPoint\n        x={rectControl.coords[0]}\n        y={(rectControl.coords[1] + rectControl.coords[3]) / 2}\n        className='west'\n        handleMouseDown={handleMouseDownWestPoint}\n      />\n      <ControlPoint\n        x={(rectControl.coords[0] + rectControl.coords[2]) / 2}\n        y={rectControl.coords[3]}\n        className='south'\n        handleMouseDown={handleMouseDownSouthPoint}\n      />\n      <ControlPoint\n        x={rectControl.coords[2]}\n        y={(rectControl.coords[1] + rectControl.coords[3]) / 2}\n        className='east'\n        handleMouseDown={handleMouseDownEastPoint}\n      />\n      <ControlPoint\n        x={rectControl.coords[2]}\n        y={rectControl.coords[3]}\n        className='southeast'\n        handleMouseDown={handleMouseDownSoutheastPoint}\n      />\n    </>}\n    {pointControl.map(({ x, y, className }, index) => (\n      <ControlPoint\n        key={index}\n        x={x} y={y}\n        className={className}\n        handleMouseDown={handleMouseDownPointControls[index]}\n      />\n    ))}\n  </>;\n};\n\nexport default SelectionControl;","import React, { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { AppState } from '../reducers';\n\nimport { selectActions } from '../actions/select';\nimport { dragActions, CTMInv } from '../actions/drag';\nimport { draggedGlyphSelector } from '../selectors/draggedGlyph';\nimport Glyph from './Glyph';\nimport AreaSelectRect from './AreaSelectRect';\nimport SelectionControl from './SelectionControl';\n\nimport './GlyphArea.css';\n\nconst GlyphArea = () => {\n  const glyph = useSelector(draggedGlyphSelector);\n  const buhinMap = useSelector((state: AppState) => state.buhinMap);\n  const selection = useSelector((state: AppState) => state.selection);\n  const areaSelectRect = useSelector((state: AppState) => state.areaSelectRect);\n\n  const dispatch = useDispatch();\n  const handleMouseDownCapture = useCallback((evt: React.MouseEvent<SVGSVGElement>) => {\n    const ctm = evt.currentTarget.getScreenCTM();\n    if (!ctm) {\n      return;\n    }\n    const pt = evt.currentTarget.createSVGPoint();\n    const ictm = ctm.inverse();\n    const ctmInv: CTMInv = (evtx, evty) => {\n      pt.x = evtx;\n      pt.y = evty;\n      const { x, y } = pt.matrixTransform(ictm);\n      return [x, y];\n    };\n    dispatch(dragActions.updateCTMInv(ctmInv));\n  }, [dispatch]);\n\n  const handleMouseDownBackground = useCallback((evt: React.MouseEvent) => {\n    if (!(evt.shiftKey || evt.ctrlKey)) {\n      dispatch(selectActions.selectNone());\n    }\n    dispatch(dragActions.startAreaSelect(evt));\n  }, [dispatch]);\n  const handleMouseDownDeselectedStroke = useCallback((evt: React.MouseEvent, index: number) => {\n    if (evt.shiftKey || evt.ctrlKey) {\n      dispatch(selectActions.selectAddSingle(index));\n    } else {\n      dispatch(selectActions.selectSingle(index));\n    }\n    dispatch(dragActions.startSelectionDrag(evt));\n    evt.stopPropagation();\n  }, [dispatch]);\n  const handleMouseDownSelectedStroke = useCallback((evt: React.MouseEvent, index: number) => {\n    if (evt.shiftKey || evt.ctrlKey) {\n      dispatch(selectActions.selectRemoveSingle(index));\n    }\n    dispatch(dragActions.startSelectionDrag(evt));\n    evt.stopPropagation();\n  }, [dispatch]);\n\n  useEffect(() => {\n    const handleMouseMove = (evt: MouseEvent) => {\n      dispatch(dragActions.mouseMove(evt));\n    };\n    const handleMouseUp = (evt: MouseEvent) => {\n      dispatch(dragActions.mouseUp(evt));\n    };\n    document.addEventListener('mousemove', handleMouseMove)\n    document.addEventListener('mouseup', handleMouseUp);\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [dispatch]);\n\n  return (\n    <div className=\"glyph-area\">\n      <svg\n        width=\"100%\" height=\"100%\" viewBox=\"-20 -20 500 240\"\n        onMouseDownCapture={handleMouseDownCapture}\n        onMouseDown={handleMouseDownBackground}\n      >\n        {/* TODO: grid */}\n        <rect x=\"0\" y=\"0\" width=\"200\" height=\"200\" className=\"glyph-boundary\" />\n        <rect x=\"12\" y=\"12\" width=\"176\" height=\"176\" className=\"glyph-guide\" />\n        <Glyph\n          glyph={glyph}\n          buhinMap={buhinMap}\n          selection={selection}\n          handleMouseDownDeselectedStroke={handleMouseDownDeselectedStroke}\n          handleMouseDownSelectedStroke={handleMouseDownSelectedStroke}\n        />\n        <SelectionControl />\n        <AreaSelectRect rect={areaSelectRect} />\n      </svg>\n    </div>\n  );\n};\n\nexport default GlyphArea;\n","import React, { useCallback } from 'react';\n\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { createSelector } from 'reselect';\n\nimport { editorActions } from '../actions/editor';\nimport { selectActions } from '../actions/select';\nimport { AppState } from '../reducers';\nimport { calcStretchScalar, getStretchPositions } from '../kageUtils/stretchparam';\nimport { strokeTypes, headShapeTypes, tailShapeTypes, isValidStrokeShapeTypes } from '../kageUtils/stroketype';\n\nimport { useTranslation } from 'react-i18next';\n\nimport './SelectionInfo.css'\n\n\ninterface StrokeInfo {\n  strokeType: number;\n  headShapeType: number;\n  tailShapeType: number;\n  validTypes: boolean;\n  coordString: string;\n}\nconst strokeInfoSelector = createSelector([\n  (state: AppState) => state.selection,\n  (state: AppState) => state.selection.length ? state.glyph[state.selection[0]] : null,\n], (selection, selectedStroke_): StrokeInfo | null => {\n  if (selection.length !== 1) {\n    return null;\n  }\n  const selectedStroke = selectedStroke_!;\n  if (!strokeTypes.includes(selectedStroke.value[0])) {\n    return null;\n  }\n\n  const points = [];\n  for (let i = 3; i + 2 <= selectedStroke.value.length; i += 2) {\n    points.push(`(${selectedStroke.value[i]},${selectedStroke.value[i + 1]})`);\n  }\n  return {\n    strokeType: selectedStroke.value[0],\n    headShapeType: selectedStroke.value[1],\n    tailShapeType: selectedStroke.value[2],\n    validTypes: isValidStrokeShapeTypes(selectedStroke),\n    coordString: points.join(' → '),\n  };\n});\n\ninterface PartInfo {\n  partName: string;\n  entityName: string | null;\n  coordString: string;\n  stretchCoeff: number | null;\n}\nconst partInfoSelector = createSelector([\n  (state: AppState) => state.selection,\n  (state: AppState) => state.selection.length ? state.glyph[state.selection[0]] : null,\n  (state: AppState) => state.buhinMap,\n  (state: AppState) => state.stretchParamMap,\n], (selection, selectedStroke_, buhinMap, stretchParamMap): PartInfo | null => {\n  if (selection.length !== 1) {\n    return null;\n  }\n  const selectedStroke = selectedStroke_!;\n  if (selectedStroke.value[0] !== 99) {\n    return null;\n  }\n  const partName = selectedStroke.partName!;\n  const buhinSource = buhinMap.get(partName);\n  let entityName: string | null = null;\n  if (buhinSource) {\n    const aliasMatch = /^(?:0:1:0:[^$]+\\$)?99:0:0:0:0:200:200:([^$]+)$/.exec(buhinSource);\n    if (aliasMatch) {\n      entityName = aliasMatch[1];\n    }\n  }\n  const stretchParam = stretchParamMap.get(partName);\n  const stretchCoeff = stretchParam\n    ? calcStretchScalar(stretchParam, getStretchPositions(selectedStroke)!)\n    : null;\n\n  return {\n    partName,\n    entityName,\n    coordString: `(${selectedStroke.value[3]},${selectedStroke.value[4]}) → (${selectedStroke.value[5]},${selectedStroke.value[6]})`,\n    stretchCoeff,\n  };\n});\n\ninterface OtherInfo {\n  isMultiple: boolean;\n  coordString?: string;\n}\nconst otherInfoSelector = createSelector([\n  (state: AppState) => state.selection,\n  (state: AppState) => state.selection.length ? state.glyph[state.selection[0]] : null,\n], (selection, selectedStroke_): OtherInfo | null => {\n  if (selection.length > 1) {\n    return { isMultiple: true };\n  }\n  if (selection.length === 0) {\n    return { isMultiple: false };\n  }\n  const selectedStroke = selectedStroke_!;\n  const strokeType = selectedStroke.value[0];\n  if (strokeTypes.includes(strokeType) || strokeType === 99) {\n    return null;\n  }\n\n  const points = [];\n  for (let i = 3; i + 2 <= selectedStroke.value.length; i += 2) {\n    points.push(`(${selectedStroke.value[i]},${selectedStroke.value[i + 1]})`);\n  }\n  return { isMultiple: false, coordString: points.join(' → ') };\n});\n\nconst selectIndexStringSelector = createSelector([\n  (state: AppState) => state.glyph.length,\n  (state: AppState) => state.selection,\n], (glyphLength, selection) => {\n  const selectedIndexString = selection\n    .map((index) => index + 1)\n    .sort((a, b) => a - b).join(',');\n  return `${selectedIndexString || '-'} / ${glyphLength || '-'}`;\n});\n\nconst buttonsDisabledSelector = createSelector([\n  (state: AppState) => state.glyph.length,\n  (state: AppState) => state.selection,\n], (glyphLength, selection) => ({\n  swapPrevDisabled: selection.length !== 1 || selection[0] === 0,\n  swapNextDisabled: selection.length !== 1 || selection[0] === glyphLength - 1,\n  selectPrevDisabled: glyphLength === 0,\n  selectNextDisabled: glyphLength === 0,\n}));\n\nconst SelectionInfo = () => {\n\n  const strokeInfo = useSelector(strokeInfoSelector);\n  const partInfo = useSelector(partInfoSelector);\n  const otherInfo = useSelector(otherInfoSelector);\n\n  const selectIndexString = useSelector(selectIndexStringSelector);\n\n  const {\n    swapPrevDisabled, swapNextDisabled,\n    selectPrevDisabled, selectNextDisabled,\n  } = useSelector(buttonsDisabledSelector, shallowEqual);\n\n  const dispatch = useDispatch();\n  const changeStrokeType = useCallback((evt: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(editorActions.changeStrokeType(+evt.currentTarget.value));\n  }, [dispatch]);\n  const changeHeadShapeType = useCallback((evt: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(editorActions.changeHeadShapeType(+evt.currentTarget.value));\n  }, [dispatch]);\n  const changeTailShapeType = useCallback((evt: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(editorActions.changeTailShapeType(+evt.currentTarget.value));\n  }, [dispatch]);\n  const changeStretchCoeff = useCallback((evt: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(editorActions.changeStretchCoeff(+evt.currentTarget.value));\n  }, [dispatch]);\n  const selectPrev = useCallback(() => {\n    dispatch(selectActions.selectPrev());\n  }, [dispatch]);\n  const selectNext = useCallback(() => {\n    dispatch(selectActions.selectNext());\n  }, [dispatch]);\n  const swapWithPrev = useCallback(() => {\n    dispatch(editorActions.swapWithPrev());\n  }, [dispatch]);\n  const swapWithNext = useCallback(() => {\n    dispatch(editorActions.swapWithNext());\n  }, [dispatch]);\n\n  const { t } = useTranslation();\n  return (\n    <div className=\"select-control\">\n      <div className=\"selected-info\">\n        {strokeInfo && <>\n          <div>\n            {t('stroke type')}\n            <select value={strokeInfo.strokeType} onChange={changeStrokeType}>\n              {strokeTypes.map((strokeType) => (\n                <option key={strokeType} value={strokeType}>\n                  {t(`stroke type ${strokeType}`)}\n                </option>\n              ))}\n            </select>\n            {' '}\n            {t('head type')}\n            <select value={strokeInfo.headShapeType} onChange={changeHeadShapeType}>\n              {headShapeTypes[strokeInfo.strokeType].map((headShapeType) => (\n                <option key={headShapeType} value={headShapeType}>\n                  {t(`head type ${strokeInfo.strokeType}-${headShapeType}`)}\n                </option>\n              ))}\n            </select>\n            {' '}\n            {t('tail type')}\n            <select value={strokeInfo.tailShapeType} onChange={changeTailShapeType}>\n              {tailShapeTypes[strokeInfo.strokeType].map((tailShapeType) => (\n                <option key={tailShapeType} value={tailShapeType}>\n                  {t(`tail type ${strokeInfo.strokeType}-${tailShapeType}`)}\n                </option>\n              ))}\n            </select>\n            {' '}\n            {!strokeInfo.validTypes && (\n              <span className=\"alert\">\n                {t('invalid stroke shape types')}\n              </span>\n            )}\n          </div>\n          <div>{strokeInfo.coordString}</div>\n        </>}\n        {partInfo && <>\n          <div>\n            {t('part')}\n            {' '}\n            <strong>{partInfo.partName}</strong>\n            {' '}\n            {partInfo.entityName && t('alias of', { entity: partInfo.entityName })}\n          </div>\n          <div>{partInfo.coordString}</div>\n          {partInfo.stretchCoeff !== null && (\n            <div>\n              {t('stretch')}\n              {' '}\n              <input\n                type=\"range\" min={-10} max={10}\n                value={partInfo.stretchCoeff}\n                onChange={changeStretchCoeff}\n              />\n              {' '}\n              {partInfo.stretchCoeff}\n            </div>\n          )}\n        </>}\n        {otherInfo && <>\n          {otherInfo.isMultiple && <div>{t('selecting multiple strokes')}</div>}\n          {otherInfo.coordString && <div>{otherInfo.coordString}</div>}\n        </>}\n      </div>\n      <div className=\"selection-control\">\n        <button\n          disabled={swapPrevDisabled}\n          onClick={swapWithPrev}\n        >\n          {t('swap with prev')}\n        </button>\n        <button\n          className=\"select-prevnext-button\"\n          disabled={selectPrevDisabled}\n          onClick={selectPrev}\n        >\n          {t('select prev')}\n        </button>\n        <div className=\"selection-num\">\n          {selectIndexString}\n        </div>\n        <button\n          className=\"select-prevnext-button\"\n          disabled={selectNextDisabled}\n          onClick={selectNext}\n        >\n          {t('select next')}\n        </button>\n        <button\n          disabled={swapNextDisabled}\n          onClick={swapWithNext}\n        >\n          {t('swap with next')}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default SelectionInfo;\n","import React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { useTranslation } from 'react-i18next';\n\nimport { AppState } from '../reducers';\nimport { editorActions } from '../actions/editor';\nimport { selectActions } from '../actions/select';\n\nimport SelectionInfo from './SelectionInfo';\n\nimport './EditorControls.css';\n\nconst EditorControls = () => {\n  const glyph = useSelector((state: AppState) => state.glyph);\n  const selection = useSelector((state: AppState) => state.selection);\n  const clipboard = useSelector((state: AppState) => state.clipboard);\n  const freehandMode = useSelector((state: AppState) => state.freehandMode);\n\n  const undoDisabled = true;\n  const redoDisabled = true;\n  const pasteDisabled = clipboard.length === 0;\n  const decomposeDisabled = !selection.some((index) => glyph[index].value[0] === 99);\n\n  const dispatch = useDispatch();\n  const undo = useCallback(() => {\n    dispatch(editorActions.undo());\n  }, [dispatch]);\n  const redo = useCallback(() => {\n    dispatch(editorActions.redo());\n  }, [dispatch]);\n  const selectAll = useCallback(() => {\n    dispatch(selectActions.selectAll());\n  }, [dispatch]);\n  const selectDeselected = useCallback(() => {\n    dispatch(selectActions.selectDeselected());\n  }, [dispatch]);\n  const copy = useCallback(() => {\n    dispatch(editorActions.copy());\n  }, [dispatch]);\n  const paste = useCallback(() => {\n    dispatch(editorActions.paste());\n  }, [dispatch]);\n  const cut = useCallback(() => {\n    dispatch(editorActions.cut());\n  }, [dispatch]);\n  const toggleFreehand = useCallback(() => {\n    dispatch(editorActions.toggleFreehand());\n  }, [dispatch]);\n  const decompose = useCallback(() => {\n    dispatch(editorActions.decomposeSelected());\n  }, [dispatch]);\n  const options = useCallback(() => {\n    dispatch(editorActions.openOptionModal());\n  }, [dispatch]);\n  const finishEdit = useCallback(() => {\n    // FIXME\n    // location.href = ...\n  }, []);\n\n  const { t } = useTranslation();\n  return (\n    <div className=\"editor-controls\">\n      <SelectionInfo />\n      <div className=\"control-buttons\">\n        <button\n          disabled={undoDisabled}\n          onClick={undo}\n        >\n          {t('undo')}\n        </button>\n        <button\n          disabled={redoDisabled}\n          onClick={redo}\n        >\n          {t('redo')}\n        </button>\n        <button\n          disabled={freehandMode || glyph.length === 0}\n          onClick={selectAll}\n        >\n          {t('select all')}\n        </button>\n        <button\n          disabled={freehandMode || glyph.length === 0}\n          onClick={selectDeselected}\n        >\n          {t('invert selection')}\n        </button>\n        <button\n          disabled={selection.length === 0}\n          onClick={copy}\n        >\n          {t('copy')}\n        </button>\n        <button\n          disabled={pasteDisabled}\n          onClick={paste}\n        >\n          {t('paste')}\n        </button>\n        <button\n          disabled={selection.length === 0}\n          onClick={cut}\n        >\n          {t('cut')}\n        </button>\n        <button\n          disabled\n          onClick={toggleFreehand}\n        >\n          {freehandMode ? t('end freehand') : t('start freehand')}\n        </button>\n        <button\n          disabled={decomposeDisabled}\n          onClick={decompose}\n        >\n          {t('decompose')}\n        </button>\n        <button\n          disabled\n          onClick={options}\n        >\n          {t('options')}\n        </button>\n      </div>\n      <div className=\"preview\">\n        <svg className=\"preview-thumbnail\" viewBox=\"0 0 200 200\" width=\"50\" height=\"50\"></svg>\n        <button\n          disabled\n          onClick={finishEdit}\n        >\n          {t('finish edit')}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default EditorControls;\n","import React from 'react';\nimport './App.css';\n\nimport GlyphArea from './components/GlyphArea';\nimport EditorControls from './components/EditorControls';\nimport { useShortcuts } from './shortcuts';\n\nfunction App() {\n  useShortcuts();\n  return (\n    <div className=\"App\">\n      <GlyphArea />\n      <EditorControls />\n      <div className=\"parts-list-area\" />\n    </div>\n  );\n}\n\nexport default App;\n","import { useDispatch } from 'react-redux';\nimport { useHotkeys }from 'react-hotkeys-hook';\n\nimport { selectActions } from './actions/select';\nimport { editorActions } from './actions/editor';\n\nexport const useShortcuts = () => {\n  const dispatch = useDispatch();\n  useHotkeys('ctrl+a, command+a', (evt) => {\n    dispatch(selectActions.selectAll());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+i, command+i', (evt) => {\n    dispatch(selectActions.selectDeselected());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n\n  useHotkeys('ctrl+z, command+z', (evt) => {\n    dispatch(editorActions.undo());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+y, command+y, ctrl+shift+z, command+shift+z', (evt) => {\n    dispatch(editorActions.redo());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+x, command+x', (evt) => {\n    dispatch(editorActions.cut());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+c, command+c', (evt) => {\n    dispatch(editorActions.copy());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+v, command+v', (evt) => {\n    dispatch(editorActions.paste());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('del', (evt) => {\n    dispatch(editorActions.delete());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n\n  useHotkeys('del', (evt) => {\n    dispatch(editorActions.delete());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n\n  useHotkeys('ctrl+h, left', (evt) => {\n    dispatch(editorActions.moveSelected([-1, 0]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+j, down', (evt) => {\n    dispatch(editorActions.moveSelected([0, 1]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+k, up', (evt) => {\n    dispatch(editorActions.moveSelected([0, -1]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+l, right', (evt) => {\n    dispatch(editorActions.moveSelected([1, 0]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+shift+h, shift+left', (evt) => {\n    dispatch(editorActions.moveSelected([-5, 0]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+shift+j, shift+down', (evt) => {\n    dispatch(editorActions.moveSelected([0, 5]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+shift+k, shift+up', (evt) => {\n    dispatch(editorActions.moveSelected([0, -5]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+shift+l, shift+right', (evt) => {\n    dispatch(editorActions.moveSelected([5, 0]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport jaTranslation from './locales/ja.json';\n\nimport args from \"./args\";\n\nconst resources = {\n  ja: {\n    translation: jaTranslation,\n  },\n};\n\nconst host = args.get('host');\nlet lng = 'ja';\nif (host) {\n  switch (host.split('.')[0]) {\n    case 'en':\n      lng = 'en';\n      break;\n    case 'ko':\n      lng = 'ko';\n      break;\n    case 'zhs':\n      lng = 'zh-Hans';\n      break;\n    case 'zht':\n      lng = 'zh-Hant';\n      break;\n  }\n}\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng,\n\n    returnObjects: true,\n    interpolation: {\n      escapeValue: false, // react already safes from xss\n    },\n  });\n\nexport default i18n;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\n\nimport store from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './i18n';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}