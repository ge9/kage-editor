{"version":3,"sources":["actions/drag.ts","kageUtils/glyph.ts","args.ts","actions/select.ts","kageUtils/match.ts","kageUtils/connection.ts","kageUtils/transform.ts","actions/editor.ts","callapi.ts","kage.ts","actions/undo.ts","reducers/undo.ts","kageUtils/bbx.ts","kageUtils/freehand.ts","selectors/draggedGlyph.ts","kageUtils/stretchparam.ts","kageUtils/stroketype.ts","reducers/editor.ts","reducers/index.ts","reducers/select.ts","reducers/drag.ts","kageUtils/decompose.ts","store.ts","components/Stroke.tsx","components/Glyph.tsx","components/AreaSelectRect.tsx","components/ControlPoint.tsx","components/SelectionControl.tsx","components/GlyphArea.tsx","components/SelectionInfo.tsx","selectors/submitGlyph.ts","components/SubmitPreview.tsx","components/EditorControls.tsx","components/PartsList.tsx","components/PartsSearch.tsx","components/SubmitForm.tsx","App.tsx","shortcuts.ts","serviceWorker.ts","i18n.ts","index.tsx"],"names":["RectPointPosition","getNumColumns","strokeType","unparseGlyphLine","glyphLine","values","value","slice","partName","join","parseGlyph","glyphStr","split","map","line","glyphLineStr","splitLine","numColumns","i","push","Math","floor","parseGlyphLine","filter","gLine","length","unparseGlyph","glyph","args","URLSearchParams","window","location","hash","actionCreator","actionCreatorFactory","selectActions","selectSingle","selectAddSingle","selectRemoveSingle","selectNone","selectAll","selectDeselected","selectPrev","selectNext","MatchType","dragActions","startBackgroundDrag","startSelectionDrag","startPointDrag","startResize","mouseMove","mouseUp","updateCTMInv","connectablePairs","position","strokeTypes","shapeTypes","matchConnectablePoint","point","includes","shapeType","getConnectablePoints","result","coord","pointIndex","endPointIndex","listupConnectedPoints","memoizeOne","points","sPoints","lineIndex","sPoint","forEach","dPoint","some","point2","point1","filter1","filter2","glyph1","points1","glyph2","points2","every","index","listupConnectedPointsOfSelection","selection","selectedDescs","applyGlyphLineOperation","tX","tY","applyGlyphPointOperation","pdescs","newGlyph","newValue","moveSelectedGlyphLines","dx","dy","targetDescs","x","round","y","moveSelectedPoint","selectedDesc","targetDesc","resizeSelectedGlyphLines","oldBBX","newBBX","x11","y11","x12","y12","x21","y21","x22","y22","resizeGlyphLine","editorActions","loadedBuhin","loadedStretchParam","changeStrokeType","changeHeadShapeType","changeTailShapeType","changeStretchCoeff","swapWithPrev","swapWithNext","insertPart","paste","copy","cut","delete","decomposeSelected","moveSelected","toggleFreehand","openOptionModal","closeOptionModal","finishEdit","callApi","path","a","fetch","response","ok","Error","text","getSource","name","encodeURIComponent","get","search","query","kage","Kage","waiting","Set","filteredGlyphIsEqual","gLine1","makeGlyphSeparated_","data","kBuhin","has","add","then","source","stretchMatch","exec","params","store","dispatch","catch","err","console","error","loadAbsentBuhin","makeGlyphSeparated","map1","makeGlyphSeparatedFactory","isEqual","makeGlyphSeparatedForSubmit","undoActions","undo","redo","pushUndo","oldState","newState","glyphLine1","glyphLine2","value1","undoStacks","concat","bbxOfPoints","xs","ys","min","max","getGlyphLineBBX","mergeBBX","getGlyphLinesBBX","glyphLines","reduce","gLines1","gLines2","avg","nums","b","sum","lerp","x1","x2","k","norm2","drawFreehand","startX","startY","endX","endY","lastStroke","newLastStroke","centroidX","centroidY","midX","midY","dis","sqrt","abs","startType","endType","correctStroke","newStroke","snapStrokeStart","snapStrokeTilt","snapStrokeEnd","snapToNewStroke","setGlyphValue","column","newGLine","snapVerticalStroke","vertStroke","leftType","middleType","rightType","ti","xi","yi","nx","ny","minX","maxX","minY","maxY","horiStroke","y1","y2","snapHorizontalStroke","sx1","sy1","sx2","sy2","resizeSelected","selectedGlyphLine","north","west","south","east","southeast","newGlyphLine","draggedGlyphSelector","createSelector","state","dragSelection","dragPoint","resizeSelection","freehandStroke","getStretchPositions","setStretchPositions","positions","sx","sy","tx","ty","normalizeStretchPositions","calcStretchScalar","param","x0","y0","headShapeTypes","1","2","3","4","6","7","tailShapeTypes","validStrokeShapeTypes","isValidStrokeShapeTypes","stroke","s0","s1","s2","setGlyphLine","initialState","areaSelectRect","ctmInv","buhinMap","Map","stretchParamMap","freehandMode","showOptionModal","clipboard","exiting","reducer","reducerWithInitialState","withHandling","builder","case","index2","_gLine","firstSelected","evt","clientX","clientY","lastX","lastY","splice","intersections","polygonsSep","gAreaPolygon","array","polygon","gPolygon","polygonInPolygon","polygonIntersectsPolygon","performAreaSelect","newSelection","Array","from","newMap","set","newType","oldType","oldNumPoints","newNumPoints","x3","y3","x4","y4","xm","ym","xm1","ym1","xm2","ym2","selectedLine","stretchParam","calcStretchPositions","targetLines","newLines","buhinSource","failedBuhin","strokesArray","getEachStrokes","box","getBox","isStretchEnabled","oldGlyphLine","stretchedX","stretch","stretchedY","tx2","ty2","px1","py1","px2","py2","revX","revY","decompose","subindex","createStore","StrokeComponent","props","polygons","key","GlyphComponent","nonSelection","_polygons","className","onMouseDown","handleMouseDownDeselectedStroke","Stroke","handleMouseDownSelectedStroke","AreaSelectRect","rect","temp","width","height","getMatchType","none","isOnline","match","online","ControlPoint","handleMouseDown","selectionControlSelector","rectControl","pointControl","selectedStrokes","multiSelect","coords","selectedStroke","matchType","SelectionControl","useSelector","useDispatch","handleMouseDownRectControl","useCallback","stopPropagation","handleMouseDownNorthPoint","handleMouseDownWestPoint","handleMouseDownSouthPoint","handleMouseDownEastPoint","handleMouseDownSoutheastPoint","handleMouseDownPointControls","useMemo","_control","GlyphArea","svgClassName","handleMouseDownCapture","ctm","currentTarget","getScreenCTM","pt","createSVGPoint","ictm","inverse","evtx","evty","matrixTransform","handleMouseDownBackground","shiftKey","ctrlKey","useEffect","handleMouseMove","handleMouseUp","document","addEventListener","removeEventListener","viewBox","onMouseDownCapture","selectedGlyphLineSelector","draggedGlyph","strokeInfoSelector","headShapeType","tailShapeType","validTypes","coordString","partInfoSelector","entityName","aliasMatch","stretchCoeff","otherInfoSelector","selectedStroke_","isMultiple","selectIndexStringSelector","glyphLength","selectedIndexString","sort","buttonsDisabledSelector","swapPrevDisabled","swapNextDisabled","selectPrevDisabled","selectNextDisabled","SelectionInfo","strokeInfo","partInfo","otherInfo","selectIndexString","shallowEqual","t","useTranslation","onChange","entity","type","disabled","onClick","submitGlyphSelector","SubmitPreview","submitGlyph","EditorControls","undoDisabled","redoDisabled","pasteDisabled","decomposeDisabled","options","getImageURL","PartsList","handleItemClick","handleItemMouseEnter","handleImageClick","dataset","handleImageMouseEnter","names","alt","title","data-name","src","onMouseEnter","searchSuggestions","initialQuery","QueryTooShortError","PartsSearch","queryInputRef","useRef","useState","searching","setSearching","setNames","setErr","startSearch","reason","handleSearch","current","handleFormSubmit","preventDefault","hoverNameRef","textContent","onSubmit","defaultValue","list","ref","id","suggestion","message","host","ssl","glyphName","related","edittime","summary","formAction","SubmitForm","formRef","useLayoutEffect","submit","style","visibility","action","method","App","useHotkeys","useShortcuts","Boolean","hostname","resources","ja","translation","lng","i18n","use","initReactI18next","init","returnObjects","interpolation","escapeValue","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1849c241.chunk.js","sourcesContent":["import actionCreatorFactory from 'typescript-fsa';\n\nexport type CTMInv = (x: number, y: number) => [number, number];\nexport enum RectPointPosition {\n  north,\n  south,\n  east,\n  west,\n  southeast,\n}\n\nconst actionCreator = actionCreatorFactory('EDITOR');\n\nexport const dragActions = {\n  startBackgroundDrag: actionCreator<React.MouseEvent>('BACKGROUND_DRAG_START'),\n  startSelectionDrag: actionCreator<React.MouseEvent>('SELECTION_DRAG_START'),\n  startPointDrag: actionCreator<[React.MouseEvent, number]>('MOVE_POINT_START'),\n  startResize: actionCreator<[React.MouseEvent, RectPointPosition]>('RESIZE_START'),\n\n  mouseMove: actionCreator<MouseEvent>('MOUSE_MOVE'),\n  mouseUp: actionCreator<MouseEvent>('MOUSE_UP'),\n\n  updateCTMInv: actionCreator<CTMInv>('UPDATE_CTMINV'),\n}\n","export interface GlyphLine {\n  value: number[];\n  partName?: string;\n}\n\nexport const getNumColumns = (strokeType: number): number => {\n  switch (strokeType) {\n    case 0:\n    case 1:\n    case 9:\n      return 7;\n    case 2:\n    case 3:\n    case 4:\n      return 9;\n    case 6:\n    case 7:\n    case 99:\n      return 11;\n    default:\n      return 0;\n  }\n};\n\nexport const parseGlyphLine = (glyphLineStr: string): GlyphLine => {\n  const splitLine = glyphLineStr.split(':');\n  const strokeType = +splitLine[0];\n  const numColumns = getNumColumns(strokeType);\n  const value = [];\n  for (let i = 0; i < numColumns; i++) {\n    value.push(Math.floor(+splitLine[i] || 0));\n  }\n  if (value[0] === 99) {\n    const partName = splitLine[7] || '';\n    return { value, partName }\n  }\n  return { value };\n};\n\nexport const unparseGlyphLine = (glyphLine: GlyphLine): string => {\n  const values: (number | string)[] = glyphLine.value.slice();\n  if (values[0] === 99) {\n    values[7] = glyphLine.partName || '';\n  }\n  return values.join(':');\n};\n\nexport const isValidGlyphLine = (glyphLine: GlyphLine): boolean => (\n  glyphLine.value.length !== 0 &&\n  (\n    glyphLine.value[0] !== 0 ||\n    glyphLine.value[1] === 97 || glyphLine.value[1] === 98 || glyphLine.value[1] === 99\n  )\n);\n\n\nexport type Glyph = GlyphLine[];\n\nexport const parseGlyph = (glyphStr: string): Glyph => (\n  glyphStr.split(/[$\\r\\n]+/)\n    .map((line) => parseGlyphLine(line))\n    .filter((gLine) => isValidGlyphLine(gLine))\n);\n\nexport const unparseGlyph = (glyph: Glyph): string => (\n  glyph\n    .map((gLine) => unparseGlyphLine(gLine))\n    .join('$')\n);\n\nexport const isGlyphDeepEqual = (glyph1: Glyph, glyph2: Glyph) => (\n  glyph1 === glyph2 || (\n    glyph1.length === glyph2.length &&\n    glyph1.every((glyphLine1, index) => {\n      const glyphLine2 = glyph2[index];\n      return glyphLine1 === glyphLine2 || (\n        glyphLine1.partName === glyphLine2.partName &&\n        glyphLine1.value.length === glyphLine2.value.length &&\n        glyphLine1.value.every((value1, index) => value1 === glyphLine2.value[index])\n      );\n    })\n  )\n);\n\n\nexport interface PointDescriptor {\n  lineIndex: number;\n  pointIndex: number;\n}\n","const args = new URLSearchParams(window.location.hash.slice(1));\n\nexport default args;\n","import actionCreatorFactory from 'typescript-fsa';\n\nconst actionCreator = actionCreatorFactory('SELECT');\n\nexport const selectActions = {\n  selectSingle: actionCreator<number>('SELECT_SINGLE'),\n  selectAddSingle: actionCreator<number>('SELECT_ADD_SINGLE'),\n  selectRemoveSingle: actionCreator<number>('SELECT_REMOVE_SINGLE'),\n  selectNone: actionCreator('SELECT_NONE'),\n  selectAll: actionCreator('SELECT_ALL'),\n  selectDeselected: actionCreator('SELECT_TOGGLE_ALL'),\n  selectPrev: actionCreator('SELECT_PREV'),\n  selectNext: actionCreator('SELECT_NEXT'),\n};\n","import { Glyph, PointDescriptor, getNumColumns } from './glyph';\n\nexport enum MatchType {\n  none,\n  online,\n  match,\n}\n\nexport const getMatchType = (glyph: Glyph, point: PointDescriptor): MatchType => {\n  const glyphLine = glyph[point.lineIndex];\n\n  const endPointIndex = (getNumColumns(glyphLine.value[0]) - 3) / 2 - 1;\n  if (point.pointIndex !== 0 && point.pointIndex !== endPointIndex) {\n    return MatchType.none;\n  }\n\n  const x = glyphLine.value[3 + point.pointIndex * 2];\n  const y = glyphLine.value[3 + point.pointIndex * 2 + 1];\n  const isOnline = (x1: number, y1: number, x2: number, y2: number): boolean => (\n    (\n      x1 === x2 && // 垂直\n      x1 === x && y1 <= y && y <= y2\n    ) || (\n      y1 === y2 && // 水平\n      y1 === y && x1 <= x && x <= x2\n    )\n  );\n\n  let result = MatchType.none;\n  for (let lineIndex = 0; lineIndex < glyph.length; lineIndex++) {\n    if (point.lineIndex === lineIndex) {\n      continue;\n    }\n    const glyphLine = glyph[lineIndex];\n    if ([0, 9, 99].includes(glyphLine.value[0])) {\n      continue;\n    }\n\n    if (glyphLine.value[3] === x && glyphLine.value[4] === y) {\n      return MatchType.match;\n    }\n    const endPointIndex = (getNumColumns(glyphLine.value[0]) - 3) / 2 - 1;\n    if (\n      glyphLine.value[3 + endPointIndex * 2] === x &&\n      glyphLine.value[3 + endPointIndex * 2 + 1] === y\n    ) {\n      return MatchType.match;\n    }\n\n    switch (glyphLine.value[0]) {\n      case 3:\n      case 4:\n        if (\n          isOnline(glyphLine.value[3], glyphLine.value[4], glyphLine.value[5], glyphLine.value[6]) ||\n          isOnline(glyphLine.value[5], glyphLine.value[6], glyphLine.value[7], glyphLine.value[8])\n        ) {\n          result = MatchType.online;\n        }\n        break;\n      case 1:\n      case 7:\n        if (isOnline(glyphLine.value[3], glyphLine.value[4], glyphLine.value[5], glyphLine.value[6])) {\n          result = MatchType.online;\n        }\n        break;\n    }\n  }\n  return result;\n};\n","import memoizeOne from 'memoize-one';\n\nimport { GlyphLine, Glyph, PointDescriptor, getNumColumns } from './glyph';\n\ninterface ConnectablePoint {\n  position: 'start' | 'end';\n  strokeType: number;\n  shapeType: number;\n  coord: [number, number];\n  pointIndex: number;\n}\n\ninterface ConnectablePointFilter {\n  position: 'start' | 'end';\n  strokeTypes: number[];\n  shapeTypes: number[];\n}\n\nconst connectablePairs: [ConnectablePointFilter, ConnectablePointFilter][] = [\n  [\n    // 左上\n    {\n      position: 'start',\n      strokeTypes: [1],\n      shapeTypes: [2],\n    },\n    {\n      position: 'start',\n      strokeTypes: [1, 2, 3, 4, 6, 7],\n      shapeTypes: [12],\n    },\n  ],\n  [\n    // 左下\n    {\n      position: 'start',\n      strokeTypes: [1],\n      shapeTypes: [2],\n    },\n    {\n      position: 'end',\n      strokeTypes: [1],\n      shapeTypes: [13, 313, 413],\n    },\n  ],\n  [\n    // 右上\n    {\n      position: 'end',\n      strokeTypes: [1],\n      shapeTypes: [2],\n    },\n    {\n      position: 'start',\n      strokeTypes: [1, 2, 3, 4, 6, 7],\n      shapeTypes: [22],\n    },\n  ],\n  [\n    // 右下\n    {\n      position: 'end',\n      strokeTypes: [1],\n      shapeTypes: [2],\n    },\n    {\n      position: 'end',\n      strokeTypes: [1],\n      shapeTypes: [23, 24],\n    },\n  ],\n];\n\nconst matchConnectablePoint = (filter: ConnectablePointFilter, point: ConnectablePoint) => (\n  filter.position === point.position &&\n  filter.strokeTypes.includes(point.strokeType) &&\n  filter.shapeTypes.includes(point.shapeType)\n)\n\nconst isConnectable = (point1: ConnectablePoint, point2: ConnectablePoint) => (\n  point1.coord[0] === point2.coord[0] &&\n  point1.coord[1] === point2.coord[1] &&\n  connectablePairs.some(([filter1, filter2]) => (\n    (matchConnectablePoint(filter1, point1) && matchConnectablePoint(filter2, point2)) ||\n    (matchConnectablePoint(filter2, point1) && matchConnectablePoint(filter1, point2))\n  ))\n);\n\nconst getConnectablePoints = (glyphLine: GlyphLine): ConnectablePoint[] => {\n  const result: ConnectablePoint[] = [];\n  switch (glyphLine.value[0]) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 6:\n    case 7: {\n      result.push({\n        position: 'start',\n        strokeType: glyphLine.value[0],\n        shapeType: glyphLine.value[1],\n        coord: [\n          glyphLine.value[3],\n          glyphLine.value[4],\n        ],\n        pointIndex: 0,\n      });\n      const endPointIndex = (getNumColumns(glyphLine.value[0]) - 3) / 2 - 1;\n      result.push({\n        position: 'end',\n        strokeType: glyphLine.value[0],\n        shapeType: glyphLine.value[2],\n        coord: [\n          glyphLine.value[3 + endPointIndex * 2],\n          glyphLine.value[3 + endPointIndex * 2 + 1],\n        ],\n        pointIndex: endPointIndex,\n      });\n      break;\n    }\n  }\n  return result;\n};\n\nexport const listupConnectedPoints = memoizeOne((glyph: Glyph, points: PointDescriptor[]): PointDescriptor[] => {\n  const sPoints: ConnectablePoint[] = [];\n  for (const { lineIndex, pointIndex } of points) {\n    for (const sPoint of getConnectablePoints(glyph[lineIndex])) {\n      if (sPoint.pointIndex === pointIndex) {\n        sPoints.push(sPoint);\n      }\n    }\n  }\n  const result: PointDescriptor[] = [];\n  glyph.forEach((glyphLine, lineIndex) => {\n    for (const dPoint of getConnectablePoints(glyphLine)) {\n      if (sPoints.some((sPoint) => isConnectable(sPoint, dPoint))) {\n        result.push({\n          lineIndex,\n          pointIndex: dPoint.pointIndex,\n        });\n      }\n    }\n  });\n  return result;\n}, ([glyph1, points1], [glyph2, points2]) => (\n  glyph1 === glyph2 &&\n  points1.length === points2.length &&\n  points1.every((point1, index) => (\n    point1.lineIndex === points2[index].lineIndex &&\n    point1.pointIndex === points2[index].pointIndex\n  ))\n));\n\nexport const listupConnectedPointsOfSelection = memoizeOne((glyph: Glyph, selection: number[]): PointDescriptor[] => {\n  const selectedDescs: PointDescriptor[] = [];\n  for (const lineIndex of selection) {\n    const glyphLine = glyph[lineIndex];\n    selectedDescs.push({ lineIndex, pointIndex: 0 });\n    selectedDescs.push({ lineIndex, pointIndex: (getNumColumns(glyphLine.value[0]) - 3) / 2 - 1 });\n  }\n  return listupConnectedPoints(glyph, selectedDescs)\n    .filter(({ lineIndex }) => !selection.includes(lineIndex));\n});\n","import { GlyphLine, Glyph, PointDescriptor } from './glyph';\n\nimport { BBX } from './bbx';\nimport { listupConnectedPoints, listupConnectedPointsOfSelection } from './connection';\n\nexport const applyGlyphLineOperation = (glyphLine: GlyphLine, tX: (x: number) => number, tY: (y: number) => number): GlyphLine => {\n  switch (glyphLine.value[0]) {\n    case 99: {\n      const value = glyphLine.value.slice();\n      value[3] = tX(value[3]);\n      value[4] = tY(value[4]);\n      value[5] = tX(value[5]);\n      value[6] = tY(value[6]);\n      return { value, partName: glyphLine.partName };\n    }\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 6:\n    case 7:\n    case 9: {\n      const value = glyphLine.value.slice();\n      for (let i = 3; i + 2 <= value.length; i += 2) {\n        value[i] = tX(value[i]);\n        value[i + 1] = tY(value[i + 1]);\n      }\n      return { value };\n    }\n    default:\n      return glyphLine;\n  }\n}\n\nexport const applyGlyphPointOperation = (glyph: Glyph, pdescs: PointDescriptor[], tX: (x: number) => number, tY: (y: number) => number): Glyph => {\n  if (pdescs.length === 0) {\n    return glyph;\n  }\n  const newGlyph = glyph.slice();\n  for (const { lineIndex, pointIndex } of pdescs) {\n    const glyphLine = newGlyph[lineIndex];\n    const newValue = glyphLine.value.slice();\n    newValue[3 + pointIndex * 2] = tX(newValue[3 + pointIndex * 2]);\n    newValue[3 + pointIndex * 2 + 1] = tY(newValue[3 + pointIndex * 2 + 1]);\n    newGlyph[lineIndex] = {\n      ...glyphLine,\n      value: newValue,\n    };\n  }\n  return newGlyph;\n};\n\n\nexport const moveSelectedGlyphLines = (glyph: Glyph, selection: number[], dx: number, dy: number): Glyph => {\n  if (selection.length === 0) {\n    return glyph;\n  }\n  const targetDescs = listupConnectedPointsOfSelection(glyph, selection);\n\n  const tX = (x: number) => Math.round(x + dx);\n  const tY = (y: number) => Math.round(y + dy);\n  glyph = glyph.map((glyphLine, index) => selection.includes(index)\n    ? applyGlyphLineOperation(glyphLine, tX, tY)\n    : glyphLine\n  );\n  glyph = applyGlyphPointOperation(glyph, targetDescs, tX, tY);\n  return glyph;\n};\n\nexport const moveSelectedPoint = (glyph: Glyph, selection: number[], pointIndex: number, dx: number, dy: number): Glyph => {\n  if (selection.length === 0) {\n    return glyph;\n  }\n  const lineIndex = selection[0];\n  const selectedDesc: PointDescriptor = { lineIndex, pointIndex };\n  const targetDescs = listupConnectedPoints(glyph, [selectedDesc])\n    .filter((targetDesc) => targetDesc.lineIndex !== lineIndex);\n  targetDescs.push(selectedDesc);\n\n  const tX = (x: number) => Math.round(x + dx);\n  const tY = (y: number) => Math.round(y + dy);\n  glyph = applyGlyphPointOperation(glyph, targetDescs, tX, tY);\n  return glyph;\n};\n\nexport const resizeGlyphLine = (glyphLine: GlyphLine, oldBBX: BBX, newBBX: BBX): GlyphLine => {\n  const [x11, y11, x12, y12] = oldBBX;\n  const [x21, y21, x22, y22] = newBBX;\n  const tX = (x: number) => Math.round(x21 + (x - x11) * (x22 - x21) / (x12 - x11));\n  const tY = (y: number) => Math.round(y21 + (y - y11) * (y22 - y21) / (y12 - y11));\n  return applyGlyphLineOperation(glyphLine, tX, tY);\n};\n\nexport const resizeSelectedGlyphLines = (glyph: Glyph, selection: number[], oldBBX: BBX, newBBX: BBX): Glyph => {\n  return glyph.map((glyphLine, index) => selection.includes(index)\n    ? resizeGlyphLine(glyphLine, oldBBX, newBBX)\n    : glyphLine\n  );\n};\n","import actionCreatorFactory from 'typescript-fsa';\n\nimport { StretchParam } from '../kageUtils/stretchparam';\n\nconst actionCreator = actionCreatorFactory('EDITOR');\n\nexport const editorActions = {\n  loadedBuhin: actionCreator<[string, string]>('LOAD_BUHIN_DATA'),\n  loadedStretchParam: actionCreator<[string, StretchParam]>('LOAD_STRETCH_PARAM'),\n\n  changeStrokeType: actionCreator<number>('CHANGE_STROKE_TYPE'),\n  changeHeadShapeType: actionCreator<number>('CHANGE_HEAD_SHAPE_TYPE'),\n  changeTailShapeType: actionCreator<number>('CHANGE_TAIL_SHAPE_TYPE'),\n  changeStretchCoeff: actionCreator<number>('CHANGE_STRETCH_COEFF'),\n\n  swapWithPrev: actionCreator('SWAP_WITH_PREV'),\n  swapWithNext: actionCreator('SWAP_WITH_NEXT'),\n\n  insertPart: actionCreator<string>('ADD_PART'),\n\n  paste: actionCreator('PASTE'),\n  copy: actionCreator('COPY_SELECTION'),\n  cut: actionCreator('CUT_SELECTION'),\n  delete: actionCreator('DELETE_SELECTION'),\n  decomposeSelected: actionCreator('DECOMPOSE_SELECTION'),\n  moveSelected: actionCreator<[number, number]>('MOVE_SELECTED'),\n\n  toggleFreehand: actionCreator('TOGGLE_FREEHAND_MODE'),\n\n  openOptionModal: actionCreator('OPEN_OPTION_MODAL'),\n  closeOptionModal: actionCreator('CLOSE_OPTION_MODAL'),\n\n  finishEdit: actionCreator('FINISH_EDIT'),\n};\n","// The temporary reverse proxy which adds 'Access-Control-Allow-Origin: *' header.\n// This header is required for cross-origin requests.\nconst apiUrlPrefix = 'https://asia-northeast1-ku6goma.cloudfunctions.net/gwproxy';\n\nconst callApi = async (path: string) => {\n  const response = await fetch(apiUrlPrefix + path);\n  if (!response.ok) {\n    throw new Error('API error occurred');\n  }\n  return new URLSearchParams(await response.text());\n};\n\nexport const getSource = async (name: string) => {\n  const result = await callApi(`/get_source.cgi?name=${encodeURIComponent(name)}`);\n  return result.get('data');\n};\n\nexport const search = async (query: string) => {\n  const result = await callApi(`/search4ge.cgi?query=${encodeURIComponent(query)}`);\n  return result.get('data')!;\n};\n\nexport const getCandidate = async (name: string) => {\n  const result = await callApi(`/get_candidate.cgi?name=${encodeURIComponent(name)}`);\n  return result.get('data')!;\n};\n","import memoizeOne from 'memoize-one';\n\nimport { Kage, Polygons } from '@kurgm/kage-engine';\nimport { Glyph, unparseGlyphLine } from './kageUtils/glyph';\nimport { StretchParam } from './kageUtils/stretchparam';\n\nimport store from './store';\nimport { editorActions } from './actions/editor';\n\nimport { getSource } from './callapi';\n\nexport const kage = new Kage();\n\nlet waiting = new Set<string>();\nconst loadAbsentBuhin = (name: string) => {\n  if (waiting.has(name)) {\n    return;\n  }\n  waiting.add(name);\n  getSource(name)\n    .then((source) => {\n      if (typeof source !== 'string') {\n        throw new Error(`failed to get buhin source of ${name}`);\n      }\n      const stretchMatch = /^0:1:0:(-?\\d+):(-?\\d+):(-?\\d+):(-?\\d+)(?=$|\\$)/.exec(source);\n      if (stretchMatch) {\n        const params: StretchParam = [\n          +stretchMatch[1] || 0,\n          +stretchMatch[2] || 0,\n          +stretchMatch[3] || 0,\n          +stretchMatch[4] || 0,\n        ];\n        store.dispatch(editorActions.loadedStretchParam([name, params]));\n      }\n      store.dispatch(editorActions.loadedBuhin([name, source]));\n      waiting.delete(name);\n    })\n    .catch((err) => console.error(err));\n};\n\nconst filteredGlyphIsEqual = (glyph1: Glyph, glyph2: Glyph) => (\n  glyph1.length === glyph2.length &&\n  glyph1.every((gLine1, index) => (\n    gLine1 === glyph2[index]\n  ))\n);\n\nconst makeGlyphSeparated_ = memoizeOne((glyph: Glyph, map: Map<string, string>): Polygons[] => {\n  const data = glyph.map(unparseGlyphLine);\n  kage.kBuhin.search = (name) => {\n    const result = map.get(name);\n    if (typeof result === 'undefined') {\n      loadAbsentBuhin(name);\n      return '';\n    }\n    return result;\n  };\n  const result = kage.makeGlyphSeparated(data);\n  return result;\n}, ([glyph1, map1], [glyph2, map2]) => (\n  map1 === map2 &&\n  filteredGlyphIsEqual(glyph1, glyph2)\n));\n\nconst makeGlyphSeparatedFactory = (\n  isEqual?: (newArgs: Parameters<typeof makeGlyphSeparated_>, lastArgs: Parameters<typeof makeGlyphSeparated_>) => boolean\n) => memoizeOne((glyph: Glyph, map: Map<string, string>): Polygons[] => {\n  return makeGlyphSeparated_(glyph, map);\n}, isEqual);\n\nexport const makeGlyphSeparated = makeGlyphSeparatedFactory();\nexport const makeGlyphSeparatedForSubmit = makeGlyphSeparatedFactory(\n  ([glyph1, map1], [glyph2, map2]) => (\n    map1 === map2 &&\n    filteredGlyphIsEqual(glyph1, glyph2)\n  )\n);\n","import actionCreatorFactory from 'typescript-fsa';\n\nconst actionCreator = actionCreatorFactory('UNDO');\n\nexport const undoActions = {\n  undo: actionCreator('UNDO'),\n  redo: actionCreator('REDO'),\n};\n","import { ReducerBuilder } from 'typescript-fsa-reducers';\n\nimport { isGlyphDeepEqual } from \"../kageUtils/glyph\";\n\nimport { undoActions } from '../actions/undo';\n\nimport { AppState } from \".\";\n\nconst UNDO_MAX_TIMES = 30;\n\nexport const pushUndo = (oldState: AppState, newState: AppState): AppState => {\n  if (isGlyphDeepEqual(oldState.glyph, newState.glyph)) {\n    return newState;\n  }\n  return {\n    ...newState,\n    undoStacks: {\n      undo: oldState.undoStacks.undo.concat([oldState.glyph]).slice(-UNDO_MAX_TIMES),\n      redo: [],\n    },\n  };\n};\n\n\nexport const undoReduceBuilder = (builder: ReducerBuilder<AppState>) => builder\n  .case(undoActions.undo, (state) => {\n    if (state.undoStacks.undo.length === 0) {\n      return state;\n    }\n    return {\n      ...state,\n      glyph: state.undoStacks.undo[state.undoStacks.undo.length - 1],\n      selection: [], // TODO: select changed lines?\n      undoStacks: {\n        undo: state.undoStacks.undo.slice(0, -1),\n        redo: state.undoStacks.redo.concat([state.glyph]),\n      },\n    };\n  })\n  .case(undoActions.redo, (state) => {\n    if (state.undoStacks.redo.length === 0) {\n      return state;\n    }\n    return {\n      ...state,\n      glyph: state.undoStacks.redo[state.undoStacks.redo.length - 1],\n      selection: [], // TODO: select changed lines?\n      undoStacks: {\n        undo: state.undoStacks.undo.concat([state.glyph]),\n        redo: state.undoStacks.redo.slice(0, -1),\n      },\n    };\n  });\n","import memoizeOne from 'memoize-one';\n\nimport { GlyphLine } from './glyph';\n\nexport type BBX = [number, number, number, number];\n\nexport const bbxOfPoints = (points: [number, number][]): BBX => {\n  const xs = points.map(([x]) => x);\n  const ys = points.map(([, y]) => y);\n  return [\n    Math.min(...xs),\n    Math.min(...ys),\n    Math.max(...xs),\n    Math.max(...ys),\n  ];\n};\n\nexport const getGlyphLineBBX = (glyphLine: GlyphLine): BBX => {\n  switch (glyphLine.value[0]) {\n    case 99:\n      return bbxOfPoints([\n        [glyphLine.value[3], glyphLine.value[4]],\n        [glyphLine.value[5], glyphLine.value[6]],\n      ]);\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 6:\n    case 7:\n    case 9: {\n      const points: [number, number][] = [];\n      for (let i = 3; i + 2 <= glyphLine.value.length; i += 2) {\n        points.push([glyphLine.value[i], glyphLine.value[i + 1]]);\n      }\n      return bbxOfPoints(points);\n    }\n    default:\n      return bbxOfPoints([]);\n  }\n}\n\nexport const mergeBBX = ([x11, y11, x12, y12]: BBX, [x21, y21, x22, y22]: BBX): BBX => [\n  Math.min(x11, x21),\n  Math.min(y11, y21),\n  Math.max(x12, x22),\n  Math.max(y12, y22),\n];\n\nexport const getGlyphLinesBBX = memoizeOne((glyphLines: GlyphLine[]): BBX => {\n  return glyphLines.map(getGlyphLineBBX).reduce(mergeBBX, bbxOfPoints([]));\n}, ([gLines1], [gLines2]) => (\n  gLines1.length === gLines2.length &&\n  gLines1.every((gLine1, index) => gLine1 === gLines2[index])\n));\n","import { Glyph, GlyphLine } from './glyph';\nimport { applyGlyphLineOperation } from './transform';\n\nconst sum = (nums: number[]) => nums.reduce((a, b) => a + b, 0);\nconst avg = (nums: number[]) => sum(nums) / nums.length;\n\nconst lerp = (x1: number, x2: number, k: number) => x1 * (1 - k) + x2 * k;\nconst norm2 = (dx: number, dy: number) => dx * dx + dy * dy;\n\nexport const drawFreehand = (glyph: Glyph, points: [number, number][]): Glyph => {\n  const [startX, startY] = points[0];\n  const [endX, endY] = points[points.length - 1];\n  const dx = endX - startX;\n  const dy = endY - startY;\n\n  if (glyph.length > 0 && norm2(dx, dy) < 25 ** 2) {\n    const lastStroke = glyph[glyph.length - 1];\n    // ハネ部分かどうか？\n    if (\n      [1, 2].includes(lastStroke.value[0]) &&\n      norm2(\n        startX - lastStroke.value[lastStroke.value.length - 2],\n        startY - lastStroke.value[lastStroke.value.length - 1]\n      ) < 10 ** 2\n    ) {\n      if (dx < 0) { // 左ハネに変更\n        const newLastStroke: GlyphLine = {\n          value: lastStroke.value.slice(),\n        };\n        newLastStroke.value[2] = 4;\n        return glyph.slice(0, -1).concat([newLastStroke]);\n      }\n      if (lastStroke.value[0] === 2 && dx > 0 && dy < 0) { // 右ハネに変更\n        const newLastStroke: GlyphLine = {\n          value: lastStroke.value.slice(),\n        };\n        newLastStroke.value[2] = 5;\n        return glyph.slice(0, -1).concat([newLastStroke]);\n      }\n    }\n  }\n\n  const centroidX = avg(points.map(([x]) => x));\n  const centroidY = avg(points.map(([_x, y]) => y));\n\n  const midLerpRate = 3;\n  const midX = lerp((startX + endX) / 2, centroidX, midLerpRate);\n  const midY = lerp((startY + endY) / 2, centroidY, midLerpRate);\n\n  const dis = (dx * midY - dy * midX + startX * endY - startY * endX) / Math.sqrt(norm2(dx, dy));\n  if (Math.abs(dis) > 5) {\n    // 曲線\n    let startType = 0;\n    let endType = 0;\n    if (dx < 0 && dy > 0 && dis < 0) { // 左払い\n      startType = 0;\n      endType = 7;\n    } else if (dx > 0 && dy > 0 && dis > 0) { // 右払い\n      startType = 7;\n      endType = 0;\n    } else if (dx > 0 && dy > 0 && dis < 0) { // 止め\n      startType = 7;\n      endType = 8;\n    } else if (dx > 0 && dy < 0 && dis > 0) { // 右上方向の「左払い」\n      startType = 0;\n      endType = 7;\n    }\n    const newStroke: GlyphLine = {\n      value: [2, startType, endType, startX, startY, midX, midY, endX, endY],\n    };\n    return correctStroke(glyph, newStroke);\n  }\n\n  const newStroke: GlyphLine = {\n    value: [1, 0, 0, startX, startY, endX, endY],\n  };\n  return correctStroke(glyph, newStroke);\n};\n\nconst round = (x: number) => Math.round(x);\n\nconst correctStroke = (glyph: Glyph, newStroke: GlyphLine): Glyph => {\n  glyph = snapStrokeStart(glyph, newStroke);\n  snapStrokeTilt(newStroke);\n  glyph = snapStrokeEnd(glyph, newStroke);\n  newStroke = applyGlyphLineOperation(newStroke, round, round)\n  glyph = snapToNewStroke(glyph, newStroke);\n  return glyph.concat([newStroke]);\n};\n\nconst setGlyphValue = (glyph: Glyph, lineIndex: number, column: number, value: number): Glyph => {\n  if (glyph[lineIndex].value[column] === value) {\n    return glyph;\n  }\n  return glyph.map((gLine, index) => {\n    if (index !== lineIndex) {\n      return gLine;\n    }\n    const newGLine = {\n      ...gLine,\n      value: gLine.value.slice(),\n    };\n    newGLine.value[column] = value;\n    return newGLine;\n  });\n};\n\nconst snapVerticalStroke = (\n  glyph: Glyph, vertStroke: GlyphLine, position: 'start' | 'end',\n  leftType: number, middleType: number, rightType: number\n): Glyph => {\n  const ti = position === 'start' ? 1 : 2;\n  const xi = position === 'start' ? 3 : vertStroke.value.length - 2;\n  const yi = xi + 1;\n  const nx = vertStroke.value[xi];\n  const ny = vertStroke.value[yi];\n  const minX = nx - 10;\n  const maxX = nx + 10;\n  const minY = ny - 10;\n  const maxY = ny + 10;\n  for (let lineIndex = glyph.length - 1; lineIndex >= 0; lineIndex--) {\n    const horiStroke = glyph[lineIndex];\n    if (horiStroke.value[0] !== 1) {\n      continue;\n    }\n    const x1 = horiStroke.value[3];\n    const y1 = horiStroke.value[4];\n    const x2 = horiStroke.value[5];\n    const y2 = horiStroke.value[6];\n    if (x2 - x1 < Math.abs(y2 - y1)) {\n      continue;\n    }\n    if (\n      [0, 2].includes(horiStroke.value[1]) &&\n      minX <= x1 && x1 <= maxX &&\n      minY <= y1 && y1 <= maxY\n    ) {\n      vertStroke.value[xi] = x1;\n      vertStroke.value[yi] = y1;\n      vertStroke.value[ti] = leftType;\n      return setGlyphValue(glyph, lineIndex, 1, 2); // 接続(横)\n    }\n    if (\n      [0, 2].includes(horiStroke.value[2]) &&\n      minX <= x2 && x2 <= maxX &&\n      minY <= y2 && y2 <= maxY\n    ) {\n      vertStroke.value[xi] = x2;\n      vertStroke.value[yi] = y2;\n      vertStroke.value[ti] = rightType;\n      return setGlyphValue(glyph, lineIndex, 2, 2); // 接続(横)\n    }\n    if (y1 === y2 && minY <= y1 && y1 <= maxY && x1 <= nx && nx <= x2) {\n      vertStroke.value[yi] = y1;\n      vertStroke.value[ti] = middleType;\n      return glyph;\n    }\n  }\n  return glyph;\n};\n\nconst snapHorizontalStroke = (glyph: Glyph, horiStroke: GlyphLine, position: 'start' | 'end'): Glyph => {\n  const ti = position === 'start' ? 1 : 2;\n  const xi = position === 'start' ? 3 : 5;\n  const yi = xi + 1;\n  const nx = horiStroke.value[xi];\n  const ny = horiStroke.value[yi];\n  const minX = nx - 10;\n  const maxX = nx + 10;\n  const minY = ny - 10;\n  const maxY = ny + 10;\n  for (let lineIndex = glyph.length - 1; lineIndex >= 0; lineIndex--) {\n    const vertStroke = glyph[lineIndex];\n    if (![1, 2, 3, 4, 6, 7].includes(vertStroke.value[0])) {\n      continue;\n    }\n    const x1 = vertStroke.value[3];\n    const y1 = vertStroke.value[4];\n    const x2 = vertStroke.value[5];\n    const y2 = vertStroke.value[6];\n    if (vertStroke.value[0] === 1 && x2 - x1 > Math.abs(y2 - y1)) {\n      continue;\n    }\n    if (position === 'start') {\n      if (\n        [0, 12].includes(vertStroke.value[1]) &&\n        minX <= x1 && x1 <= maxX &&\n        minY <= y1 && y1 <= maxY\n      ) {\n        horiStroke.value[xi] = x1;\n        horiStroke.value[yi] = y1;\n        horiStroke.value[ti] = 2;\n        return setGlyphValue(glyph, lineIndex, 1, 12); // 左上カド\n      }\n      if (\n        vertStroke.value[0] === 1 &&\n        [0, 13, 313, 413].includes(vertStroke.value[2]) &&\n        minX <= x2 && x2 <= maxX &&\n        minY <= y2 && y2 <= maxY\n      ) {\n        horiStroke.value[xi] = x2;\n        horiStroke.value[yi] = y2;\n        horiStroke.value[ti] = 2;\n        return vertStroke.value[2] === 0\n          ? setGlyphValue(glyph, lineIndex, 2, 13) // 左下カド\n          : glyph;\n      }\n    } else {\n      if (\n        [0, 22].includes(vertStroke.value[1]) &&\n        minX <= x1 && x1 <= maxX &&\n        minY <= y1 && y1 <= maxY\n      ) {\n        horiStroke.value[xi] = x1;\n        horiStroke.value[yi] = y1;\n        horiStroke.value[ti] = 2;\n        return setGlyphValue(glyph, lineIndex, 1, 22); // 右上カド\n      }\n      if (\n        vertStroke.value[0] === 1 &&\n        [0, 23, 24].includes(vertStroke.value[2]) &&\n        minX <= x2 && x2 <= maxX &&\n        minY <= y2 && y2 <= maxY\n      ) {\n        horiStroke.value[xi] = x2;\n        horiStroke.value[yi] = y2;\n        horiStroke.value[ti] = 2;\n        return vertStroke.value[2] === 0\n          ? setGlyphValue(glyph, lineIndex, 2, 23) // 右下カド\n          : glyph;\n      }\n    }\n    if (x1 === x2 && minX <= x1 && x1 <= maxX && y1 <= ny && ny <= y2) {\n      horiStroke.value[xi] = x1;\n      horiStroke.value[ti] = 2;\n      return glyph;\n    }\n  }\n  return glyph;\n};\n\nconst snapStrokeStart = (glyph: Glyph, newStroke: GlyphLine): Glyph => {\n  if (newStroke.value[0] !== 1) {\n    const y1 = newStroke.value[4];\n    const y2 = newStroke.value[6];\n    if (y1 > y2) {\n      return glyph;\n    }\n    return snapVerticalStroke(glyph, newStroke, 'start', 12, 32, 22);\n  }\n  const x1 = newStroke.value[3];\n  const y1 = newStroke.value[4];\n  const x2 = newStroke.value[5];\n  const y2 = newStroke.value[6];\n  if (x2 - x1 > Math.abs(y2 - y1)) {\n    return snapHorizontalStroke(glyph, newStroke, 'start');\n  }\n  if (y2 - y1 > 0) {\n    return snapVerticalStroke(glyph, newStroke, 'start', 12, 32, 22);\n  }\n  return glyph;\n};\nconst snapStrokeTilt = (newStroke: GlyphLine) => {\n  if (newStroke.value[0] !== 1) {\n    return;\n  }\n  const x1 = newStroke.value[3];\n  const y1 = newStroke.value[4];\n  const x2 = newStroke.value[5];\n  const y2 = newStroke.value[6];\n\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (Math.abs(dx) > Math.abs(dy) * 20) {\n    newStroke.value[6] = y1;\n    return;\n  }\n  if (Math.abs(dy) > Math.abs(dx) * 20) {\n    newStroke.value[5] = x1;\n    return;\n  }\n};\nconst snapStrokeEnd = (glyph: Glyph, newStroke: GlyphLine): Glyph => {\n  if (newStroke.value[0] !== 1) {\n    return glyph;\n  }\n  const x1 = newStroke.value[3];\n  const y1 = newStroke.value[4];\n  const x2 = newStroke.value[5];\n  const y2 = newStroke.value[6];\n  if (x2 - x1 > Math.abs(y2 - y1)) {\n    return snapHorizontalStroke(glyph, newStroke, 'end');\n  }\n  if (y2 - y1 > 0) {\n    return snapVerticalStroke(glyph, newStroke, 'end', 13, 32, 23);\n  }\n  return glyph;\n};\nconst snapToNewStroke = (glyph: Glyph, newStroke: GlyphLine): Glyph => {\n  if (newStroke.value[0] !== 1) {\n    return glyph;\n  }\n  const x1 = newStroke.value[3];\n  const y1 = newStroke.value[4];\n  const x2 = newStroke.value[5];\n  const y2 = newStroke.value[6];\n  if (y1 !== y2) {\n    return glyph;\n  }\n  const minY = y1 - 10;\n  const maxY = y1 + 10;\n  glyph.forEach((gLine, lineIndex) => {\n    if (gLine.value[0] !== 1 || gLine.value[2] !== 0) {\n      return;\n    }\n    const sx1 = gLine.value[3];\n    const sy1 = gLine.value[4];\n    const sx2 = gLine.value[5];\n    const sy2 = gLine.value[6];\n    if (sx2 - sx1 > Math.abs(sy2 - sy1)) {\n      return;\n    }\n    if (minY <= sy2 && sy2 <= maxY && x1 <= sx2 && sx2 <= x2) {\n      glyph = setGlyphValue(glyph, lineIndex, 2, 32);\n      glyph = setGlyphValue(glyph, lineIndex, 6, y1);\n    }\n  });\n  return glyph;\n};\n","import { createSelector } from 'reselect';\n\nimport { RectPointPosition } from '../actions/drag';\n\nimport { AppState } from '../reducers';\n\nimport { Glyph, GlyphLine } from '../kageUtils/glyph';\nimport { getGlyphLinesBBX } from '../kageUtils/bbx';\nimport { moveSelectedGlyphLines, moveSelectedPoint, resizeSelectedGlyphLines } from '../kageUtils/transform';\nimport { drawFreehand } from '../kageUtils/freehand';\n\nexport const resizeSelected = (glyph: Glyph, selection: number[], position: RectPointPosition, dx: number, dy: number): Glyph => {\n  if (selection.length === 1) {\n    const selectedGlyphLine = glyph[selection[0]];\n    switch (selectedGlyphLine.value[0]) {\n      case 0:\n      case 9:\n      case 99: {\n        const newValue = selectedGlyphLine.value.slice();\n        switch (position) {\n          case RectPointPosition.north:\n            newValue[4] += dy;\n            break;\n          case RectPointPosition.west:\n            newValue[3] += dx;\n            break;\n          case RectPointPosition.south:\n            newValue[6] += dy;\n            break;\n          case RectPointPosition.east:\n            newValue[5] += dx;\n            break;\n          case RectPointPosition.southeast:\n            newValue[5] += dx;\n            newValue[6] += dy;\n            break;\n          default:\n            // exhaustive?\n            ((_x: never) => { })(position);\n        }\n        const newGlyphLine: GlyphLine = selectedGlyphLine.value[0] === 99\n          ? { value: newValue, partName: selectedGlyphLine.partName }\n          : { value: newValue };\n        return glyph.map((glyphLine, index) => index === selection[0] ? newGlyphLine : glyphLine);\n      }\n    }\n  }\n  const minSize = 20;\n  const oldBBX = getGlyphLinesBBX(selection.map((index) => glyph[index]));\n  const newBBX = oldBBX.slice() as typeof oldBBX;\n  switch (position) {\n    case RectPointPosition.north:\n      newBBX[1] = Math.min(newBBX[1] + dy, newBBX[3] - minSize);\n      break;\n    case RectPointPosition.west:\n      newBBX[0] = Math.min(newBBX[0] + dx, newBBX[2] - minSize);\n      break;\n    case RectPointPosition.south:\n      newBBX[3] = Math.max(newBBX[3] + dy, newBBX[1] + minSize);\n      break;\n    case RectPointPosition.east:\n      newBBX[2] = Math.max(newBBX[2] + dx, newBBX[0] + minSize);\n      break;\n    case RectPointPosition.southeast:\n      newBBX[2] = Math.max(newBBX[2] + dx, newBBX[0] + minSize);\n      newBBX[3] = Math.max(newBBX[3] + dy, newBBX[1] + minSize);\n      break;\n    default:\n      // exhaustive?\n      ((_x: never) => { })(position);\n  }\n  return resizeSelectedGlyphLines(glyph, selection, oldBBX, newBBX);\n};\n\nexport const draggedGlyphSelector = createSelector([\n  (state: AppState) => state.glyph,\n  (state: AppState) => state.selection,\n  (state: AppState) => state.dragSelection,\n  (state: AppState) => state.dragPoint,\n  (state: AppState) => state.resizeSelection,\n  (state: AppState) => state.freehandStroke,\n], (glyph, selection, dragSelection, dragPoint, resizeSelection, freehandStroke) => {\n  if (dragSelection) {\n    const [x1, y1, x2, y2] = dragSelection;\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    glyph = moveSelectedGlyphLines(glyph, selection, dx, dy);\n  } else if (dragPoint) {\n    const [pointIndex, [x1, y1, x2, y2]] = dragPoint;\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    glyph = moveSelectedPoint(glyph, selection, pointIndex, dx, dy);\n  } else if (resizeSelection) {\n    const [position, [x1, y1, x2, y2]] = resizeSelection;\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    glyph = resizeSelected(glyph, selection, position, dx, dy);\n  } else if (freehandStroke) {\n    glyph = drawFreehand(glyph, freehandStroke);\n  }\n  return glyph;\n});\n","import { GlyphLine } from './glyph';\n\nexport type StretchParam = [number, number, number, number];\nexport type StretchPositions = [number, number, number, number];\n\nexport const getStretchPositions = (glyphLine: GlyphLine): StretchPositions | null => {\n  if (glyphLine.value[0] !== 99) {\n    return null;\n  }\n  const sx = glyphLine.value[9];\n  const sy = glyphLine.value[10];\n  const tx = glyphLine.value[1];\n  const ty = glyphLine.value[2];\n  return [sx, sy, tx, ty];\n};\n\nexport const setStretchPositions = (glyphLine: GlyphLine, positions: StretchPositions): GlyphLine => {\n  if (glyphLine.value[0] !== 99) {\n    return glyphLine;\n  }\n  const [sx, sy, tx, ty] = positions;\n\n  const newValue = glyphLine.value.slice();\n  newValue[9] = sx;\n  newValue[10] = sy;\n  newValue[1] = tx;\n  newValue[2] = ty;\n  return { value: newValue, partName: glyphLine.partName };\n};\n\nexport const normalizeStretchPositions = (positions: StretchPositions): StretchPositions => {\n  let [sx, sy, tx, ty] = positions;\n  if (tx <= 100) {\n    tx += 200;\n    sx = sy = 0;\n  }\n  return [sx, sy, tx, ty];\n};\n\nexport const calcStretchPositions = (param: StretchParam, k: number): StretchPositions => {\n  const [x0, y0, x1, y1] = param;\n  return [\n    x0 - 100,\n    y0 - 100,\n    x0 + (x1 - x0) * k / 20 + 100,\n    y0 + (y1 - y0) * k / 20 - 100,\n  ];\n};\n\nconst clampStretchScalar = (k: number): number => Math.max(-10, Math.min(10, k));\n\nexport const calcStretchScalar = (param: StretchParam, positions: StretchPositions): number => {\n  const [x0, y0, x1, y1] = param;\n  if (x0 === x1 && y0 === y1) {\n    return 0;\n  }\n  const [sx, sy, tx, ty] = normalizeStretchPositions(positions);\n  if (sx === tx - 200 && sy === ty) {\n    return 0;\n  }\n  return clampStretchScalar(Math.round(\n    Math.abs(x0 - x1) > Math.abs(y0 - y1)\n      ? (tx - 100 - x0) / (x1 - x0) * 20\n      : (ty + 100 - y0) / (y1 - y0) * 20\n  )) || 0;\n}\n","import memoizeOne from 'memoize-one';\n\nimport { GlyphLine, getNumColumns } from './glyph';\n\nexport const strokeTypes = [1, 2, 3, 4, 6, 7];\n\nexport const headShapeTypes: Record<number, number[]> = {\n  1: [0, 2, 32, 12, 22],\n  2: [0, 32, 12, 22, 7],\n  3: [0, 32, 12, 22],\n  4: [0, 22],\n  6: [0, 32, 12, 22, 7],\n  7: [0, 32, 12, 22],\n};\n\nexport const tailShapeTypes: Record<number, number[]> = {\n  1: [0, 2, 32, 13, 23, 4, 313, 413, 24],\n  2: [7, 0, 8, 4, 5],\n  3: [0, 5],\n  4: [0, 5],\n  6: [7, 0, 8, 4, 5],\n  7: [7],\n};\n\nexport const changeStrokeType = (glyphLine: GlyphLine, newType: number): GlyphLine => {\n  const oldType = glyphLine.value[0];\n  if (!strokeTypes.includes(oldType) || !strokeTypes.includes(newType)) {\n    return glyphLine;\n  }\n  const newGlyphLine = {\n    value: glyphLine.value.slice(),\n  };\n\n  newGlyphLine.value[0] = newType;\n\n  if (!headShapeTypes[newType].includes(newGlyphLine.value[1])) {\n    newGlyphLine.value[1] = headShapeTypes[newType][0];\n  }\n  if (!tailShapeTypes[newType].includes(newGlyphLine.value[2])) {\n    newGlyphLine.value[2] = tailShapeTypes[newType][0];\n  }\n\n  const oldNumPoints = (getNumColumns(oldType) - 3) / 2;\n  const newNumPoints = (getNumColumns(newType) - 3) / 2;\n  if (oldNumPoints === newNumPoints) {\n    return newGlyphLine;\n  }\n  if (oldNumPoints === 2 && newNumPoints === 3) {\n    const x1 = newGlyphLine.value[3];\n    const y1 = newGlyphLine.value[4];\n    const x3 = newGlyphLine.value[5];\n    const y3 = newGlyphLine.value[6];\n\n    const x2 = Math.round((x1 + x3) / 2);\n    const y2 = Math.round((y1 + y3) / 2);\n    newGlyphLine.value = newGlyphLine.value.slice(0, 3).concat(\n      [x1, y1, x2, y2, x3, y3]\n    );\n    return newGlyphLine;\n  }\n  if (oldNumPoints === 2 && newNumPoints === 4) {\n    const x1 = newGlyphLine.value[3];\n    const y1 = newGlyphLine.value[4];\n    const x4 = newGlyphLine.value[5];\n    const y4 = newGlyphLine.value[6];\n\n    const x2 = Math.round((2 * x1 + x4) / 3);\n    const y2 = Math.round((2 * y1 + y4) / 3);\n    const x3 = Math.round((x1 + 2 * x4) / 3);\n    const y3 = Math.round((y1 + 2 * y4) / 3);\n    newGlyphLine.value = newGlyphLine.value.slice(0, 3).concat(\n      [x1, y1, x2, y2, x3, y3, x4, y4]\n    );\n    return newGlyphLine;\n  }\n  if (oldNumPoints === 3 && newNumPoints === 2) {\n    const x1 = newGlyphLine.value[3];\n    const y1 = newGlyphLine.value[4];\n    const x2 = newGlyphLine.value[7];\n    const y2 = newGlyphLine.value[8];\n    newGlyphLine.value = newGlyphLine.value.slice(0, 3).concat(\n      [x1, y1, x2, y2]\n    );\n    return newGlyphLine;\n  }\n  if (oldNumPoints === 3 && newNumPoints === 4) {\n    const x1 = newGlyphLine.value[3];\n    const y1 = newGlyphLine.value[4];\n    const xm = newGlyphLine.value[5];\n    const ym = newGlyphLine.value[6];\n    const x4 = newGlyphLine.value[7];\n    const y4 = newGlyphLine.value[8];\n\n    const x2 = Math.round((x1 + 2 * xm) / 3);\n    const y2 = Math.round((y1 + 2 * ym) / 3);\n    const x3 = Math.round((x4 + 2 * xm) / 3);\n    const y3 = Math.round((y4 + 2 * ym) / 3);\n    newGlyphLine.value = newGlyphLine.value.slice(0, 3).concat(\n      [x1, y1, x2, y2, x3, y3, x4, y4]\n    );\n    return newGlyphLine;\n  }\n  if (oldNumPoints === 4 && newNumPoints === 2) {\n    const x1 = newGlyphLine.value[3];\n    const y1 = newGlyphLine.value[4];\n    const x2 = newGlyphLine.value[9];\n    const y2 = newGlyphLine.value[10];\n    newGlyphLine.value = newGlyphLine.value.slice(0, 3).concat(\n      [x1, y1, x2, y2]\n    );\n    return newGlyphLine;\n  }\n  if (oldNumPoints === 4 && newNumPoints === 3) {\n    const x1 = newGlyphLine.value[3];\n    const y1 = newGlyphLine.value[4];\n    const xm1 = newGlyphLine.value[5];\n    const ym1 = newGlyphLine.value[6];\n    const xm2 = newGlyphLine.value[7];\n    const ym2 = newGlyphLine.value[8];\n    const x3 = newGlyphLine.value[9];\n    const y3 = newGlyphLine.value[10];\n\n    const x2 = Math.round((xm1 + xm2) / 2);\n    const y2 = Math.round((ym1 + ym2) / 2);\n    newGlyphLine.value = newGlyphLine.value.slice(0, 3).concat(\n      [x1, y1, x2, y2, x3, y3]\n    );\n    return newGlyphLine;\n  }\n  return newGlyphLine;\n};\n\nconst validStrokeShapeTypes: [number, number, number][] = [\n  [1, 0, 0],\n  [1, 0, 2],\n  [1, 0, 32],\n  [1, 0, 13],\n  [1, 0, 23],\n  [1, 0, 4],\n  [1, 0, 313],\n  [1, 0, 413],\n  [1, 0, 24],\n  [1, 2, 0],\n  [1, 2, 2],\n  [1, 32, 0],\n  [1, 32, 32],\n  [1, 32, 13],\n  [1, 32, 23],\n  [1, 32, 4],\n  [1, 32, 313],\n  [1, 32, 413],\n  [1, 32, 24],\n  [1, 12, 0],\n  [1, 12, 32],\n  [1, 12, 13],\n  [1, 12, 23],\n  [1, 12, 313],\n  [1, 12, 413],\n  [1, 12, 24],\n  [1, 22, 0],\n  [1, 22, 32],\n  [1, 22, 13],\n  [1, 22, 23],\n  [1, 22, 4],\n  [1, 22, 313],\n  [1, 22, 413],\n  [1, 22, 24],\n  [2, 0, 7],\n  [2, 0, 5],\n  [2, 32, 7],\n  [2, 32, 4],\n  [2, 32, 5],\n  [2, 12, 7],\n  [2, 22, 7],\n  [2, 22, 4],\n  [2, 22, 5],\n  [2, 7, 0],\n  [2, 7, 8],\n  [2, 7, 4],\n  [3, 0, 0],\n  [3, 0, 5],\n  [3, 32, 0],\n  [3, 32, 5],\n  [3, 12, 0],\n  [3, 12, 5],\n  [3, 22, 0],\n  [3, 22, 5],\n  [4, 0, 0],\n  [4, 0, 5],\n  [4, 22, 0],\n  [4, 22, 5],\n  [6, 0, 7],\n  [6, 0, 5],\n  [6, 32, 7],\n  [6, 32, 4],\n  [6, 32, 5],\n  [6, 12, 7],\n  [6, 22, 7],\n  [6, 22, 4],\n  [6, 22, 5],\n  [6, 7, 0],\n  [6, 7, 8],\n  [6, 7, 4],\n  [7, 0, 7],\n  [7, 32, 7],\n  [7, 12, 7],\n  [7, 22, 7],\n];\n\nexport const isValidStrokeShapeTypes = memoizeOne((stroke: GlyphLine) => {\n  if (!strokeTypes.includes(stroke.value[0])) {\n    return true;\n  }\n\n  return validStrokeShapeTypes.some(([s0, s1, s2]) => (\n    s0 === stroke.value[0] &&\n    s1 === stroke.value[1] &&\n    s2 === stroke.value[2]\n  ));\n});\n","import { ReducerBuilder } from 'typescript-fsa-reducers';\n\nimport { editorActions } from '../actions/editor';\n\nimport { Glyph, GlyphLine } from '../kageUtils/glyph';\nimport { getGlyphLinesBBX } from '../kageUtils/bbx';\nimport { decompose } from '../kageUtils/decompose';\nimport { calcStretchPositions, setStretchPositions } from '../kageUtils/stretchparam';\nimport { changeStrokeType } from '../kageUtils/stroketype';\nimport { applyGlyphLineOperation, moveSelectedGlyphLines } from '../kageUtils/transform';\n\nimport { pushUndo } from './undo';\n\nimport { AppState } from '.';\n\nconst setGlyphLine = (glyph: Glyph, index: number, glyphLine: GlyphLine): Glyph => {\n  const newGlyph = glyph.slice();\n  newGlyph[index] = glyphLine;\n  return newGlyph;\n};\n\nexport default (builder: ReducerBuilder<AppState>) => builder\n  .case(editorActions.loadedBuhin, (state, [name, data]) => {\n    const newMap = new Map(state.buhinMap);\n    newMap.set(name, data);\n    return {\n      ...state,\n      buhinMap: newMap,\n    };\n  })\n  .case(editorActions.loadedStretchParam, (state, [name, param]) => {\n    const newMap = new Map(state.stretchParamMap);\n    newMap.set(name, param);\n    return {\n      ...state,\n      stretchParamMap: newMap,\n    };\n  })\n\n  .case(editorActions.changeStrokeType, (state, newType) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    const newGLine = changeStrokeType(state.glyph[lineIndex], newType);\n    return pushUndo(state, {\n      ...state,\n      glyph: setGlyphLine(state.glyph, lineIndex, newGLine),\n    });\n  })\n  .case(editorActions.changeHeadShapeType, (state, newType) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    const newGLine = {\n      ...state.glyph[lineIndex],\n      value: state.glyph[lineIndex].value.slice(),\n    };\n    newGLine.value[1] = newType;\n    return pushUndo(state, {\n      ...state,\n      glyph: setGlyphLine(state.glyph, lineIndex, newGLine),\n    });\n  })\n  .case(editorActions.changeTailShapeType, (state, newType) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    const newGLine = {\n      ...state.glyph[lineIndex],\n      value: state.glyph[lineIndex].value.slice(),\n    };\n    newGLine.value[2] = newType;\n    return pushUndo(state, {\n      ...state,\n      glyph: setGlyphLine(state.glyph, lineIndex, newGLine),\n    });\n  })\n  .case(editorActions.changeStretchCoeff, (state, value) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    const selectedLine = state.glyph[lineIndex];\n    if (!selectedLine.partName) {\n      return state;\n    }\n    const stretchParam = state.stretchParamMap.get(selectedLine.partName);\n    if (!stretchParam) {\n      return state;\n    }\n    const newGLine = setStretchPositions(\n      state.glyph[lineIndex],\n      calcStretchPositions(stretchParam, value)\n    );\n    return pushUndo(state, {\n      ...state,\n      glyph: setGlyphLine(state.glyph, lineIndex, newGLine),\n    });\n  })\n\n  .case(editorActions.swapWithPrev, (state) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    if (lineIndex === 0) {\n      return state;\n    }\n    const newGlyph = state.glyph.slice();\n    newGlyph[lineIndex - 1] = state.glyph[lineIndex];\n    newGlyph[lineIndex] = state.glyph[lineIndex - 1];\n    return pushUndo(state, {\n      ...state,\n      glyph: newGlyph,\n      selection: [lineIndex - 1],\n    });\n  })\n  .case(editorActions.swapWithNext, (state) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    if (lineIndex === state.glyph.length - 1) {\n      return state;\n    }\n    const newGlyph = state.glyph.slice();\n    newGlyph[lineIndex + 1] = state.glyph[lineIndex];\n    newGlyph[lineIndex] = state.glyph[lineIndex + 1];\n    return pushUndo(state, {\n      ...state,\n      glyph: newGlyph,\n      selection: [lineIndex + 1],\n    });\n  })\n\n  .case(editorActions.insertPart, (state, partName) => pushUndo(state, {\n    ...state,\n    glyph: state.glyph.concat([{\n      value: [99, 0, 0, 0, 0, 200, 200, 0, 0, 0],\n      partName,\n    }]),\n    selection: [state.glyph.length],\n  }))\n\n  .case(editorActions.paste, (state) => pushUndo(state, {\n    ...state,\n    glyph: state.glyph.concat(state.clipboard),\n    selection: state.clipboard.map((_gLine, index) => state.glyph.length + index),\n  }))\n  .case(editorActions.copy, (state) => {\n    const targetLines = state.selection.map((index) => state.glyph[index]);\n    const [x1, y1] = getGlyphLinesBBX(targetLines);\n    const tX = (x: number) => 230 + x - x1;\n    const tY = (y: number) => 20 + y - y1;\n    return {\n      ...state,\n      clipboard: state.selection.map((index) => (\n        applyGlyphLineOperation(state.glyph[index], tX, tY)\n      )),\n    };\n  })\n  .case(editorActions.cut, (state) => pushUndo(state, {\n    ...state,\n    glyph: state.glyph.filter((_gLine, index) => !state.selection.includes(index)),\n    clipboard: state.selection.map((index) => state.glyph[index]),\n    selection: [],\n  }))\n  .case(editorActions.delete, (state) => pushUndo(state, {\n    ...state,\n    glyph: state.glyph.filter((_gLine, index) => !state.selection.includes(index)),\n    selection: [],\n  }))\n\n  .case(editorActions.decomposeSelected, (state) => {\n    let newGlyph: Glyph = [];\n    let newSelection: number[] = [];\n    state.glyph.forEach((gLine, index) => {\n      if (!state.selection.includes(index)) {\n        newGlyph.push(gLine);\n        return;\n      }\n      const newLines = decompose(gLine, state.buhinMap);\n      newSelection = newSelection.concat(\n        newLines.map((_gLine, subindex) => newGlyph.length + subindex)\n      );\n      newGlyph = newGlyph.concat(newLines);\n    });\n    return pushUndo(state, {\n      ...state,\n      glyph: newGlyph,\n      selection: newSelection,\n    });\n  })\n  .case(editorActions.moveSelected, (state, [dx, dy]) => pushUndo(state, {\n    ...state,\n    glyph: moveSelectedGlyphLines(state.glyph, state.selection, dx, dy),\n  }))\n\n  .case(editorActions.toggleFreehand, (state) => ({\n    ...state,\n    selection: state.freehandMode ? state.selection : [],\n    freehandMode: !state.freehandMode,\n  }))\n\n  .case(editorActions.openOptionModal, (state) => ({\n    ...state,\n    showOptionModal: true,\n  }))\n  .case(editorActions.closeOptionModal, (state) => ({\n    ...state,\n    showOptionModal: false,\n  }))\n\n  .case(editorActions.finishEdit, (state) => ({\n    ...state,\n    exiting: true,\n  }));\n","import { reducerWithInitialState } from 'typescript-fsa-reducers';\n\nimport { RectPointPosition, CTMInv } from '../actions/drag';\n\nimport { GlyphLine, Glyph, parseGlyph } from '../kageUtils/glyph';\nimport { StretchParam } from '../kageUtils/stretchparam';\nimport args from '../args';\n\nimport select from './select';\nimport drag from './drag';\nimport editor from './editor';\nimport { undoReduceBuilder as undo } from './undo';\n\n\nexport interface AppState {\n  glyph: Glyph;\n  selection: number[];\n  areaSelectRect: [number, number, number, number] | null;\n  dragSelection: [number, number, number, number] | null;\n  dragPoint: [number, [number, number, number, number]] | null;\n  resizeSelection: [RectPointPosition, [number, number, number, number]] | null;\n  freehandStroke: [number, number][] | null;\n  ctmInv: CTMInv | null;\n  buhinMap: Map<string, string>;\n  stretchParamMap: Map<string, StretchParam>;\n  freehandMode: boolean;\n  showOptionModal: boolean;\n  clipboard: GlyphLine[];\n  undoStacks: {\n    undo: Glyph[];\n    redo: Glyph[];\n  };\n  exiting: boolean;\n}\n\nconst initialState: AppState = {\n  glyph: parseGlyph(args.get('data') || ''),\n  selection: [],\n  areaSelectRect: null,\n  dragSelection: null,\n  dragPoint: null,\n  resizeSelection: null,\n  freehandStroke: null,\n  ctmInv: null,\n  buhinMap: new Map<string, string>(),\n  stretchParamMap: new Map<string, StretchParam>(),\n  freehandMode: false,\n  showOptionModal: false,\n  clipboard: [],\n  undoStacks: { undo: [], redo: [] },\n  exiting: false,\n};\n\nconst reducer = reducerWithInitialState(initialState)\n  .withHandling(select)\n  .withHandling(drag)\n  .withHandling(editor)\n  .withHandling(undo);\n\nexport default reducer;\n","import { ReducerBuilder } from 'typescript-fsa-reducers';\n\nimport { selectActions } from '../actions/select';\n\nimport { AppState } from '.';\n\nexport default (builder: ReducerBuilder<AppState>) => builder\n  .case(selectActions.selectSingle, (state, index) => ({\n    ...state,\n    selection: [index],\n  }))\n  .case(selectActions.selectAddSingle, (state, index) => ({\n    ...state,\n    selection: state.selection.includes(index) ? state.selection : state.selection.concat([index]),\n  }))\n  .case(selectActions.selectRemoveSingle, (state, index) => ({\n    ...state,\n    selection: state.selection.filter((index2) => index !== index2),\n  }))\n  .case(selectActions.selectAll, (state) => ({\n    ...state,\n    selection: state.glyph.map((_gLine, index) => index),\n  }))\n  .case(selectActions.selectDeselected, (state) => ({\n    ...state,\n    selection: state.glyph.map((_gLine, index) => index).filter((index) => !state.selection.includes(index)),\n  }))\n  .case(selectActions.selectNone, (state) => ({\n    ...state,\n    selection: [],\n  }))\n  .case(selectActions.selectPrev, (state) => {\n    if (state.glyph.length === 0) {\n      return { ...state, selection: [] };\n    }\n    const firstSelected = state.selection.length === 0 ? 0 : Math.min(...state.selection);\n    return {\n      ...state,\n      selection: [(firstSelected - 1 + state.glyph.length) % state.glyph.length],\n    };\n  })\n  .case(selectActions.selectNext, (state) => {\n    if (state.glyph.length === 0) {\n      return { ...state, selection: [] };\n    }\n    const firstSelected = state.selection.length === 0 ? -1 : Math.max(...state.selection);\n    return {\n      ...state,\n      selection: [(firstSelected + 1 + state.glyph.length) % state.glyph.length],\n    };\n  });\n","import { ReducerBuilder } from 'typescript-fsa-reducers';\n\n// @ts-ignore\nimport { polygonInPolygon, polygonIntersectsPolygon } from 'geometric';\n\nimport { dragActions } from '../actions/drag';\n\nimport { moveSelectedGlyphLines, moveSelectedPoint } from '../kageUtils/transform';\nimport { Glyph } from '../kageUtils/glyph';\nimport { makeGlyphSeparated } from '../kage';\n\nimport { AppState } from '.';\nimport { pushUndo } from './undo';\nimport { resizeSelected } from '../selectors/draggedGlyph';\nimport { drawFreehand } from '../kageUtils/freehand';\n\nconst performAreaSelect = (glyph: Glyph, buhinMap: Map<string, string>, x1: number, y1: number, x2: number, y2: number): number[] => {\n  const polygonsSep = makeGlyphSeparated(glyph, buhinMap);\n  const result = [];\n\n  const gAreaPolygon: [number, number][] = [\n    [x1, y1],\n    [x1, y2],\n    [x2, y2],\n    [x2, y1],\n    [x1, y1],\n  ];\n\n  for (let index = 0; index < polygonsSep.length; index++) {\n    const polygons = polygonsSep[index];\n    if (polygons.array.some((polygon) => {\n      const gPolygon = polygon.array.map(({ x, y }) => [x, y]);\n      gPolygon.push(gPolygon[0]); // close polygon\n\n      return (\n        polygonInPolygon(gAreaPolygon, gPolygon) ||\n        polygonInPolygon(gPolygon, gAreaPolygon) ||\n        polygonIntersectsPolygon(gAreaPolygon, gPolygon)\n      ) as boolean;\n    })) {\n      result.push(index);\n    }\n  }\n  return result;\n};\n\nexport default (builder: ReducerBuilder<AppState>) => builder\n  .case(dragActions.startBackgroundDrag, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    if (state.freehandMode) {\n      return {\n        ...state,\n        freehandStroke: [[x1, y1]],\n      };\n    }\n    return {\n      ...state,\n      areaSelectRect: [x1, y1, x1, y1],\n    };\n  })\n  .case(dragActions.startSelectionDrag, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      dragSelection: [x1, y1, x1, y1],\n    };\n  })\n  .case(dragActions.startPointDrag, (state, [evt, pointIndex]) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      dragPoint: [pointIndex, [x1, y1, x1, y1]],\n    };\n  })\n  .case(dragActions.startResize, (state, [evt, position]) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      resizeSelection: [position, [x1, y1, x1, y1]],\n    };\n  })\n\n  .case(dragActions.mouseMove, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    if (state.areaSelectRect) {\n      const [x1, y1] = state.areaSelectRect;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        areaSelectRect: [x1, y1, x2, y2],\n      };\n    }\n    if (state.dragSelection) {\n      const [x1, y1] = state.dragSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        dragSelection: [x1, y1, x2, y2],\n      };\n    }\n    if (state.dragPoint) {\n      const [pointIndex, [x1, y1]] = state.dragPoint;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        dragPoint: [pointIndex, [x1, y1, x2, y2]],\n      };\n    }\n    if (state.resizeSelection) {\n      const [position, [x1, y1]] = state.resizeSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        resizeSelection: [position, [x1, y1, x2, y2]],\n      };\n    }\n    if (state.freehandStroke) {\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      let freehandStroke = state.freehandStroke.concat([[x2, y2]]);\n      if (freehandStroke.length >= 3) {\n        const [lastX, lastY] = freehandStroke[freehandStroke.length - 2];\n        if (Math.abs(x2 - lastX) < 2 && Math.abs(y2 - lastY) < 2) {\n          freehandStroke.splice(freehandStroke.length - 2, 1);\n        }\n      }\n      return {\n        ...state,\n        freehandStroke,\n      };\n    }\n    return state;\n  })\n  .case(dragActions.mouseUp, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    if (state.areaSelectRect) {\n      const [x1, y1] = state.areaSelectRect;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      const intersections = performAreaSelect(state.glyph, state.buhinMap, x1, y1, x2, y2);\n\n      const newSelection = Array.from(new Set(state.selection.concat(intersections)));\n      return {\n        ...state,\n        selection: newSelection,\n        areaSelectRect: null,\n      };\n    }\n    if (state.dragSelection) {\n      const [x1, y1] = state.dragSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n\n      const newGlyph = moveSelectedGlyphLines(state.glyph, state.selection, x2 - x1, y2 - y1);\n      return pushUndo(state, {\n        ...state,\n        glyph: newGlyph,\n        dragSelection: null,\n      });\n    }\n    if (state.dragPoint) {\n      const [pointIndex, [x1, y1]] = state.dragPoint;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n\n      const newGlyph = moveSelectedPoint(state.glyph, state.selection, pointIndex, x2 - x1, y2 - y1);\n      return pushUndo(state, {\n        ...state,\n        glyph: newGlyph,\n        dragPoint: null,\n      });\n    }\n    if (state.resizeSelection) {\n      const [position, [x1, y1]] = state.resizeSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n\n      const newGlyph = resizeSelected(state.glyph, state.selection, position, x2 - x1, y2 - y1);\n      return pushUndo(state, {\n        ...state,\n        glyph: newGlyph,\n        resizeSelection: null,\n      });\n    }\n    if (state.freehandStroke) {\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      const freehandStroke = state.freehandStroke.concat([[x2, y2]]);\n\n      const newGlyph = drawFreehand(state.glyph, freehandStroke);\n      return pushUndo(state, {\n        ...state,\n        glyph: newGlyph,\n        freehandStroke: null,\n      });\n    }\n    return state;\n  })\n\n  .case(dragActions.updateCTMInv, (state, ctmInv) => ({\n    ...state,\n    ctmInv,\n  }));\n","import { kage } from '../kage';\n\nimport { GlyphLine, parseGlyph, unparseGlyph } from './glyph';\nimport { getStretchPositions, normalizeStretchPositions, setStretchPositions } from './stretchparam';\nimport { applyGlyphLineOperation } from './transform';\n\nexport const decompose = (glyphLine: GlyphLine, buhinMap: Map<string, string>): GlyphLine[] => {\n  if (glyphLine.value[0] !== 99) {\n    return [glyphLine];\n  }\n  const buhinSource = buhinMap.get(glyphLine.partName!);\n  if (!buhinSource) {\n    return [glyphLine];\n  }\n\n  let failedBuhin = false;\n  kage.kBuhin.search = (name: string) => {\n    const data = buhinMap.get(name);\n    if (typeof data !== 'string') {\n      failedBuhin = true;\n      return '';\n    }\n    return data;\n  };\n\n  const glyph = parseGlyph(buhinSource);\n\n  const strokesArray =\n    // @ts-ignore 2445\n    kage.getEachStrokes(\n      unparseGlyph(glyph)\n    );\n  const box =\n    // @ts-ignore 2445\n    kage.getBox(\n      strokesArray\n    );\n\n  const x1 = glyphLine.value[3];\n  const y1 = glyphLine.value[4];\n  const x2 = glyphLine.value[5];\n  const y2 = glyphLine.value[6];\n  const [sx, sy, tx, ty] = normalizeStretchPositions(getStretchPositions(glyphLine)!);\n  const isStretchEnabled = !(sx === tx - 200 && sy === ty);\n\n  if (isStretchEnabled && failedBuhin) {\n    // box may be incorrect\n    return [glyphLine];\n  }\n\n  return glyph.map((oldGlyphLine) => {\n    const tX = (x: number) => {\n      const stretchedX = isStretchEnabled\n        ? kage.stretch(tx - 200, sx, x, box.minX, box.maxX)\n        : x;\n      return Math.round(stretchedX / 200 * (x2 - x1) + x1);\n    };\n    const tY = (y: number) => {\n      const stretchedY = isStretchEnabled\n        ? kage.stretch(ty, sy, y, box.minY, box.maxY)\n        : y;\n      return Math.round(stretchedY / 200 * (y2 - y1) + y1);\n    };\n    const newGlyphLine = applyGlyphLineOperation(oldGlyphLine, tX, tY);\n\n    if (!(isStretchEnabled && newGlyphLine.value[0] === 99)) {\n      return newGlyphLine;\n    }\n\n    const [sx2, sy2, tx2, ty2] = normalizeStretchPositions(getStretchPositions(newGlyphLine)!);\n    if (!(sx2 === tx2 - 200 && sy2 === ty2)) {\n      // Cannot compose two stretches...\n      return newGlyphLine;\n    }\n\n    const px1 = newGlyphLine.value[3];\n    const py1 = newGlyphLine.value[4];\n    const px2 = newGlyphLine.value[5];\n    const py2 = newGlyphLine.value[6];\n\n    if (px1 === px2 || py1 === py2) {\n      return newGlyphLine;\n    }\n\n    const revX = (x: number) => (x - px1) / (px2 - px1) * 200;\n    const revY = (y: number) => (y - py1) / (py2 - py1) * 200;\n    return setStretchPositions(newGlyphLine, [\n      revX(sx2 + 100),\n      revY(sy2 + 100),\n      revX(tx2 - 100) + 100,\n      revY(ty2 + 100),\n    ]);\n  });\n};\n","import { createStore } from 'redux';\n\nimport reducer from './reducers';\n\nconst store = createStore(reducer);\n\nexport default store;\n","import React from 'react';\n\nimport { Polygons } from '@kurgm/kage-engine';\n\nexport interface StrokeComponentProps {\n  polygons: Polygons;\n}\n\nconst StrokeComponent = (props: StrokeComponentProps) => (\n  <>\n    {props.polygons.array.map((polygon, i) => (\n      <polygon key={i} points={polygon.array.map(({ x, y }) => `${x},${y} `).join(\"\")} />\n    ))}\n  </>\n);\n\nexport default StrokeComponent;\n","import React from 'react';\n\nimport { Glyph } from '../kageUtils/glyph';\nimport { makeGlyphSeparated } from '../kage';\nimport Stroke from './Stroke';\n\nimport './Glyph.css'\n\nexport interface GlyphComponentProps {\n  glyph: Glyph;\n  buhinMap: Map<string, string>;\n  selection: number[];\n  handleMouseDownDeselectedStroke?: (evt: React.MouseEvent, index: number) => void;\n  handleMouseDownSelectedStroke?: (evt: React.MouseEvent, index: number) => void;\n  makeGlyphSeparated?: typeof makeGlyphSeparated;\n}\n\nconst GlyphComponent = (props: GlyphComponentProps) => {\n  const polygonsSep = (props.makeGlyphSeparated || makeGlyphSeparated)(props.glyph, props.buhinMap);\n\n  const { selection } = props;\n  const nonSelection = polygonsSep.map((_polygons, index) => index)\n    .filter((index) => !selection.includes(index));\n\n  return (\n    <>\n      <g className=\"strokes-deselected\">\n        {nonSelection.map((index) => (\n          <g key={index} onMouseDown={(evt) => props.handleMouseDownDeselectedStroke?.(evt, index)}>\n            <Stroke polygons={polygonsSep[index]} />\n          </g>\n        ))}\n      </g>\n      <g className=\"strokes-selected\">\n        {selection.map((index) => (\n          <g key={index} onMouseDown={(evt) => props.handleMouseDownSelectedStroke?.(evt, index)}>\n            <Stroke polygons={polygonsSep[index]} />\n          </g>\n        ))}\n      </g>\n    </>\n  );\n};\n\nexport default GlyphComponent;\n","import React from 'react';\n\nimport './AreaSelectRect.css';\n\ninterface AreaSelectRectProps {\n  rect: [number, number, number, number] | null;\n}\n\nconst AreaSelectRect = (props: AreaSelectRectProps) => {\n  if (!props.rect) {\n    return null;\n  }\n  let [x1, y1, x2, y2] = props.rect;\n  if (x1 > x2) {\n    // swap\n    const temp = x1;\n    x1 = x2;\n    x2 = temp;\n  }\n  if (y1 > y2) {\n    // swap\n    const temp = y1;\n    y1 = y2;\n    y2 = temp;\n  }\n\n  return <rect className='areaselect-rect' x={x1} y={y1} width={x2 - x1} height={y2 - y1} />;\n};\n\nexport default AreaSelectRect;\n","import React from 'react';\n\nimport './ControlPoint.css';\n\ninterface ControlPointProps {\n  x: number;\n  y: number;\n  className?: string;\n  handleMouseDown: (evt: React.MouseEvent) => void;\n}\n\nconst ControlPoint = (props: ControlPointProps) => (\n  <rect\n    x={props.x - 4}\n    y={props.y - 4}\n    width={8} height={8}\n    className={`controlpoint-rect ${props.className || ''}`}\n    onMouseDown={props.handleMouseDown}\n  />\n);\n\nexport default ControlPoint;\n","import React, { useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { createSelector } from 'reselect';\n\nimport { dragActions, RectPointPosition } from '../actions/drag';\nimport { AppState } from '../reducers';\nimport { draggedGlyphSelector } from '../selectors/draggedGlyph';\nimport { getGlyphLinesBBX } from '../kageUtils/bbx';\nimport { getMatchType, MatchType } from '../kageUtils/match';\n\nimport ControlPoint from './ControlPoint';\n\nimport './SelectionControl.css';\n\ninterface RectControl {\n  multiSelect: boolean;\n  coords: [number, number, number, number];\n}\ninterface ControlPoint {\n  x: number;\n  y: number;\n  className: string;\n}\n\ninterface SelectionControlSpec {\n  rectControl: RectControl | null;\n  pointControl: ControlPoint[];\n}\n\nconst selectionControlSelector = createSelector(\n  [\n    draggedGlyphSelector,\n    (state: AppState) => state.selection,\n  ],\n  (glyph, selection): SelectionControlSpec => {\n    if (selection.length === 0) {\n      return { rectControl: null, pointControl: [] };\n    }\n    if (selection.length > 1) {\n      const selectedStrokes = selection.map((index) => glyph[index]);\n      const bbx = getGlyphLinesBBX(selectedStrokes);\n      return {\n        rectControl: {\n          multiSelect: true,\n          coords: bbx,\n        },\n        pointControl: [],\n      };\n    }\n    const selectedStroke = glyph[selection[0]];\n    switch (selectedStroke.value[0]) {\n      case 0:\n      case 9:\n      case 99:\n        return {\n          rectControl: {\n            multiSelect: false,\n            coords: [\n              selectedStroke.value[3],\n              selectedStroke.value[4],\n              selectedStroke.value[5],\n              selectedStroke.value[6],\n            ],\n          },\n          pointControl: [],\n        };\n      case 1:\n      case 2:\n      case 3:\n      case 4:\n      case 6:\n      case 7: {\n        const pointControl: ControlPoint[] = [];\n        for (let i = 3; i + 2 <= selectedStroke.value.length; i += 2) {\n          const matchType = getMatchType(glyph, {\n            lineIndex: selection[0],\n            pointIndex: (i - 3) / 2,\n          });\n          let className = '';\n          if (matchType === MatchType.match) {\n              className = 'match';\n          } else if (matchType === MatchType.online) {\n              className = 'online';\n          }\n\n          pointControl.push({\n            x: selectedStroke.value[i],\n            y: selectedStroke.value[i + 1],\n            className,\n          });\n        }\n        return { rectControl: null, pointControl };\n      }\n      default:\n        return { rectControl: null, pointControl: [] };\n    }\n  }\n);\n\nconst SelectionControl = () => {\n  const { rectControl, pointControl } = useSelector(selectionControlSelector);\n\n  const dispatch = useDispatch();\n  const handleMouseDownRectControl = useCallback((evt: React.MouseEvent, position: RectPointPosition) => {\n    dispatch(dragActions.startResize([evt, position]));\n    evt.stopPropagation();\n  }, [dispatch]);\n\n  const handleMouseDownNorthPoint = useCallback(\n    (evt: React.MouseEvent) => handleMouseDownRectControl(evt, RectPointPosition.north),\n    [handleMouseDownRectControl]\n  );\n  const handleMouseDownWestPoint = useCallback(\n    (evt: React.MouseEvent) => handleMouseDownRectControl(evt, RectPointPosition.west),\n    [handleMouseDownRectControl]\n  );\n  const handleMouseDownSouthPoint = useCallback(\n    (evt: React.MouseEvent) => handleMouseDownRectControl(evt, RectPointPosition.south),\n    [handleMouseDownRectControl]\n  );\n  const handleMouseDownEastPoint = useCallback(\n    (evt: React.MouseEvent) => handleMouseDownRectControl(evt, RectPointPosition.east),\n    [handleMouseDownRectControl]\n  );\n  const handleMouseDownSoutheastPoint = useCallback(\n    (evt: React.MouseEvent) => handleMouseDownRectControl(evt, RectPointPosition.southeast),\n    [handleMouseDownRectControl]\n  );\n\n  const handleMouseDownPointControls = useMemo(() => {\n    return pointControl.map((_control, pointIndex) => (evt: React.MouseEvent) => {\n      dispatch(dragActions.startPointDrag([evt, pointIndex]));\n      evt.stopPropagation();\n    });\n  }, [dispatch, pointControl]);\n\n  return <>\n    {rectControl && <>\n      <rect\n        className='selection-rect'\n        x={rectControl.coords[0]}\n        y={rectControl.coords[1]}\n        width={rectControl.coords[2] - rectControl.coords[0]}\n        height={rectControl.coords[3] - rectControl.coords[1]}\n      />\n      <ControlPoint\n        x={(rectControl.coords[0] + rectControl.coords[2]) / 2}\n        y={rectControl.coords[1]}\n        className='north'\n        handleMouseDown={handleMouseDownNorthPoint}\n      />\n      <ControlPoint\n        x={rectControl.coords[0]}\n        y={(rectControl.coords[1] + rectControl.coords[3]) / 2}\n        className='west'\n        handleMouseDown={handleMouseDownWestPoint}\n      />\n      <ControlPoint\n        x={(rectControl.coords[0] + rectControl.coords[2]) / 2}\n        y={rectControl.coords[3]}\n        className='south'\n        handleMouseDown={handleMouseDownSouthPoint}\n      />\n      <ControlPoint\n        x={rectControl.coords[2]}\n        y={(rectControl.coords[1] + rectControl.coords[3]) / 2}\n        className='east'\n        handleMouseDown={handleMouseDownEastPoint}\n      />\n      <ControlPoint\n        x={rectControl.coords[2]}\n        y={rectControl.coords[3]}\n        className='southeast'\n        handleMouseDown={handleMouseDownSoutheastPoint}\n      />\n    </>}\n    {pointControl.map(({ x, y, className }, index) => (\n      <ControlPoint\n        key={index}\n        x={x} y={y}\n        className={className}\n        handleMouseDown={handleMouseDownPointControls[index]}\n      />\n    ))}\n  </>;\n};\n\nexport default SelectionControl;","import React, { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { AppState } from '../reducers';\n\nimport { selectActions } from '../actions/select';\nimport { dragActions, CTMInv } from '../actions/drag';\nimport { draggedGlyphSelector } from '../selectors/draggedGlyph';\nimport Glyph from './Glyph';\nimport AreaSelectRect from './AreaSelectRect';\nimport SelectionControl from './SelectionControl';\n\nimport './GlyphArea.css';\n\nconst GlyphArea = () => {\n  const glyph = useSelector(draggedGlyphSelector);\n  const buhinMap = useSelector((state: AppState) => state.buhinMap);\n  const selection = useSelector((state: AppState) => state.selection);\n  const areaSelectRect = useSelector((state: AppState) => state.areaSelectRect);\n  const freehandMode = useSelector((state: AppState) => state.freehandMode);\n\n  const svgClassName = freehandMode ? 'freehand' : '';\n\n  const dispatch = useDispatch();\n  const handleMouseDownCapture = useCallback((evt: React.MouseEvent<SVGSVGElement>) => {\n    const ctm = evt.currentTarget.getScreenCTM();\n    if (!ctm) {\n      return;\n    }\n    const pt = evt.currentTarget.createSVGPoint();\n    const ictm = ctm.inverse();\n    const ctmInv: CTMInv = (evtx, evty) => {\n      pt.x = evtx;\n      pt.y = evty;\n      const { x, y } = pt.matrixTransform(ictm);\n      return [x, y];\n    };\n    dispatch(dragActions.updateCTMInv(ctmInv));\n  }, [dispatch]);\n\n  const handleMouseDownBackground = useCallback((evt: React.MouseEvent) => {\n    if (!(evt.shiftKey || evt.ctrlKey)) {\n      dispatch(selectActions.selectNone());\n    }\n    dispatch(dragActions.startBackgroundDrag(evt));\n  }, [dispatch]);\n  const handleMouseDownDeselectedStroke = useCallback((evt: React.MouseEvent, index: number) => {\n    if (evt.shiftKey || evt.ctrlKey) {\n      dispatch(selectActions.selectAddSingle(index));\n    } else {\n      dispatch(selectActions.selectSingle(index));\n    }\n    dispatch(dragActions.startSelectionDrag(evt));\n    evt.stopPropagation();\n  }, [dispatch]);\n  const handleMouseDownSelectedStroke = useCallback((evt: React.MouseEvent, index: number) => {\n    if (evt.shiftKey || evt.ctrlKey) {\n      dispatch(selectActions.selectRemoveSingle(index));\n    }\n    dispatch(dragActions.startSelectionDrag(evt));\n    evt.stopPropagation();\n  }, [dispatch]);\n\n  useEffect(() => {\n    const handleMouseMove = (evt: MouseEvent) => {\n      dispatch(dragActions.mouseMove(evt));\n    };\n    const handleMouseUp = (evt: MouseEvent) => {\n      dispatch(dragActions.mouseUp(evt));\n    };\n    document.addEventListener('mousemove', handleMouseMove)\n    document.addEventListener('mouseup', handleMouseUp);\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [dispatch]);\n\n  return (\n    <div className=\"glyph-area\">\n      <svg\n        width=\"100%\" height=\"100%\" viewBox=\"-20 -20 500 240\"\n        className={svgClassName}\n        onMouseDownCapture={handleMouseDownCapture}\n        onMouseDown={handleMouseDownBackground}\n      >\n        {/* TODO: grid */}\n        <rect x=\"0\" y=\"0\" width=\"200\" height=\"200\" className=\"glyph-boundary\" />\n        <rect x=\"12\" y=\"12\" width=\"176\" height=\"176\" className=\"glyph-guide\" />\n        <Glyph\n          glyph={glyph}\n          buhinMap={buhinMap}\n          selection={selection}\n          handleMouseDownDeselectedStroke={handleMouseDownDeselectedStroke}\n          handleMouseDownSelectedStroke={handleMouseDownSelectedStroke}\n        />\n        <SelectionControl />\n        <AreaSelectRect rect={areaSelectRect} />\n      </svg>\n    </div>\n  );\n};\n\nexport default GlyphArea;\n","import React, { useCallback } from 'react';\n\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { createSelector } from 'reselect';\n\nimport { editorActions } from '../actions/editor';\nimport { selectActions } from '../actions/select';\nimport { AppState } from '../reducers';\nimport { GlyphLine } from '../kageUtils/glyph';\nimport { calcStretchScalar, getStretchPositions } from '../kageUtils/stretchparam';\nimport { strokeTypes, headShapeTypes, tailShapeTypes, isValidStrokeShapeTypes } from '../kageUtils/stroketype';\nimport { draggedGlyphSelector } from '../selectors/draggedGlyph';\n\nimport { useTranslation } from 'react-i18next';\n\nimport './SelectionInfo.css'\n\n\nconst selectedGlyphLineSelector = createSelector([\n  (state: AppState) => state.selection,\n  draggedGlyphSelector,\n], (selection, draggedGlyph): GlyphLine | null => {\n  if (selection.length !== 1) {\n    return null;\n  }\n  return draggedGlyph[selection[0]];\n});\n\ninterface StrokeInfo {\n  strokeType: number;\n  headShapeType: number;\n  tailShapeType: number;\n  validTypes: boolean;\n  coordString: string;\n}\nconst strokeInfoSelector = createSelector([\n  selectedGlyphLineSelector\n], (selectedStroke): StrokeInfo | null => {\n  if (!selectedStroke) {\n    return null;\n  }\n  if (!strokeTypes.includes(selectedStroke.value[0])) {\n    return null;\n  }\n\n  const points = [];\n  for (let i = 3; i + 2 <= selectedStroke.value.length; i += 2) {\n    points.push(`(${selectedStroke.value[i]},${selectedStroke.value[i + 1]})`);\n  }\n  return {\n    strokeType: selectedStroke.value[0],\n    headShapeType: selectedStroke.value[1],\n    tailShapeType: selectedStroke.value[2],\n    validTypes: isValidStrokeShapeTypes(selectedStroke),\n    coordString: points.join(' → '),\n  };\n});\n\ninterface PartInfo {\n  partName: string;\n  entityName: string | null;\n  coordString: string;\n  stretchCoeff: number | null;\n}\nconst partInfoSelector = createSelector([\n  selectedGlyphLineSelector,\n  (state: AppState) => state.buhinMap,\n  (state: AppState) => state.stretchParamMap,\n], (selectedStroke, buhinMap, stretchParamMap): PartInfo | null => {\n  if (!selectedStroke) {\n    return null;\n  }\n  if (selectedStroke.value[0] !== 99) {\n    return null;\n  }\n  const partName = selectedStroke.partName!;\n  const buhinSource = buhinMap.get(partName);\n  let entityName: string | null = null;\n  if (buhinSource) {\n    const aliasMatch = /^(?:0:1:0:[^$]+\\$)?99:0:0:0:0:200:200:([^$]+)$/.exec(buhinSource);\n    if (aliasMatch) {\n      entityName = aliasMatch[1];\n    }\n  }\n  const stretchParam = stretchParamMap.get(partName);\n  const stretchCoeff = stretchParam\n    ? calcStretchScalar(stretchParam, getStretchPositions(selectedStroke)!)\n    : null;\n\n  return {\n    partName,\n    entityName,\n    coordString: `(${selectedStroke.value[3]},${selectedStroke.value[4]}) → (${selectedStroke.value[5]},${selectedStroke.value[6]})`,\n    stretchCoeff,\n  };\n});\n\ninterface OtherInfo {\n  isMultiple: boolean;\n  coordString?: string;\n}\nconst otherInfoSelector = createSelector([\n  (state: AppState) => state.selection,\n  selectedGlyphLineSelector,\n], (selection, selectedStroke_): OtherInfo | null => {\n  if (selection.length > 1) {\n    return { isMultiple: true };\n  }\n  if (selection.length === 0) {\n    return { isMultiple: false };\n  }\n  const selectedStroke = selectedStroke_!;\n  const strokeType = selectedStroke.value[0];\n  if (strokeTypes.includes(strokeType) || strokeType === 99) {\n    return null;\n  }\n\n  const points = [];\n  for (let i = 3; i + 2 <= selectedStroke.value.length; i += 2) {\n    points.push(`(${selectedStroke.value[i]},${selectedStroke.value[i + 1]})`);\n  }\n  return { isMultiple: false, coordString: points.join(' → ') };\n});\n\nconst selectIndexStringSelector = createSelector([\n  (state: AppState) => state.glyph.length,\n  (state: AppState) => state.selection,\n], (glyphLength, selection) => {\n  const selectedIndexString = selection\n    .map((index) => index + 1)\n    .sort((a, b) => a - b).join(',');\n  return `${selectedIndexString || '-'} / ${glyphLength || '-'}`;\n});\n\nconst buttonsDisabledSelector = createSelector([\n  (state: AppState) => state.glyph.length,\n  (state: AppState) => state.selection,\n], (glyphLength, selection) => ({\n  swapPrevDisabled: selection.length !== 1 || selection[0] === 0,\n  swapNextDisabled: selection.length !== 1 || selection[0] === glyphLength - 1,\n  selectPrevDisabled: glyphLength === 0,\n  selectNextDisabled: glyphLength === 0,\n}));\n\nconst SelectionInfo = () => {\n\n  const strokeInfo = useSelector(strokeInfoSelector);\n  const partInfo = useSelector(partInfoSelector);\n  const otherInfo = useSelector(otherInfoSelector);\n\n  const selectIndexString = useSelector(selectIndexStringSelector);\n\n  const {\n    swapPrevDisabled, swapNextDisabled,\n    selectPrevDisabled, selectNextDisabled,\n  } = useSelector(buttonsDisabledSelector, shallowEqual);\n\n  const dispatch = useDispatch();\n  const changeStrokeType = useCallback((evt: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(editorActions.changeStrokeType(+evt.currentTarget.value));\n  }, [dispatch]);\n  const changeHeadShapeType = useCallback((evt: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(editorActions.changeHeadShapeType(+evt.currentTarget.value));\n  }, [dispatch]);\n  const changeTailShapeType = useCallback((evt: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(editorActions.changeTailShapeType(+evt.currentTarget.value));\n  }, [dispatch]);\n  const changeStretchCoeff = useCallback((evt: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(editorActions.changeStretchCoeff(+evt.currentTarget.value));\n  }, [dispatch]);\n  const selectPrev = useCallback(() => {\n    dispatch(selectActions.selectPrev());\n  }, [dispatch]);\n  const selectNext = useCallback(() => {\n    dispatch(selectActions.selectNext());\n  }, [dispatch]);\n  const swapWithPrev = useCallback(() => {\n    dispatch(editorActions.swapWithPrev());\n  }, [dispatch]);\n  const swapWithNext = useCallback(() => {\n    dispatch(editorActions.swapWithNext());\n  }, [dispatch]);\n\n  const { t } = useTranslation();\n  return (\n    <div className=\"select-control\">\n      <div className=\"selected-info\">\n        {strokeInfo && <>\n          <div>\n            {t('stroke type')}\n            <select value={strokeInfo.strokeType} onChange={changeStrokeType}>\n              {strokeTypes.map((strokeType) => (\n                <option key={strokeType} value={strokeType}>\n                  {t(`stroke type ${strokeType}`)}\n                </option>\n              ))}\n            </select>\n            {' '}\n            {t('head type')}\n            <select value={strokeInfo.headShapeType} onChange={changeHeadShapeType}>\n              {headShapeTypes[strokeInfo.strokeType].map((headShapeType) => (\n                <option key={headShapeType} value={headShapeType}>\n                  {t(`head type ${strokeInfo.strokeType}-${headShapeType}`)}\n                </option>\n              ))}\n            </select>\n            {' '}\n            {t('tail type')}\n            <select value={strokeInfo.tailShapeType} onChange={changeTailShapeType}>\n              {tailShapeTypes[strokeInfo.strokeType].map((tailShapeType) => (\n                <option key={tailShapeType} value={tailShapeType}>\n                  {t(`tail type ${strokeInfo.strokeType}-${tailShapeType}`)}\n                </option>\n              ))}\n            </select>\n            {' '}\n            {!strokeInfo.validTypes && (\n              <span className=\"alert\">\n                {t('invalid stroke shape types')}\n              </span>\n            )}\n          </div>\n          <div>{strokeInfo.coordString}</div>\n        </>}\n        {partInfo && <>\n          <div>\n            {t('part')}\n            {' '}\n            <strong>{partInfo.partName}</strong>\n            {' '}\n            {partInfo.entityName && t('alias of', { entity: partInfo.entityName })}\n          </div>\n          <div>{partInfo.coordString}</div>\n          {partInfo.stretchCoeff !== null && (\n            <div>\n              {t('stretch')}\n              {' '}\n              <input\n                type=\"range\" min={-10} max={10}\n                value={partInfo.stretchCoeff}\n                onChange={changeStretchCoeff}\n              />\n              {' '}\n              {partInfo.stretchCoeff}\n            </div>\n          )}\n        </>}\n        {otherInfo && <>\n          {otherInfo.isMultiple && <div>{t('selecting multiple strokes')}</div>}\n          {otherInfo.coordString && <div>{otherInfo.coordString}</div>}\n        </>}\n      </div>\n      <div className=\"selection-control\">\n        <button\n          disabled={swapPrevDisabled}\n          onClick={swapWithPrev}\n        >\n          {t('swap with prev')}\n        </button>\n        <button\n          className=\"select-prevnext-button\"\n          disabled={selectPrevDisabled}\n          onClick={selectPrev}\n        >\n          {t('select prev')}\n        </button>\n        <div className=\"selection-num\">\n          {selectIndexString}\n        </div>\n        <button\n          className=\"select-prevnext-button\"\n          disabled={selectNextDisabled}\n          onClick={selectNext}\n        >\n          {t('select next')}\n        </button>\n        <button\n          disabled={swapNextDisabled}\n          onClick={swapWithNext}\n        >\n          {t('swap with next')}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default SelectionInfo;\n","import { createSelector } from \"reselect\";\n\nimport { Glyph } from \"../kageUtils/glyph\";\nimport { getGlyphLineBBX } from \"../kageUtils/bbx\";\n\nimport { draggedGlyphSelector } from \"./draggedGlyph\";\n\nexport const submitGlyphSelector = createSelector([\n  draggedGlyphSelector,\n], (glyph: Glyph): Glyph => {\n  return glyph.filter((glyphLine) => getGlyphLineBBX(glyphLine)[0] < 200);\n});\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { submitGlyphSelector } from '../selectors/submitGlyph';\nimport { AppState } from '../reducers';\nimport { makeGlyphSeparatedForSubmit } from '../kage';\n\nimport GlyphComponent from './Glyph';\n\nconst SubmitPreview = () => {\n  const submitGlyph = useSelector(submitGlyphSelector);\n  const buhinMap = useSelector((state: AppState) => state.buhinMap);\n\n  return (\n    <svg className=\"preview-thumbnail\" viewBox=\"0 0 200 200\" width=\"50\" height=\"50\">\n      <GlyphComponent\n        buhinMap={buhinMap}\n        glyph={submitGlyph}\n        selection={[]}\n        makeGlyphSeparated={makeGlyphSeparatedForSubmit}\n      />\n    </svg>\n  );\n};\n\nexport default SubmitPreview;\n","import React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { useTranslation } from 'react-i18next';\n\nimport { AppState } from '../reducers';\nimport { editorActions } from '../actions/editor';\nimport { selectActions } from '../actions/select';\nimport { undoActions } from '../actions/undo';\n\nimport SelectionInfo from './SelectionInfo';\nimport SubmitPreview from './SubmitPreview';\n\nimport './EditorControls.css';\n\nconst EditorControls = () => {\n  const glyph = useSelector((state: AppState) => state.glyph);\n  const selection = useSelector((state: AppState) => state.selection);\n  const clipboard = useSelector((state: AppState) => state.clipboard);\n  const freehandMode = useSelector((state: AppState) => state.freehandMode);\n  const undoLength = useSelector((state: AppState) => state.undoStacks.undo.length);\n  const redoLength = useSelector((state: AppState) => state.undoStacks.redo.length);\n\n  const undoDisabled = undoLength === 0;\n  const redoDisabled = redoLength === 0;\n  const pasteDisabled = clipboard.length === 0;\n  const decomposeDisabled = !selection.some((index) => glyph[index].value[0] === 99);\n\n  const dispatch = useDispatch();\n  const undo = useCallback(() => {\n    dispatch(undoActions.undo());\n  }, [dispatch]);\n  const redo = useCallback(() => {\n    dispatch(undoActions.redo());\n  }, [dispatch]);\n  const selectAll = useCallback(() => {\n    dispatch(selectActions.selectAll());\n  }, [dispatch]);\n  const selectDeselected = useCallback(() => {\n    dispatch(selectActions.selectDeselected());\n  }, [dispatch]);\n  const copy = useCallback(() => {\n    dispatch(editorActions.copy());\n  }, [dispatch]);\n  const paste = useCallback(() => {\n    dispatch(editorActions.paste());\n  }, [dispatch]);\n  const cut = useCallback(() => {\n    dispatch(editorActions.cut());\n  }, [dispatch]);\n  const toggleFreehand = useCallback(() => {\n    dispatch(editorActions.toggleFreehand());\n  }, [dispatch]);\n  const decompose = useCallback(() => {\n    dispatch(editorActions.decomposeSelected());\n  }, [dispatch]);\n  const options = useCallback(() => {\n    dispatch(editorActions.openOptionModal());\n  }, [dispatch]);\n  const finishEdit = useCallback(() => {\n    dispatch(editorActions.finishEdit());\n  }, [dispatch]);\n\n  const { t } = useTranslation();\n  return (\n    <div className=\"editor-controls\">\n      <SelectionInfo />\n      <div className=\"control-buttons\">\n        <button\n          disabled={undoDisabled}\n          onClick={undo}\n        >\n          {t('undo')}\n        </button>\n        <button\n          disabled={redoDisabled}\n          onClick={redo}\n        >\n          {t('redo')}\n        </button>\n        <button\n          disabled={freehandMode || glyph.length === 0}\n          onClick={selectAll}\n        >\n          {t('select all')}\n        </button>\n        <button\n          disabled={freehandMode || glyph.length === 0}\n          onClick={selectDeselected}\n        >\n          {t('invert selection')}\n        </button>\n        <button\n          disabled={selection.length === 0}\n          onClick={copy}\n        >\n          {t('copy')}\n        </button>\n        <button\n          disabled={pasteDisabled}\n          onClick={paste}\n        >\n          {t('paste')}\n        </button>\n        <button\n          disabled={selection.length === 0}\n          onClick={cut}\n        >\n          {t('cut')}\n        </button>\n        <button\n          onClick={toggleFreehand}\n        >\n          {freehandMode ? t('end freehand') : t('start freehand')}\n        </button>\n        <button\n          disabled={decomposeDisabled}\n          onClick={decompose}\n        >\n          {t('decompose')}\n        </button>\n        <button\n          disabled\n          onClick={options}\n        >\n          {t('options')}\n        </button>\n      </div>\n      <div className=\"preview\">\n        <SubmitPreview />\n        <button onClick={finishEdit}>\n          {t('finish edit')}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default EditorControls;\n","import React, { useCallback } from 'react';\n\nimport './PartsList.css';\n\nconst getImageURL = (name: string) => (\n  `https://glyphwiki.org/glyph/${name}.50px.png`\n);\n\ninterface PartsListProps {\n  names: string[];\n  handleItemClick: (partName: string, evt: React.MouseEvent<HTMLImageElement>) => void;\n  handleItemMouseEnter: (partName: string, evt: React.MouseEvent<HTMLImageElement>) => void;\n}\n\nconst PartsList = (props: PartsListProps) => {\n  const { handleItemClick, handleItemMouseEnter } = props;\n  const handleImageClick = useCallback((evt: React.MouseEvent<HTMLImageElement>) => {\n    const partName = evt.currentTarget.dataset.name!;\n    handleItemClick(partName, evt);\n  }, [handleItemClick]);\n  const handleImageMouseEnter = useCallback((evt: React.MouseEvent<HTMLImageElement>) => {\n    const partName = evt.currentTarget.dataset.name!;\n    handleItemMouseEnter(partName, evt);\n  }, [handleItemMouseEnter]);\n\n  return (\n    <div className=\"parts-list\">\n      {props.names.map((name) => (\n        <img\n          key={name} alt={name} title={name}\n          data-name={name}\n          src={getImageURL(name)}\n          width={50} height={50}\n          onClick={handleImageClick}\n          onMouseEnter={handleImageMouseEnter}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default PartsList;\n","import React, { useRef, useCallback, useState, useEffect, FormEvent } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { useTranslation } from 'react-i18next';\n\nimport { editorActions } from '../actions/editor';\nimport { search } from '../callapi';\nimport args from '../args';\n\nimport './PartsSearch.css';\nimport PartsList from './PartsList';\n\nconst searchSuggestions = [\n  'エディタ部品1',\n  'エディタ部品2',\n  'エディタ部品3',\n  'エディタ部品4',\n];\n\nconst initialQuery = args.get('name') || '';\n\nclass QueryTooShortError extends Error { }\n\nconst PartsSearch = () => {\n  const queryInputRef = useRef<HTMLInputElement>(null);\n  const [searching, setSearching] = useState(false);\n  const [names, setNames] = useState<string[]>([]);\n  const [err, setErr] = useState<any>(null);\n\n  const startSearch = (query: string) => {\n    setSearching(true);\n    search(query)\n      .then((result) => {\n        if (result === 'tooshort') {\n          throw new QueryTooShortError('query too short');\n        }\n        if (result === 'nodata') {\n          return [];\n        }\n        return result.split('\\t');\n      })\n      .then((names) => {\n        setSearching(false);\n        setNames(names);\n      })\n      .catch((reason) => {\n        setSearching(false);\n        setErr(reason);\n      });\n  };\n\n  useEffect(() => {\n    if (initialQuery) {\n      startSearch(initialQuery);\n    }\n  }, []);\n  const handleSearch = useCallback(() => {\n    if (!queryInputRef.current) {\n      return;\n    }\n    const query = queryInputRef.current.value;\n    if (!query) {\n      setNames([]);\n      return;\n    }\n    startSearch(query);\n  }, []);\n  const handleFormSubmit = useCallback((evt: React.FormEvent) => {\n    evt.preventDefault();\n    handleSearch();\n  }, [handleSearch]);\n\n  const hoverNameRef = useRef<HTMLDivElement>(null);\n  const handleItemMouseEnter = useCallback((partName: string) => {\n    if (!hoverNameRef.current) {\n      return;\n    }\n    hoverNameRef.current.textContent = partName;\n  }, []);\n  const dispatch = useDispatch();\n  const handleItemClick = useCallback((partName: string, evt: React.MouseEvent) => {\n    if (evt.shiftKey) {\n      if (!queryInputRef.current) {\n        return;\n      }\n      queryInputRef.current.value = partName;\n      startSearch(partName);\n    } else {\n      dispatch(editorActions.insertPart(partName));\n    }\n  }, [dispatch]);\n\n  const { t } = useTranslation();\n  return (\n    <div className=\"parts-search-area\">\n      <form className=\"parts-search-box\" onSubmit={handleFormSubmit}>\n        <input defaultValue={initialQuery} list=\"searchList\" ref={queryInputRef} />\n        <button onClick={handleSearch}>\n          {t('search')}\n        </button>\n        <datalist id=\"searchList\">\n          {searchSuggestions.map((suggestion, index) => (\n            <option key={index} value={suggestion} />\n          ))}\n        </datalist>\n      </form>\n      <div className=\"parts-list-area\">\n        {searching\n          ? <div className=\"message\">{t('searching')}</div>\n          : err\n            ? err instanceof QueryTooShortError\n              ? <div className=\"message\">{t('search query too short')}</div>\n              : <div className=\"message\">{t('search error', { message: err })}</div>\n            : names.length === 0\n              ? <div className=\"message\">{t('no search result')}</div>\n              : <PartsList\n                names={names}\n                handleItemClick={handleItemClick}\n                handleItemMouseEnter={handleItemMouseEnter}\n              />}\n      </div>\n      <div className=\"parts-hover-name\" ref={hoverNameRef}>&nbsp;</div>\n    </div>\n  )\n};\n\nexport default PartsSearch;\n","import React, { useRef, useLayoutEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport args from '../args';\n\nimport { AppState } from '../reducers';\nimport { submitGlyphSelector } from '../selectors/submitGlyph';\nimport { unparseGlyph } from '../kageUtils/glyph';\n\n\nlet host = args.get('host');\nconst ssl = args.get('ssl') !== 'false';\nconst glyphName = args.get('name') || 'sandbox';\nconst related = args.get('related') || 'u3013';\nconst edittime = args.get('edittime');\nconst summary = args.get('summary') || '';\n\nif (!host || ![\n  'glyphwiki.org',\n  'en.glyphwiki.org',\n  'ko.glyphwiki.org',\n  'zhs.glyphwiki.org',\n  'zht.glyphwiki.org',\n].includes(host)) {\n  host = 'glyphwiki.org';\n}\n\nconst formAction = `${ssl ? 'https' : 'http'}://${host}/wiki/${encodeURIComponent(glyphName)}?action=preview`;\n\n\nconst SubmitForm = () => {\n  const exiting = useSelector((state: AppState) => state.exiting);\n  const formRef = useRef<HTMLFormElement>(null);\n  useLayoutEffect(() => {\n    if (exiting) {\n      formRef.current?.submit();\n    }\n  }, [exiting]);\n  const glyph = useSelector(submitGlyphSelector);\n  return (\n    <form\n      style={{ visibility: 'hidden', position: 'absolute' }}\n      ref={formRef}\n      action={formAction}\n      method=\"post\"\n    >\n      <input type=\"hidden\" name=\"page\" value={glyphName} />\n      <input type=\"hidden\" name=\"action\" value=\"preview\" />\n      <input type=\"hidden\" name=\"textbox\" value={unparseGlyph(glyph)} />\n      <input type=\"hidden\" name=\"related\" value={related} />\n      <input type=\"hidden\" name=\"summary\" value={summary} />\n      {edittime && <input type=\"hidden\" name=\"edittime\" value={edittime} />}\n    </form>\n  );\n};\n\nexport default SubmitForm;","import React from 'react';\nimport './App.css';\n\nimport GlyphArea from './components/GlyphArea';\nimport EditorControls from './components/EditorControls';\nimport PartsSearch from './components/PartsSearch'\nimport SubmitForm from './components/SubmitForm';\n\nimport { useShortcuts } from './shortcuts';\n\nfunction App() {\n  useShortcuts();\n  return (\n    <div className=\"App\">\n      <GlyphArea />\n      <EditorControls />\n      <PartsSearch />\n      <SubmitForm />\n    </div>\n  );\n}\n\nexport default App;\n","import { useDispatch } from 'react-redux';\nimport { useHotkeys }from 'react-hotkeys-hook';\n\nimport { selectActions } from './actions/select';\nimport { editorActions } from './actions/editor';\nimport { undoActions } from './actions/undo';\n\nexport const useShortcuts = () => {\n  const dispatch = useDispatch();\n  useHotkeys('ctrl+a, command+a', (evt) => {\n    dispatch(selectActions.selectAll());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+i, command+i', (evt) => {\n    dispatch(selectActions.selectDeselected());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n\n  useHotkeys('ctrl+z, command+z', (evt) => {\n    dispatch(undoActions.undo());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+y, command+y, ctrl+shift+z, command+shift+z', (evt) => {\n    dispatch(undoActions.redo());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+x, command+x', (evt) => {\n    dispatch(editorActions.cut());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+c, command+c', (evt) => {\n    dispatch(editorActions.copy());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+v, command+v', (evt) => {\n    dispatch(editorActions.paste());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('del', (evt) => {\n    dispatch(editorActions.delete());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n\n  useHotkeys('del', (evt) => {\n    dispatch(editorActions.delete());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n\n  useHotkeys('ctrl+h, left', (evt) => {\n    dispatch(editorActions.moveSelected([-1, 0]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+j, down', (evt) => {\n    dispatch(editorActions.moveSelected([0, 1]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+k, up', (evt) => {\n    dispatch(editorActions.moveSelected([0, -1]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+l, right', (evt) => {\n    dispatch(editorActions.moveSelected([1, 0]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+shift+h, shift+left', (evt) => {\n    dispatch(editorActions.moveSelected([-5, 0]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+shift+j, shift+down', (evt) => {\n    dispatch(editorActions.moveSelected([0, 5]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+shift+k, shift+up', (evt) => {\n    dispatch(editorActions.moveSelected([0, -5]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+shift+l, shift+right', (evt) => {\n    dispatch(editorActions.moveSelected([5, 0]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport jaTranslation from './locales/ja.json';\n\nimport args from \"./args\";\n\nconst resources = {\n  ja: {\n    translation: jaTranslation,\n  },\n};\n\nconst host = args.get('host');\nlet lng = 'ja';\nif (host) {\n  switch (host.split('.')[0]) {\n    case 'en':\n      lng = 'en';\n      break;\n    case 'ko':\n      lng = 'ko';\n      break;\n    case 'zhs':\n      lng = 'zh-Hans';\n      break;\n    case 'zht':\n      lng = 'zh-Hant';\n      break;\n  }\n}\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng,\n\n    returnObjects: true,\n    interpolation: {\n      escapeValue: false, // react already safes from xss\n    },\n  });\n\nexport default i18n;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\n\nimport store from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './i18n';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}