{"version":3,"sources":["actions/drag.ts","kageUtils/glyph.ts","args.ts","actions/select.ts","kageUtils/match.ts","kageUtils/connection.ts","kageUtils/transform.ts","actions/editor.ts","callapi.ts","kage.ts","kageUtils/bbx.ts","selectors/draggedGlyph.ts","selectors/submitGlyph.ts","kageUtils/stretchparam.ts","kageUtils/stroketype.ts","reducers/editor.ts","reducers/index.ts","reducers/select.ts","reducers/drag.ts","kageUtils/decompose.ts","store.ts","components/Stroke.tsx","components/Glyph.tsx","components/AreaSelectRect.tsx","components/ControlPoint.tsx","components/SelectionControl.tsx","components/GlyphArea.tsx","components/SelectionInfo.tsx","components/SubmitPreview.tsx","components/EditorControls.tsx","components/PartsList.tsx","components/PartsSearch.tsx","App.tsx","shortcuts.ts","serviceWorker.ts","i18n.ts","index.tsx"],"names":["RectPointPosition","getNumColumns","strokeType","unparseGlyphLine","glyphLine","values","value","slice","partName","join","parseGlyph","glyphStr","split","map","line","glyphLineStr","splitLine","numColumns","i","push","Math","floor","parseGlyphLine","filter","gLine","length","unparseGlyph","glyph","args","URLSearchParams","window","location","hash","actionCreator","actionCreatorFactory","selectActions","selectSingle","selectAddSingle","selectRemoveSingle","selectNone","selectAll","selectDeselected","selectPrev","selectNext","MatchType","dragActions","startAreaSelect","startSelectionDrag","startPointDrag","startResize","mouseMove","mouseUp","updateCTMInv","connectablePairs","position","strokeTypes","shapeTypes","matchConnectablePoint","point","includes","shapeType","getConnectablePoints","result","coord","pointIndex","endPointIndex","listupConnectedPoints","memoizeOne","points","sPoints","lineIndex","sPoint","forEach","dPoint","some","point2","point1","filter1","filter2","glyph1","points1","glyph2","points2","every","index","listupConnectedPointsOfSelection","selection","selectedDescs","applyGlyphLineOperation","tX","tY","applyGlyphPointOperation","pdescs","newGlyph","newValue","moveSelectedGlyphLines","dx","dy","targetDescs","x","round","y","moveSelectedPoint","selectedDesc","targetDesc","resizeSelectedGlyphLines","oldBBX","newBBX","x11","y11","x12","y12","x21","y21","x22","y22","resizeGlyphLine","editorActions","loadedBuhin","loadedStretchParam","changeStrokeType","changeHeadShapeType","changeTailShapeType","changeStretchCoeff","swapWithPrev","swapWithNext","insertPart","undo","redo","paste","copy","cut","delete","decomposeSelected","moveSelected","toggleFreehand","openOptionModal","closeOptionModal","finishEdit","callApi","path","a","fetch","response","ok","Error","text","getSource","name","encodeURIComponent","get","search","query","kage","Kage","waiting","Set","filteredGlyphIsEqual","gLine1","makeGlyphSeparated_","data","kBuhin","has","add","then","source","stretchMatch","exec","params","store","dispatch","catch","err","console","error","loadAbsentBuhin","makeGlyphSeparated","map1","makeGlyphSeparatedFactory","isEqual","makeGlyphSeparatedForSubmit","bbxOfPoints","xs","ys","min","max","getGlyphLineBBX","mergeBBX","getGlyphLinesBBX","glyphLines","reduce","gLines1","gLines2","resizeSelected","selectedGlyphLine","north","west","south","east","southeast","newGlyphLine","draggedGlyphSelector","createSelector","state","dragSelection","dragPoint","resizeSelection","x1","y1","x2","y2","submitGlyphSelector","getStretchPositions","setStretchPositions","positions","sx","sy","tx","ty","normalizeStretchPositions","calcStretchScalar","param","x0","y0","k","abs","headShapeTypes","1","2","3","4","6","7","tailShapeTypes","validStrokeShapeTypes","isValidStrokeShapeTypes","stroke","s0","s1","s2","setGlyphLine","initialState","areaSelectRect","ctmInv","buhinMap","Map","stretchParamMap","freehandMode","showOptionModal","clipboard","reducer","reducerWithInitialState","withHandling","builder","case","concat","index2","_gLine","firstSelected","evt","clientX","clientY","intersections","polygonsSep","gAreaPolygon","array","polygon","gPolygon","polygonInPolygon","polygonIntersectsPolygon","performAreaSelect","newSelection","Array","from","newMap","set","newType","newGLine","oldType","oldNumPoints","newNumPoints","x3","y3","x4","y4","xm","ym","xm1","ym1","xm2","ym2","selectedLine","stretchParam","calcStretchPositions","targetLines","newLines","buhinSource","failedBuhin","strokesArray","getEachStrokes","box","getBox","isStretchEnabled","oldGlyphLine","stretchedX","stretch","minX","maxX","stretchedY","minY","maxY","sx2","sy2","tx2","ty2","px1","py1","px2","py2","revX","revY","decompose","subindex","host","ssl","glyphName","related","edittime","url","toString","href","createStore","StrokeComponent","props","polygons","key","GlyphComponent","nonSelection","_polygons","className","onMouseDown","handleMouseDownDeselectedStroke","Stroke","handleMouseDownSelectedStroke","AreaSelectRect","rect","temp","width","height","getMatchType","none","isOnline","match","online","ControlPoint","handleMouseDown","selectionControlSelector","rectControl","pointControl","selectedStrokes","multiSelect","coords","selectedStroke","matchType","SelectionControl","useSelector","useDispatch","handleMouseDownRectControl","useCallback","stopPropagation","handleMouseDownNorthPoint","handleMouseDownWestPoint","handleMouseDownSouthPoint","handleMouseDownEastPoint","handleMouseDownSoutheastPoint","handleMouseDownPointControls","useMemo","_control","GlyphArea","handleMouseDownCapture","ctm","currentTarget","getScreenCTM","pt","createSVGPoint","ictm","inverse","evtx","evty","matrixTransform","handleMouseDownBackground","shiftKey","ctrlKey","useEffect","handleMouseMove","handleMouseUp","document","addEventListener","removeEventListener","viewBox","onMouseDownCapture","selectedGlyphLineSelector","draggedGlyph","strokeInfoSelector","headShapeType","tailShapeType","validTypes","coordString","partInfoSelector","entityName","aliasMatch","stretchCoeff","otherInfoSelector","selectedStroke_","isMultiple","selectIndexStringSelector","glyphLength","selectedIndexString","sort","b","buttonsDisabledSelector","swapPrevDisabled","swapNextDisabled","selectPrevDisabled","selectNextDisabled","SelectionInfo","strokeInfo","partInfo","otherInfo","selectIndexString","shallowEqual","t","useTranslation","onChange","entity","type","disabled","onClick","SubmitPreview","submitGlyph","EditorControls","pasteDisabled","decomposeDisabled","options","getImageURL","PartsList","handleItemClick","handleItemMouseEnter","handleImageClick","dataset","handleImageMouseEnter","names","alt","title","data-name","src","onMouseEnter","searchSuggestions","initialQuery","QueryTooShortError","PartsSearch","queryInputRef","useRef","useState","searching","setSearching","setNames","setErr","startSearch","reason","handleSearch","current","handleFormSubmit","preventDefault","hoverNameRef","textContent","onSubmit","defaultValue","list","ref","id","suggestion","message","App","useHotkeys","useShortcuts","Boolean","hostname","resources","ja","translation","lng","i18n","use","initReactI18next","init","returnObjects","interpolation","escapeValue","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e3d4533b.chunk.js","sourcesContent":["import actionCreatorFactory from 'typescript-fsa';\n\nexport type CTMInv = (x: number, y: number) => [number, number];\nexport enum RectPointPosition {\n  north,\n  south,\n  east,\n  west,\n  southeast,\n}\n\nconst actionCreator = actionCreatorFactory('EDITOR');\n\nexport const dragActions = {\n  startAreaSelect: actionCreator<React.MouseEvent>('AREA_SELECT_START'),\n  startSelectionDrag: actionCreator<React.MouseEvent>('SELECTION_DRAG_START'),\n  startPointDrag: actionCreator<[React.MouseEvent, number]>('MOVE_POINT_START'),\n  startResize: actionCreator<[React.MouseEvent, RectPointPosition]>('RESIZE_START'),\n\n  mouseMove: actionCreator<MouseEvent>('MOUSE_MOVE'),\n  mouseUp: actionCreator<MouseEvent>('MOUSE_UP'),\n\n  updateCTMInv: actionCreator<CTMInv>('UPDATE_CTMINV'),\n}\n","export interface GlyphLine {\n  value: number[];\n  partName?: string;\n}\n\nexport const getNumColumns = (strokeType: number): number => {\n  switch (strokeType) {\n    case 0:\n    case 1:\n    case 9:\n      return 7;\n    case 2:\n    case 3:\n    case 4:\n      return 9;\n    case 6:\n    case 7:\n    case 99:\n      return 11;\n    default:\n      return 0;\n  }\n};\n\nexport const parseGlyphLine = (glyphLineStr: string): GlyphLine => {\n  const splitLine = glyphLineStr.split(':');\n  const strokeType = +splitLine[0];\n  const numColumns = getNumColumns(strokeType);\n  const value = [];\n  for (let i = 0; i < numColumns; i++) {\n    value.push(Math.floor(+splitLine[i] || 0));\n  }\n  if (value[0] === 99) {\n    const partName = splitLine[7] || '';\n    return { value, partName }\n  }\n  return { value };\n};\n\nexport const unparseGlyphLine = (glyphLine: GlyphLine): string => {\n  const values: (number | string)[] = glyphLine.value.slice();\n  if (values[0] === 99) {\n    values[7] = glyphLine.partName || '';\n  }\n  return values.join(':');\n};\n\nexport const isValidGlyphLine = (glyphLine: GlyphLine): boolean => (\n  glyphLine.value.length !== 0 &&\n  (\n    glyphLine.value[0] !== 0 ||\n    glyphLine.value[1] === 97 || glyphLine.value[1] === 98 || glyphLine.value[1] === 99\n  )\n);\n\n\nexport type Glyph = GlyphLine[];\n\nexport const parseGlyph = (glyphStr: string): Glyph => (\n  glyphStr.split(/[$\\r\\n]+/)\n    .map((line) => parseGlyphLine(line))\n    .filter((gLine) => isValidGlyphLine(gLine))\n);\n\nexport const unparseGlyph = (glyph: Glyph): string => (\n  glyph\n    .map((gLine) => unparseGlyphLine(gLine))\n    .join('$')\n);\n\n\nexport interface PointDescriptor {\n  lineIndex: number;\n  pointIndex: number;\n}\n","const args = new URLSearchParams(window.location.hash.slice(1));\n\nexport default args;\n","import actionCreatorFactory from 'typescript-fsa';\n\nconst actionCreator = actionCreatorFactory('SELECT');\n\nexport const selectActions = {\n  selectSingle: actionCreator<number>('SELECT_SINGLE'),\n  selectAddSingle: actionCreator<number>('SELECT_ADD_SINGLE'),\n  selectRemoveSingle: actionCreator<number>('SELECT_REMOVE_SINGLE'),\n  selectNone: actionCreator('SELECT_NONE'),\n  selectAll: actionCreator('SELECT_ALL'),\n  selectDeselected: actionCreator('SELECT_TOGGLE_ALL'),\n  selectPrev: actionCreator('SELECT_PREV'),\n  selectNext: actionCreator('SELECT_NEXT'),\n};\n","import { Glyph, PointDescriptor, getNumColumns } from './glyph';\n\nexport enum MatchType {\n  none,\n  online,\n  match,\n}\n\nexport const getMatchType = (glyph: Glyph, point: PointDescriptor): MatchType => {\n  const glyphLine = glyph[point.lineIndex];\n\n  const endPointIndex = (getNumColumns(glyphLine.value[0]) - 3) / 2 - 1;\n  if (point.pointIndex !== 0 && point.pointIndex !== endPointIndex) {\n    return MatchType.none;\n  }\n\n  const x = glyphLine.value[3 + point.pointIndex * 2];\n  const y = glyphLine.value[3 + point.pointIndex * 2 + 1];\n  const isOnline = (x1: number, y1: number, x2: number, y2: number): boolean => (\n    (\n      x1 === x2 && // 垂直\n      x1 === x && y1 <= y && y <= y2\n    ) || (\n      y1 === y2 && // 水平\n      y1 === y && x1 <= x && x <= x2\n    )\n  );\n\n  let result = MatchType.none;\n  for (let lineIndex = 0; lineIndex < glyph.length; lineIndex++) {\n    if (point.lineIndex === lineIndex) {\n      continue;\n    }\n    const glyphLine = glyph[lineIndex];\n    if ([0, 9, 99].includes(glyphLine.value[0])) {\n      continue;\n    }\n\n    if (glyphLine.value[3] === x && glyphLine.value[4] === y) {\n      return MatchType.match;\n    }\n    const endPointIndex = (getNumColumns(glyphLine.value[0]) - 3) / 2 - 1;\n    if (\n      glyphLine.value[3 + endPointIndex * 2] === x &&\n      glyphLine.value[3 + endPointIndex * 2 + 1] === y\n    ) {\n      return MatchType.match;\n    }\n\n    switch (glyphLine.value[0]) {\n      case 3:\n      case 4:\n        if (\n          isOnline(glyphLine.value[3], glyphLine.value[4], glyphLine.value[5], glyphLine.value[6]) ||\n          isOnline(glyphLine.value[5], glyphLine.value[6], glyphLine.value[7], glyphLine.value[8])\n        ) {\n          result = MatchType.online;\n        }\n        break;\n      case 1:\n      case 7:\n        if (isOnline(glyphLine.value[3], glyphLine.value[4], glyphLine.value[5], glyphLine.value[6])) {\n          result = MatchType.online;\n        }\n        break;\n    }\n  }\n  return result;\n};\n","import memoizeOne from 'memoize-one';\n\nimport { GlyphLine, Glyph, PointDescriptor, getNumColumns } from './glyph';\n\ninterface ConnectablePoint {\n  position: 'start' | 'end';\n  strokeType: number;\n  shapeType: number;\n  coord: [number, number];\n  pointIndex: number;\n}\n\ninterface ConnectablePointFilter {\n  position: 'start' | 'end';\n  strokeTypes: number[];\n  shapeTypes: number[];\n}\n\nconst connectablePairs: [ConnectablePointFilter, ConnectablePointFilter][] = [\n  [\n    // 左上\n    {\n      position: 'start',\n      strokeTypes: [1],\n      shapeTypes: [2],\n    },\n    {\n      position: 'start',\n      strokeTypes: [1, 2, 3, 4, 6, 7],\n      shapeTypes: [12],\n    },\n  ],\n  [\n    // 左下\n    {\n      position: 'start',\n      strokeTypes: [1],\n      shapeTypes: [2],\n    },\n    {\n      position: 'end',\n      strokeTypes: [1],\n      shapeTypes: [13, 313, 413],\n    },\n  ],\n  [\n    // 右上\n    {\n      position: 'end',\n      strokeTypes: [1],\n      shapeTypes: [2],\n    },\n    {\n      position: 'start',\n      strokeTypes: [1, 2, 3, 4, 6, 7],\n      shapeTypes: [22],\n    },\n  ],\n  [\n    // 右下\n    {\n      position: 'end',\n      strokeTypes: [1],\n      shapeTypes: [2],\n    },\n    {\n      position: 'end',\n      strokeTypes: [1],\n      shapeTypes: [23, 24],\n    },\n  ],\n];\n\nconst matchConnectablePoint = (filter: ConnectablePointFilter, point: ConnectablePoint) => (\n  filter.position === point.position &&\n  filter.strokeTypes.includes(point.strokeType) &&\n  filter.shapeTypes.includes(point.shapeType)\n)\n\nconst isConnectable = (point1: ConnectablePoint, point2: ConnectablePoint) => (\n  point1.coord[0] === point2.coord[0] &&\n  point1.coord[1] === point2.coord[1] &&\n  connectablePairs.some(([filter1, filter2]) => (\n    (matchConnectablePoint(filter1, point1) && matchConnectablePoint(filter2, point2)) ||\n    (matchConnectablePoint(filter2, point1) && matchConnectablePoint(filter1, point2))\n  ))\n);\n\nconst getConnectablePoints = (glyphLine: GlyphLine): ConnectablePoint[] => {\n  const result: ConnectablePoint[] = [];\n  switch (glyphLine.value[0]) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 6:\n    case 7: {\n      result.push({\n        position: 'start',\n        strokeType: glyphLine.value[0],\n        shapeType: glyphLine.value[1],\n        coord: [\n          glyphLine.value[3],\n          glyphLine.value[4],\n        ],\n        pointIndex: 0,\n      });\n      const endPointIndex = (getNumColumns(glyphLine.value[0]) - 3) / 2 - 1;\n      result.push({\n        position: 'end',\n        strokeType: glyphLine.value[0],\n        shapeType: glyphLine.value[2],\n        coord: [\n          glyphLine.value[3 + endPointIndex * 2],\n          glyphLine.value[3 + endPointIndex * 2 + 1],\n        ],\n        pointIndex: endPointIndex,\n      });\n      break;\n    }\n  }\n  return result;\n};\n\nexport const listupConnectedPoints = memoizeOne((glyph: Glyph, points: PointDescriptor[]): PointDescriptor[] => {\n  const sPoints: ConnectablePoint[] = [];\n  for (const { lineIndex, pointIndex } of points) {\n    for (const sPoint of getConnectablePoints(glyph[lineIndex])) {\n      if (sPoint.pointIndex === pointIndex) {\n        sPoints.push(sPoint);\n      }\n    }\n  }\n  const result: PointDescriptor[] = [];\n  glyph.forEach((glyphLine, lineIndex) => {\n    for (const dPoint of getConnectablePoints(glyphLine)) {\n      if (sPoints.some((sPoint) => isConnectable(sPoint, dPoint))) {\n        result.push({\n          lineIndex,\n          pointIndex: dPoint.pointIndex,\n        });\n      }\n    }\n  });\n  return result;\n}, ([glyph1, points1], [glyph2, points2]) => (\n  glyph1 === glyph2 &&\n  points1.length === points2.length &&\n  points1.every((point1, index) => (\n    point1.lineIndex === points2[index].lineIndex &&\n    point1.pointIndex === points2[index].pointIndex\n  ))\n));\n\nexport const listupConnectedPointsOfSelection = memoizeOne((glyph: Glyph, selection: number[]): PointDescriptor[] => {\n  const selectedDescs: PointDescriptor[] = [];\n  for (const lineIndex of selection) {\n    const glyphLine = glyph[lineIndex];\n    selectedDescs.push({ lineIndex, pointIndex: 0 });\n    selectedDescs.push({ lineIndex, pointIndex: (getNumColumns(glyphLine.value[0]) - 3) / 2 - 1 });\n  }\n  return listupConnectedPoints(glyph, selectedDescs)\n    .filter(({ lineIndex }) => !selection.includes(lineIndex));\n});\n","import { GlyphLine, Glyph, PointDescriptor } from './glyph';\n\nimport { BBX } from './bbx';\nimport { listupConnectedPoints, listupConnectedPointsOfSelection } from './connection';\n\nexport const applyGlyphLineOperation = (glyphLine: GlyphLine, tX: (x: number) => number, tY: (y: number) => number): GlyphLine => {\n  switch (glyphLine.value[0]) {\n    case 99: {\n      const value = glyphLine.value.slice();\n      value[3] = tX(value[3]);\n      value[4] = tY(value[4]);\n      value[5] = tX(value[5]);\n      value[6] = tY(value[6]);\n      return { value, partName: glyphLine.partName };\n    }\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 6:\n    case 7:\n    case 9: {\n      const value = glyphLine.value.slice();\n      for (let i = 3; i + 2 <= value.length; i += 2) {\n        value[i] = tX(value[i]);\n        value[i + 1] = tY(value[i + 1]);\n      }\n      return { value };\n    }\n    default:\n      return glyphLine;\n  }\n}\n\nexport const applyGlyphPointOperation = (glyph: Glyph, pdescs: PointDescriptor[], tX: (x: number) => number, tY: (y: number) => number): Glyph => {\n  if (pdescs.length === 0) {\n    return glyph;\n  }\n  const newGlyph = glyph.slice();\n  for (const { lineIndex, pointIndex } of pdescs) {\n    const glyphLine = newGlyph[lineIndex];\n    const newValue = glyphLine.value.slice();\n    newValue[3 + pointIndex * 2] = tX(newValue[3 + pointIndex * 2]);\n    newValue[3 + pointIndex * 2 + 1] = tY(newValue[3 + pointIndex * 2 + 1]);\n    newGlyph[lineIndex] = {\n      ...glyphLine,\n      value: newValue,\n    };\n  }\n  return newGlyph;\n};\n\n\nexport const moveSelectedGlyphLines = (glyph: Glyph, selection: number[], dx: number, dy: number): Glyph => {\n  if (selection.length === 0) {\n    return glyph;\n  }\n  const targetDescs = listupConnectedPointsOfSelection(glyph, selection);\n\n  const tX = (x: number) => Math.round(x + dx);\n  const tY = (y: number) => Math.round(y + dy);\n  glyph = glyph.map((glyphLine, index) => selection.includes(index)\n    ? applyGlyphLineOperation(glyphLine, tX, tY)\n    : glyphLine\n  );\n  glyph = applyGlyphPointOperation(glyph, targetDescs, tX, tY);\n  return glyph;\n};\n\nexport const moveSelectedPoint = (glyph: Glyph, selection: number[], pointIndex: number, dx: number, dy: number): Glyph => {\n  if (selection.length === 0) {\n    return glyph;\n  }\n  const lineIndex = selection[0];\n  const selectedDesc: PointDescriptor = { lineIndex, pointIndex };\n  const targetDescs = listupConnectedPoints(glyph, [selectedDesc])\n    .filter((targetDesc) => targetDesc.lineIndex !== lineIndex);\n  targetDescs.push(selectedDesc);\n\n  const tX = (x: number) => Math.round(x + dx);\n  const tY = (y: number) => Math.round(y + dy);\n  glyph = applyGlyphPointOperation(glyph, targetDescs, tX, tY);\n  return glyph;\n};\n\nexport const resizeGlyphLine = (glyphLine: GlyphLine, oldBBX: BBX, newBBX: BBX): GlyphLine => {\n  const [x11, y11, x12, y12] = oldBBX;\n  const [x21, y21, x22, y22] = newBBX;\n  const tX = (x: number) => Math.round(x21 + (x - x11) * (x22 - x21) / (x12 - x11));\n  const tY = (y: number) => Math.round(y21 + (y - y11) * (y22 - y21) / (y12 - y11));\n  return applyGlyphLineOperation(glyphLine, tX, tY);\n};\n\nexport const resizeSelectedGlyphLines = (glyph: Glyph, selection: number[], oldBBX: BBX, newBBX: BBX): Glyph => {\n  return glyph.map((glyphLine, index) => selection.includes(index)\n    ? resizeGlyphLine(glyphLine, oldBBX, newBBX)\n    : glyphLine\n  );\n};\n","import actionCreatorFactory from 'typescript-fsa';\n\nimport { StretchParam } from '../kageUtils/stretchparam';\n\nconst actionCreator = actionCreatorFactory('EDITOR');\n\nexport const editorActions = {\n  loadedBuhin: actionCreator<[string, string]>('LOAD_BUHIN_DATA'),\n  loadedStretchParam: actionCreator<[string, StretchParam]>('LOAD_STRETCH_PARAM'),\n\n  changeStrokeType: actionCreator<number>('CHANGE_STROKE_TYPE'),\n  changeHeadShapeType: actionCreator<number>('CHANGE_HEAD_SHAPE_TYPE'),\n  changeTailShapeType: actionCreator<number>('CHANGE_TAIL_SHAPE_TYPE'),\n  changeStretchCoeff: actionCreator<number>('CHANGE_STRETCH_COEFF'),\n\n  swapWithPrev: actionCreator('SWAP_WITH_PREV'),\n  swapWithNext: actionCreator('SWAP_WITH_NEXT'),\n\n  insertPart: actionCreator<string>('ADD_PART'),\n\n  undo: actionCreator('UNDO'),\n  redo: actionCreator('REDO'),\n\n  paste: actionCreator('PASTE'),\n  copy: actionCreator('COPY_SELECTION'),\n  cut: actionCreator('CUT_SELECTION'),\n  delete: actionCreator('DELETE_SELECTION'),\n  decomposeSelected: actionCreator('DECOMPOSE_SELECTION'),\n  moveSelected: actionCreator<[number, number]>('MOVE_SELECTED'),\n\n  toggleFreehand: actionCreator('TOGGLE_FREEHAND_MODE'),\n\n  openOptionModal: actionCreator('OPEN_OPTION_MODAL'),\n  closeOptionModal: actionCreator('CLOSE_OPTION_MODAL'),\n\n  finishEdit: actionCreator('FINISH_EDIT'),\n};\n","// The temporary reverse proxy which adds 'Access-Control-Allow-Origin: *' header.\n// This header is required for cross-origin requests.\nconst apiUrlPrefix = 'https://asia-northeast1-ku6goma.cloudfunctions.net/gwproxy';\n\nconst callApi = async (path: string) => {\n  const response = await fetch(apiUrlPrefix + path);\n  if (!response.ok) {\n    throw new Error('API error occurred');\n  }\n  return new URLSearchParams(await response.text());\n};\n\nexport const getSource = async (name: string) => {\n  const result = await callApi(`/get_source.cgi?name=${encodeURIComponent(name)}`);\n  return result.get('data');\n};\n\nexport const search = async (query: string) => {\n  const result = await callApi(`/search4ge.cgi?query=${encodeURIComponent(query)}`);\n  return result.get('data')!;\n};\n\nexport const getCandidate = async (name: string) => {\n  const result = await callApi(`/get_candidate.cgi?name=${encodeURIComponent(name)}`);\n  return result.get('data')!;\n};\n","import memoizeOne from 'memoize-one';\n\nimport { Kage, Polygons } from '@kurgm/kage-engine';\nimport { Glyph, unparseGlyphLine } from './kageUtils/glyph';\nimport { StretchParam } from './kageUtils/stretchparam';\n\nimport store from './store';\nimport { editorActions } from './actions/editor';\n\nimport { getSource } from './callapi';\n\nexport const kage = new Kage();\n\nlet waiting = new Set<string>();\nconst loadAbsentBuhin = (name: string) => {\n  if (waiting.has(name)) {\n    return;\n  }\n  waiting.add(name);\n  getSource(name)\n    .then((source) => {\n      if (typeof source !== 'string') {\n        throw new Error(`failed to get buhin source of ${name}`);\n      }\n      const stretchMatch = /^0:1:0:(-?\\d+):(-?\\d+):(-?\\d+):(-?\\d+)(?=$|\\$)/.exec(source);\n      if (stretchMatch) {\n        const params: StretchParam = [\n          +stretchMatch[1] || 0,\n          +stretchMatch[2] || 0,\n          +stretchMatch[3] || 0,\n          +stretchMatch[4] || 0,\n        ];\n        store.dispatch(editorActions.loadedStretchParam([name, params]));\n      }\n      store.dispatch(editorActions.loadedBuhin([name, source]));\n      waiting.delete(name);\n    })\n    .catch((err) => console.error(err));\n};\n\nconst filteredGlyphIsEqual = (glyph1: Glyph, glyph2: Glyph) => (\n  glyph1.length === glyph2.length &&\n  glyph1.every((gLine1, index) => (\n    gLine1 === glyph2[index]\n  ))\n);\n\nconst makeGlyphSeparated_ = memoizeOne((glyph: Glyph, map: Map<string, string>): Polygons[] => {\n  const data = glyph.map(unparseGlyphLine);\n  kage.kBuhin.search = (name) => {\n    const result = map.get(name);\n    if (typeof result === 'undefined') {\n      loadAbsentBuhin(name);\n      return '';\n    }\n    return result;\n  };\n  const result = kage.makeGlyphSeparated(data);\n  return result;\n}, ([glyph1, map1], [glyph2, map2]) => (\n  map1 === map2 &&\n  filteredGlyphIsEqual(glyph1, glyph2)\n));\n\nconst makeGlyphSeparatedFactory = (\n  isEqual?: (newArgs: Parameters<typeof makeGlyphSeparated_>, lastArgs: Parameters<typeof makeGlyphSeparated_>) => boolean\n) => memoizeOne((glyph: Glyph, map: Map<string, string>): Polygons[] => {\n  return makeGlyphSeparated_(glyph, map);\n}, isEqual);\n\nexport const makeGlyphSeparated = makeGlyphSeparatedFactory();\nexport const makeGlyphSeparatedForSubmit = makeGlyphSeparatedFactory(\n  ([glyph1, map1], [glyph2, map2]) => (\n    map1 === map2 &&\n    filteredGlyphIsEqual(glyph1, glyph2)\n  )\n);\n","import memoizeOne from 'memoize-one';\n\nimport { GlyphLine } from './glyph';\n\nexport type BBX = [number, number, number, number];\n\nexport const bbxOfPoints = (points: [number, number][]): BBX => {\n  const xs = points.map(([x]) => x);\n  const ys = points.map(([, y]) => y);\n  return [\n    Math.min(...xs),\n    Math.min(...ys),\n    Math.max(...xs),\n    Math.max(...ys),\n  ];\n};\n\nexport const getGlyphLineBBX = (glyphLine: GlyphLine): BBX => {\n  switch (glyphLine.value[0]) {\n    case 99:\n      return bbxOfPoints([\n        [glyphLine.value[3], glyphLine.value[4]],\n        [glyphLine.value[5], glyphLine.value[6]],\n      ]);\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 6:\n    case 7:\n    case 9: {\n      const points: [number, number][] = [];\n      for (let i = 3; i + 2 <= glyphLine.value.length; i += 2) {\n        points.push([glyphLine.value[i], glyphLine.value[i + 1]]);\n      }\n      return bbxOfPoints(points);\n    }\n    default:\n      return bbxOfPoints([]);\n  }\n}\n\nexport const mergeBBX = ([x11, y11, x12, y12]: BBX, [x21, y21, x22, y22]: BBX): BBX => [\n  Math.min(x11, x21),\n  Math.min(y11, y21),\n  Math.max(x12, x22),\n  Math.max(y12, y22),\n];\n\nexport const getGlyphLinesBBX = memoizeOne((glyphLines: GlyphLine[]): BBX => {\n  return glyphLines.map(getGlyphLineBBX).reduce(mergeBBX, bbxOfPoints([]));\n}, ([gLines1], [gLines2]) => (\n  gLines1.length === gLines2.length &&\n  gLines1.every((gLine1, index) => gLine1 === gLines2[index])\n));\n","import { createSelector } from 'reselect';\n\nimport { RectPointPosition } from '../actions/drag';\n\nimport { AppState } from '../reducers';\n\nimport { Glyph, GlyphLine } from '../kageUtils/glyph';\nimport { getGlyphLinesBBX } from '../kageUtils/bbx';\nimport { moveSelectedGlyphLines, moveSelectedPoint, resizeSelectedGlyphLines } from '../kageUtils/transform';\n\nexport const resizeSelected = (glyph: Glyph, selection: number[], position: RectPointPosition, dx: number, dy: number): Glyph => {\n  if (selection.length === 1) {\n    const selectedGlyphLine = glyph[selection[0]];\n    switch (selectedGlyphLine.value[0]) {\n      case 0:\n      case 9:\n      case 99: {\n        const newValue = selectedGlyphLine.value.slice();\n        switch (position) {\n          case RectPointPosition.north:\n            newValue[4] += dy;\n            break;\n          case RectPointPosition.west:\n            newValue[3] += dx;\n            break;\n          case RectPointPosition.south:\n            newValue[6] += dy;\n            break;\n          case RectPointPosition.east:\n            newValue[5] += dx;\n            break;\n          case RectPointPosition.southeast:\n            newValue[5] += dx;\n            newValue[6] += dy;\n            break;\n          default:\n            // exhaustive?\n            ((_x: never) => { })(position);\n        }\n        const newGlyphLine: GlyphLine = selectedGlyphLine.value[0] === 99\n          ? { value: newValue, partName: selectedGlyphLine.partName }\n          : { value: newValue };\n        return glyph.map((glyphLine, index) => index === selection[0] ? newGlyphLine : glyphLine);\n      }\n    }\n  }\n  const minSize = 20;\n  const oldBBX = getGlyphLinesBBX(selection.map((index) => glyph[index]));\n  const newBBX = oldBBX.slice() as typeof oldBBX;\n  switch (position) {\n    case RectPointPosition.north:\n      newBBX[1] = Math.min(newBBX[1] + dy, newBBX[3] - minSize);\n      break;\n    case RectPointPosition.west:\n      newBBX[0] = Math.min(newBBX[0] + dx, newBBX[2] - minSize);\n      break;\n    case RectPointPosition.south:\n      newBBX[3] = Math.max(newBBX[3] + dy, newBBX[1] + minSize);\n      break;\n    case RectPointPosition.east:\n      newBBX[2] = Math.max(newBBX[2] + dx, newBBX[0] + minSize);\n      break;\n    case RectPointPosition.southeast:\n      newBBX[2] = Math.max(newBBX[2] + dx, newBBX[0] + minSize);\n      newBBX[3] = Math.max(newBBX[3] + dy, newBBX[1] + minSize);\n      break;\n    default:\n      // exhaustive?\n      ((_x: never) => { })(position);\n  }\n  return resizeSelectedGlyphLines(glyph, selection, oldBBX, newBBX);\n};\n\nexport const draggedGlyphSelector = createSelector([\n  (state: AppState) => state.glyph,\n  (state: AppState) => state.selection,\n  (state: AppState) => state.dragSelection,\n  (state: AppState) => state.dragPoint,\n  (state: AppState) => state.resizeSelection,\n], (glyph, selection, dragSelection, dragPoint, resizeSelection) => {\n  if (dragSelection) {\n    const [x1, y1, x2, y2] = dragSelection;\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    glyph = moveSelectedGlyphLines(glyph, selection, dx, dy);\n  } else if (dragPoint) {\n    const [pointIndex, [x1, y1, x2, y2]] = dragPoint;\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    glyph = moveSelectedPoint(glyph, selection, pointIndex, dx, dy);\n  } else if (resizeSelection) {\n    const [position, [x1, y1, x2, y2]] = resizeSelection;\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    glyph = resizeSelected(glyph, selection, position, dx, dy);\n  };\n  return glyph;\n});\n","import { createSelector } from \"reselect\";\n\nimport { Glyph } from \"../kageUtils/glyph\";\nimport { getGlyphLineBBX } from \"../kageUtils/bbx\";\n\nimport { draggedGlyphSelector } from \"./draggedGlyph\";\n\nexport const submitGlyphSelector = createSelector([\n  draggedGlyphSelector,\n], (glyph: Glyph): Glyph => {\n  return glyph.filter((glyphLine) => getGlyphLineBBX(glyphLine)[0] < 200);\n});\n","import { GlyphLine } from './glyph';\n\nexport type StretchParam = [number, number, number, number];\nexport type StretchPositions = [number, number, number, number];\n\nexport const getStretchPositions = (glyphLine: GlyphLine): StretchPositions | null => {\n  if (glyphLine.value[0] !== 99) {\n    return null;\n  }\n  const sx = glyphLine.value[9];\n  const sy = glyphLine.value[10];\n  const tx = glyphLine.value[1];\n  const ty = glyphLine.value[2];\n  return [sx, sy, tx, ty];\n};\n\nexport const setStretchPositions = (glyphLine: GlyphLine, positions: StretchPositions): GlyphLine => {\n  if (glyphLine.value[0] !== 99) {\n    return glyphLine;\n  }\n  const [sx, sy, tx, ty] = positions;\n\n  const newValue = glyphLine.value.slice();\n  newValue[9] = sx;\n  newValue[10] = sy;\n  newValue[1] = tx;\n  newValue[2] = ty;\n  return { value: newValue, partName: glyphLine.partName };\n};\n\nexport const normalizeStretchPositions = (positions: StretchPositions): StretchPositions => {\n  let [sx, sy, tx, ty] = positions;\n  if (tx <= 100) {\n    tx += 200;\n    sx = sy = 0;\n  }\n  return [sx, sy, tx, ty];\n};\n\nexport const calcStretchPositions = (param: StretchParam, k: number): StretchPositions => {\n  const [x0, y0, x1, y1] = param;\n  return [\n    x0 - 100,\n    y0 - 100,\n    x0 + (x1 - x0) * k / 20 + 100,\n    y0 + (y1 - y0) * k / 20 - 100,\n  ];\n};\n\nconst clampStretchScalar = (k: number): number => Math.max(-10, Math.min(10, k));\n\nexport const calcStretchScalar = (param: StretchParam, positions: StretchPositions): number => {\n  const [x0, y0, x1, y1] = param;\n  if (x0 === x1 && y0 === y1) {\n    return 0;\n  }\n  const [sx, sy, tx, ty] = normalizeStretchPositions(positions);\n  if (sx === tx - 200 && sy === ty) {\n    return 0;\n  }\n  return clampStretchScalar(Math.round(\n    Math.abs(x0 - x1) > Math.abs(y0 - y1)\n      ? (tx - 100 - x0) / (x1 - x0) * 20\n      : (ty + 100 - y0) / (y1 - y0) * 20\n  )) || 0;\n}\n","import memoizeOne from 'memoize-one';\n\nimport { GlyphLine, getNumColumns } from './glyph';\n\nexport const strokeTypes = [1, 2, 3, 4, 6, 7];\n\nexport const headShapeTypes: Record<number, number[]> = {\n  1: [0, 2, 32, 12, 22],\n  2: [0, 32, 12, 22, 7],\n  3: [0, 32, 12, 22],\n  4: [0, 22],\n  6: [0, 32, 12, 22, 7],\n  7: [0, 32, 12, 22],\n};\n\nexport const tailShapeTypes: Record<number, number[]> = {\n  1: [0, 2, 32, 13, 23, 4, 313, 413, 24],\n  2: [7, 0, 8, 4, 5],\n  3: [0, 5],\n  4: [0, 5],\n  6: [7, 0, 8, 4, 5],\n  7: [7],\n};\n\nexport const changeStrokeType = (glyphLine: GlyphLine, newType: number): GlyphLine => {\n  const oldType = glyphLine.value[0];\n  if (!strokeTypes.includes(oldType) || !strokeTypes.includes(newType)) {\n    return glyphLine;\n  }\n  const newGlyphLine = {\n    value: glyphLine.value.slice(),\n  };\n\n  newGlyphLine.value[0] = newType;\n\n  if (!headShapeTypes[newType].includes(newGlyphLine.value[1])) {\n    newGlyphLine.value[1] = headShapeTypes[newType][0];\n  }\n  if (!tailShapeTypes[newType].includes(newGlyphLine.value[2])) {\n    newGlyphLine.value[2] = tailShapeTypes[newType][0];\n  }\n\n  const oldNumPoints = (getNumColumns(oldType) - 3) / 2;\n  const newNumPoints = (getNumColumns(newType) - 3) / 2;\n  if (oldNumPoints === newNumPoints) {\n    return newGlyphLine;\n  }\n  if (oldNumPoints === 2 && newNumPoints === 3) {\n    const x1 = newGlyphLine.value[3];\n    const y1 = newGlyphLine.value[4];\n    const x3 = newGlyphLine.value[5];\n    const y3 = newGlyphLine.value[6];\n\n    const x2 = Math.round((x1 + x3) / 2);\n    const y2 = Math.round((y1 + y3) / 2);\n    newGlyphLine.value = newGlyphLine.value.slice(0, 3).concat(\n      [x1, y1, x2, y2, x3, y3]\n    );\n    return newGlyphLine;\n  }\n  if (oldNumPoints === 2 && newNumPoints === 4) {\n    const x1 = newGlyphLine.value[3];\n    const y1 = newGlyphLine.value[4];\n    const x4 = newGlyphLine.value[5];\n    const y4 = newGlyphLine.value[6];\n\n    const x2 = Math.round((2 * x1 + x4) / 3);\n    const y2 = Math.round((2 * y1 + y4) / 3);\n    const x3 = Math.round((x1 + 2 * x4) / 3);\n    const y3 = Math.round((y1 + 2 * y4) / 3);\n    newGlyphLine.value = newGlyphLine.value.slice(0, 3).concat(\n      [x1, y1, x2, y2, x3, y3, x4, y4]\n    );\n    return newGlyphLine;\n  }\n  if (oldNumPoints === 3 && newNumPoints === 2) {\n    const x1 = newGlyphLine.value[3];\n    const y1 = newGlyphLine.value[4];\n    const x2 = newGlyphLine.value[7];\n    const y2 = newGlyphLine.value[8];\n    newGlyphLine.value = newGlyphLine.value.slice(0, 3).concat(\n      [x1, y1, x2, y2]\n    );\n    return newGlyphLine;\n  }\n  if (oldNumPoints === 3 && newNumPoints === 4) {\n    const x1 = newGlyphLine.value[3];\n    const y1 = newGlyphLine.value[4];\n    const xm = newGlyphLine.value[5];\n    const ym = newGlyphLine.value[6];\n    const x4 = newGlyphLine.value[7];\n    const y4 = newGlyphLine.value[8];\n\n    const x2 = Math.round((x1 + 2 * xm) / 3);\n    const y2 = Math.round((y1 + 2 * ym) / 3);\n    const x3 = Math.round((x4 + 2 * xm) / 3);\n    const y3 = Math.round((y4 + 2 * ym) / 3);\n    newGlyphLine.value = newGlyphLine.value.slice(0, 3).concat(\n      [x1, y1, x2, y2, x3, y3, x4, y4]\n    );\n    return newGlyphLine;\n  }\n  if (oldNumPoints === 4 && newNumPoints === 2) {\n    const x1 = newGlyphLine.value[3];\n    const y1 = newGlyphLine.value[4];\n    const x2 = newGlyphLine.value[9];\n    const y2 = newGlyphLine.value[10];\n    newGlyphLine.value = newGlyphLine.value.slice(0, 3).concat(\n      [x1, y1, x2, y2]\n    );\n    return newGlyphLine;\n  }\n  if (oldNumPoints === 4 && newNumPoints === 3) {\n    const x1 = newGlyphLine.value[3];\n    const y1 = newGlyphLine.value[4];\n    const xm1 = newGlyphLine.value[5];\n    const ym1 = newGlyphLine.value[6];\n    const xm2 = newGlyphLine.value[7];\n    const ym2 = newGlyphLine.value[8];\n    const x3 = newGlyphLine.value[9];\n    const y3 = newGlyphLine.value[10];\n\n    const x2 = Math.round((xm1 + xm2) / 2);\n    const y2 = Math.round((ym1 + ym2) / 2);\n    newGlyphLine.value = newGlyphLine.value.slice(0, 3).concat(\n      [x1, y1, x2, y2, x3, y3]\n    );\n    return newGlyphLine;\n  }\n  return newGlyphLine;\n};\n\nconst validStrokeShapeTypes: [number, number, number][] = [\n  [1, 0, 0],\n  [1, 0, 2],\n  [1, 0, 32],\n  [1, 0, 13],\n  [1, 0, 23],\n  [1, 0, 4],\n  [1, 0, 313],\n  [1, 0, 413],\n  [1, 0, 24],\n  [1, 2, 0],\n  [1, 2, 2],\n  [1, 32, 0],\n  [1, 32, 32],\n  [1, 32, 13],\n  [1, 32, 23],\n  [1, 32, 4],\n  [1, 32, 313],\n  [1, 32, 413],\n  [1, 32, 24],\n  [1, 12, 0],\n  [1, 12, 32],\n  [1, 12, 13],\n  [1, 12, 23],\n  [1, 12, 313],\n  [1, 12, 413],\n  [1, 12, 24],\n  [1, 22, 0],\n  [1, 22, 32],\n  [1, 22, 13],\n  [1, 22, 23],\n  [1, 22, 4],\n  [1, 22, 313],\n  [1, 22, 413],\n  [1, 22, 24],\n  [2, 0, 7],\n  [2, 0, 5],\n  [2, 32, 7],\n  [2, 32, 4],\n  [2, 32, 5],\n  [2, 12, 7],\n  [2, 22, 7],\n  [2, 22, 4],\n  [2, 22, 5],\n  [2, 7, 0],\n  [2, 7, 8],\n  [2, 7, 4],\n  [3, 0, 0],\n  [3, 0, 5],\n  [3, 32, 0],\n  [3, 32, 5],\n  [3, 12, 0],\n  [3, 12, 5],\n  [3, 22, 0],\n  [3, 22, 5],\n  [4, 0, 0],\n  [4, 0, 5],\n  [4, 22, 0],\n  [4, 22, 5],\n  [6, 0, 7],\n  [6, 0, 5],\n  [6, 32, 7],\n  [6, 32, 4],\n  [6, 32, 5],\n  [6, 12, 7],\n  [6, 22, 7],\n  [6, 22, 4],\n  [6, 22, 5],\n  [6, 7, 0],\n  [6, 7, 8],\n  [6, 7, 4],\n  [7, 0, 7],\n  [7, 32, 7],\n  [7, 12, 7],\n  [7, 22, 7],\n];\n\nexport const isValidStrokeShapeTypes = memoizeOne((stroke: GlyphLine) => {\n  if (!strokeTypes.includes(stroke.value[0])) {\n    return true;\n  }\n\n  return validStrokeShapeTypes.some(([s0, s1, s2]) => (\n    s0 === stroke.value[0] &&\n    s1 === stroke.value[1] &&\n    s2 === stroke.value[2]\n  ));\n});\n","import { ReducerBuilder } from 'typescript-fsa-reducers';\n\nimport { editorActions } from '../actions/editor';\nimport { submitGlyphSelector } from '../selectors/submitGlyph';\nimport args from '../args';\n\nimport { Glyph, GlyphLine, unparseGlyph } from '../kageUtils/glyph';\nimport { getGlyphLinesBBX } from '../kageUtils/bbx';\nimport { decompose } from '../kageUtils/decompose';\nimport { calcStretchPositions, setStretchPositions } from '../kageUtils/stretchparam';\nimport { changeStrokeType } from '../kageUtils/stroketype';\nimport { applyGlyphLineOperation, moveSelectedGlyphLines } from '../kageUtils/transform';\n\nimport { AppState } from '.';\n\nconst setGlyphLine = (glyph: Glyph, index: number, glyphLine: GlyphLine): Glyph => {\n  const newGlyph = glyph.slice();\n  newGlyph[index] = glyphLine;\n  return newGlyph;\n};\n\nexport default (builder: ReducerBuilder<AppState>) => builder\n  .case(editorActions.loadedBuhin, (state, [name, data]) => {\n    const newMap = new Map(state.buhinMap);\n    newMap.set(name, data);\n    return {\n      ...state,\n      buhinMap: newMap,\n    };\n  })\n  .case(editorActions.loadedStretchParam, (state, [name, param]) => {\n    const newMap = new Map(state.stretchParamMap);\n    newMap.set(name, param);\n    return {\n      ...state,\n      stretchParamMap: newMap,\n    }\n  })\n\n  .case(editorActions.changeStrokeType, (state, newType) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    const newGLine = changeStrokeType(state.glyph[lineIndex], newType);\n    return {\n      ...state,\n      glyph: setGlyphLine(state.glyph, lineIndex, newGLine),\n    }\n  })\n  .case(editorActions.changeHeadShapeType, (state, newType) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    const newGLine = {\n      ...state.glyph[lineIndex],\n      value: state.glyph[lineIndex].value.slice(),\n    };\n    newGLine.value[1] = newType;\n    return {\n      ...state,\n      glyph: setGlyphLine(state.glyph, lineIndex, newGLine),\n    };\n  })\n  .case(editorActions.changeTailShapeType, (state, newType) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    const newGLine = {\n      ...state.glyph[lineIndex],\n      value: state.glyph[lineIndex].value.slice(),\n    };\n    newGLine.value[2] = newType;\n    return {\n      ...state,\n      glyph: setGlyphLine(state.glyph, lineIndex, newGLine),\n    };\n  })\n  .case(editorActions.changeStretchCoeff, (state, value) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    const selectedLine = state.glyph[lineIndex];\n    if (!selectedLine.partName) {\n      return state;\n    }\n    const stretchParam = state.stretchParamMap.get(selectedLine.partName);\n    if (!stretchParam) {\n      return state;\n    }\n    const newGLine = setStretchPositions(\n      state.glyph[lineIndex],\n      calcStretchPositions(stretchParam, value)\n    );\n    return {\n      ...state,\n      glyph: setGlyphLine(state.glyph, lineIndex, newGLine),\n    };\n  })\n\n  .case(editorActions.swapWithPrev, (state) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    if (lineIndex === 0) {\n      return state;\n    }\n    const newGlyph = state.glyph.slice();\n    newGlyph[lineIndex - 1] = state.glyph[lineIndex];\n    newGlyph[lineIndex] = state.glyph[lineIndex - 1];\n    return {\n      ...state,\n      glyph: newGlyph,\n      selection: [lineIndex - 1],\n    };\n  })\n  .case(editorActions.swapWithNext, (state) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    if (lineIndex === state.glyph.length - 1) {\n      return state;\n    }\n    const newGlyph = state.glyph.slice();\n    newGlyph[lineIndex + 1] = state.glyph[lineIndex];\n    newGlyph[lineIndex] = state.glyph[lineIndex + 1];\n    return {\n      ...state,\n      glyph: newGlyph,\n      selection: [lineIndex + 1],\n    };\n  })\n\n  .case(editorActions.insertPart, (state, partName) => ({\n    ...state,\n    glyph: state.glyph.concat([{\n      value: [99, 0, 0, 0, 0, 200, 200, 0, 0, 0],\n      partName,\n    }]),\n    selection: [state.glyph.length],\n  }))\n\n  .case(editorActions.undo, (state) => state) // TODO\n  .case(editorActions.redo, (state) => state) // TODO\n\n  .case(editorActions.paste, (state) => ({\n    ...state,\n    glyph: state.glyph.concat(state.clipboard),\n    selection: state.clipboard.map((_gLine, index) => state.glyph.length + index),\n  }))\n  .case(editorActions.copy, (state) => {\n    const targetLines = state.selection.map((index) => state.glyph[index]);\n    const [x1, y1] = getGlyphLinesBBX(targetLines);\n    const tX = (x: number) => 230 + x - x1;\n    const tY = (y: number) => 20 + y - y1;\n    return {\n      ...state,\n      clipboard: state.selection.map((index) => (\n        applyGlyphLineOperation(state.glyph[index], tX, tY)\n      )),\n    };\n  })\n  .case(editorActions.cut, (state) => ({\n    ...state,\n    glyph: state.glyph.filter((_gLine, index) => !state.selection.includes(index)),\n    clipboard: state.selection.map((index) => state.glyph[index]),\n    selection: [],\n  }))\n  .case(editorActions.delete, (state) => ({\n    ...state,\n    glyph: state.glyph.filter((_gLine, index) => !state.selection.includes(index)),\n    selection: [],\n  }))\n\n  .case(editorActions.decomposeSelected, (state) => {\n    let newGlyph: Glyph = [];\n    let newSelection: number[] = [];\n    state.glyph.forEach((gLine, index) => {\n      if (!state.selection.includes(index)) {\n        newGlyph.push(gLine);\n        return;\n      }\n      const newLines = decompose(gLine, state.buhinMap);\n      newSelection = newSelection.concat(\n        newLines.map((_gLine, subindex) => newGlyph.length + subindex)\n      );\n      newGlyph = newGlyph.concat(newLines);\n    });\n    return {\n      ...state,\n      glyph: newGlyph,\n      selection: newSelection,\n    };\n  })\n  .case(editorActions.moveSelected, (state, [dx, dy]) => ({\n    ...state,\n    glyph: moveSelectedGlyphLines(state.glyph, state.selection, dx, dy),\n  }))\n\n  .case(editorActions.toggleFreehand, (state) => ({\n    ...state,\n    selection: state.freehandMode ? state.selection : [],\n    freehandMode: !state.freehandMode,\n  }))\n\n  .case(editorActions.openOptionModal, (state) => ({\n    ...state,\n    showOptionModal: true,\n  }))\n  .case(editorActions.closeOptionModal, (state) => ({\n    ...state,\n    showOptionModal: false,\n  }))\n\n  .case(editorActions.finishEdit, (state) => {\n    let host = args.get('host');\n    const ssl = args.get('ssl') !== 'false';\n    const glyphName = args.get('name');\n    const related = args.get('related');\n    const edittime = args.get('edittime');\n\n    if (!host || ![\n      'glyphwiki.org',\n      'en.glyphwiki.org',\n      'ko.glyphwiki.org',\n      'zhs.glyphwiki.org',\n      'zht.glyphwiki.org',\n    ].includes(host)) {\n      host = 'glyphwiki.org';\n    }\n\n    const params = new URLSearchParams();\n    params.set('action', 'preview');\n    params.set('textbox', unparseGlyph(submitGlyphSelector(state)));\n    params.set('related', related || 'u3013');\n    if (edittime) {\n      params.set('edittime', edittime);\n    }\n    const url = `${ssl ? 'https' : 'http'}://${host}/wiki/${glyphName || 'sandbox'}?` + params.toString();\n    window.location.href = url;\n\n    return state;\n  });\n","import { reducerWithInitialState } from 'typescript-fsa-reducers';\n\nimport { RectPointPosition, CTMInv } from '../actions/drag';\n\nimport { GlyphLine, Glyph, parseGlyph } from '../kageUtils/glyph';\nimport { StretchParam } from '../kageUtils/stretchparam';\nimport args from '../args';\n\nimport select from './select';\nimport drag from './drag';\nimport editor from './editor';\n\n\nexport interface AppState {\n  glyph: Glyph;\n  selection: number[];\n  areaSelectRect: [number, number, number, number] | null;\n  dragSelection: [number, number, number, number] | null;\n  dragPoint: [number, [number, number, number, number]] | null;\n  resizeSelection: [RectPointPosition, [number, number, number, number]] | null;\n  ctmInv: CTMInv | null;\n  buhinMap: Map<string, string>;\n  stretchParamMap: Map<string, StretchParam>;\n  freehandMode: boolean;\n  showOptionModal: boolean;\n  clipboard: GlyphLine[];\n}\n\nconst initialState: AppState = {\n  glyph: parseGlyph(args.get('data') || ''),\n  selection: [],\n  areaSelectRect: null,\n  dragSelection: null,\n  dragPoint: null,\n  resizeSelection: null,\n  ctmInv: null,\n  buhinMap: new Map<string, string>(),\n  stretchParamMap: new Map<string, StretchParam>(),\n  freehandMode: false,\n  showOptionModal: false,\n  clipboard: [],\n};\n\nconst reducer = reducerWithInitialState(initialState)\n  .withHandling(select)\n  .withHandling(drag)\n  .withHandling(editor);\n\nexport default reducer;\n","import { ReducerBuilder } from 'typescript-fsa-reducers';\n\nimport { selectActions } from '../actions/select';\n\nimport { AppState } from '.';\n\nexport default (builder: ReducerBuilder<AppState>) => builder\n  .case(selectActions.selectSingle, (state, index) => ({\n    ...state,\n    selection: [index],\n  }))\n  .case(selectActions.selectAddSingle, (state, index) => ({\n    ...state,\n    selection: state.selection.includes(index) ? state.selection : state.selection.concat([index]),\n  }))\n  .case(selectActions.selectRemoveSingle, (state, index) => ({\n    ...state,\n    selection: state.selection.filter((index2) => index !== index2),\n  }))\n  .case(selectActions.selectAll, (state) => ({\n    ...state,\n    selection: state.glyph.map((_gLine, index) => index),\n  }))\n  .case(selectActions.selectDeselected, (state) => ({\n    ...state,\n    selection: state.glyph.map((_gLine, index) => index).filter((index) => !state.selection.includes(index)),\n  }))\n  .case(selectActions.selectNone, (state) => ({\n    ...state,\n    selection: [],\n  }))\n  .case(selectActions.selectPrev, (state) => {\n    if (state.glyph.length === 0) {\n      return { ...state, selection: [] };\n    }\n    const firstSelected = state.selection.length === 0 ? 0 : Math.min(...state.selection);\n    return {\n      ...state,\n      selection: [(firstSelected - 1 + state.glyph.length) % state.glyph.length],\n    };\n  })\n  .case(selectActions.selectNext, (state) => {\n    if (state.glyph.length === 0) {\n      return { ...state, selection: [] };\n    }\n    const firstSelected = state.selection.length === 0 ? -1 : Math.max(...state.selection);\n    return {\n      ...state,\n      selection: [(firstSelected + 1 + state.glyph.length) % state.glyph.length],\n    };\n  });\n","import { ReducerBuilder } from 'typescript-fsa-reducers';\n\n// @ts-ignore\nimport { polygonInPolygon, polygonIntersectsPolygon } from 'geometric';\n\nimport { dragActions } from '../actions/drag';\n\nimport { moveSelectedGlyphLines, moveSelectedPoint } from '../kageUtils/transform';\nimport { Glyph } from '../kageUtils/glyph';\nimport { makeGlyphSeparated } from '../kage';\n\nimport { AppState } from '.';\nimport { resizeSelected } from '../selectors/draggedGlyph';\n\nconst performAreaSelect = (glyph: Glyph, buhinMap: Map<string, string>, x1: number, y1: number, x2: number, y2: number): number[] => {\n  const polygonsSep = makeGlyphSeparated(glyph, buhinMap);\n  const result = [];\n\n  const gAreaPolygon: [number, number][] = [\n    [x1, y1],\n    [x1, y2],\n    [x2, y2],\n    [x2, y1],\n    [x1, y1],\n  ];\n\n  for (let index = 0; index < polygonsSep.length; index++) {\n    const polygons = polygonsSep[index];\n    if (polygons.array.some((polygon) => {\n      const gPolygon = polygon.array.map(({ x, y }) => [x, y]);\n      gPolygon.push(gPolygon[0]); // close polygon\n\n      return (\n        polygonInPolygon(gAreaPolygon, gPolygon) ||\n        polygonInPolygon(gPolygon, gAreaPolygon) ||\n        polygonIntersectsPolygon(gAreaPolygon, gPolygon)\n      ) as boolean;\n    })) {\n      result.push(index);\n    }\n  }\n  return result;\n};\n\nexport default (builder: ReducerBuilder<AppState>) => builder\n  .case(dragActions.startAreaSelect, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      areaSelectRect: [x1, y1, x1, y1],\n    };\n  })\n  .case(dragActions.startSelectionDrag, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      dragSelection: [x1, y1, x1, y1],\n    };\n  })\n  .case(dragActions.startPointDrag, (state, [evt, pointIndex]) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      dragPoint: [pointIndex, [x1, y1, x1, y1]],\n    };\n  })\n  .case(dragActions.startResize, (state, [evt, position]) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      resizeSelection: [position, [x1, y1, x1, y1]],\n    };\n  })\n\n  .case(dragActions.mouseMove, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    if (state.areaSelectRect) {\n      const [x1, y1] = state.areaSelectRect;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        areaSelectRect: [x1, y1, x2, y2],\n      };\n    }\n    if (state.dragSelection) {\n      const [x1, y1] = state.dragSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        dragSelection: [x1, y1, x2, y2],\n      };\n    }\n    if (state.dragPoint) {\n      const [pointIndex, [x1, y1]] = state.dragPoint;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        dragPoint: [pointIndex, [x1, y1, x2, y2]],\n      };\n    }\n    if (state.resizeSelection) {\n      const [position, [x1, y1]] = state.resizeSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        resizeSelection: [position, [x1, y1, x2, y2]],\n      };\n    }\n    return state;\n  })\n  .case(dragActions.mouseUp, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    if (state.areaSelectRect) {\n      const [x1, y1] = state.areaSelectRect;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      const intersections = performAreaSelect(state.glyph, state.buhinMap, x1, y1, x2, y2);\n\n      const newSelection = Array.from(new Set(state.selection.concat(intersections)));\n      return {\n        ...state,\n        selection: newSelection,\n        areaSelectRect: null,\n      };\n    }\n    if (state.dragSelection) {\n      const [x1, y1] = state.dragSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n\n      const newGlyph = moveSelectedGlyphLines(state.glyph, state.selection, x2 - x1, y2 - y1);\n      return {\n        ...state,\n        glyph: newGlyph,\n        dragSelection: null,\n      };\n    }\n    if (state.dragPoint) {\n      const [pointIndex, [x1, y1]] = state.dragPoint;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n\n      const newGlyph = moveSelectedPoint(state.glyph, state.selection, pointIndex, x2 - x1, y2 - y1);\n      return {\n        ...state,\n        glyph: newGlyph,\n        dragPoint: null,\n      };\n    }\n    if (state.resizeSelection) {\n      const [position, [x1, y1]] = state.resizeSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n\n      const newGlyph = resizeSelected(state.glyph, state.selection, position, x2 - x1, y2 - y1);\n      return {\n        ...state,\n        glyph: newGlyph,\n        resizeSelection: null,\n      };\n    }\n    return state;\n  })\n\n  .case(dragActions.updateCTMInv, (state, ctmInv) => ({\n    ...state,\n    ctmInv,\n  }));\n","import { kage } from '../kage';\n\nimport { GlyphLine, parseGlyph, unparseGlyph } from './glyph';\nimport { getStretchPositions, normalizeStretchPositions, setStretchPositions } from './stretchparam';\nimport { applyGlyphLineOperation } from './transform';\n\nexport const decompose = (glyphLine: GlyphLine, buhinMap: Map<string, string>): GlyphLine[] => {\n  if (glyphLine.value[0] !== 99) {\n    return [glyphLine];\n  }\n  const buhinSource = buhinMap.get(glyphLine.partName!);\n  if (!buhinSource) {\n    return [glyphLine];\n  }\n\n  let failedBuhin = false;\n  kage.kBuhin.search = (name: string) => {\n    const data = buhinMap.get(name);\n    if (typeof data !== 'string') {\n      failedBuhin = true;\n      return '';\n    }\n    return data;\n  };\n\n  const glyph = parseGlyph(buhinSource);\n\n  const strokesArray =\n    // @ts-ignore 2445\n    kage.getEachStrokes(\n      unparseGlyph(glyph)\n    );\n  const box =\n    // @ts-ignore 2445\n    kage.getBox(\n      strokesArray\n    );\n\n  if (failedBuhin) {\n    return [glyphLine];\n  }\n\n  const x1 = glyphLine.value[3];\n  const y1 = glyphLine.value[4];\n  const x2 = glyphLine.value[5];\n  const y2 = glyphLine.value[6];\n  const [sx, sy, tx, ty] = normalizeStretchPositions(getStretchPositions(glyphLine)!);\n  const isStretchEnabled = !(sx === tx - 200 && sy === ty);\n\n  return glyph.map((oldGlyphLine) => {\n    const tX = (x: number) => {\n      const stretchedX = isStretchEnabled\n        ? kage.stretch(tx - 200, sx, x, box.minX, box.maxX)\n        : x;\n      return Math.round(stretchedX / 200 * (x2 - x1) + x1);\n    };\n    const tY = (y: number) => {\n      const stretchedY = isStretchEnabled\n        ? kage.stretch(ty, sy, y, box.minY, box.maxY)\n        : y;\n      return Math.round(stretchedY / 200 * (y2 - y1) + y1);\n    };\n    const newGlyphLine = applyGlyphLineOperation(oldGlyphLine, tX, tY);\n\n    if (!(isStretchEnabled && newGlyphLine.value[0] === 99)) {\n      return newGlyphLine;\n    }\n\n    const [sx2, sy2, tx2, ty2] = normalizeStretchPositions(getStretchPositions(newGlyphLine)!);\n    if (!(sx2 === tx2 - 200 && sy2 === ty2)) {\n      // Cannot compose two stretches...\n      return newGlyphLine;\n    }\n\n    const px1 = newGlyphLine.value[3];\n    const py1 = newGlyphLine.value[4];\n    const px2 = newGlyphLine.value[5];\n    const py2 = newGlyphLine.value[6];\n\n    if (px1 === px2 || py1 === py2) {\n      return newGlyphLine;\n    }\n\n    const revX = (x: number) => (x - px1) / (px2 - px1) * 200;\n    const revY = (y: number) => (y - py1) / (py2 - py1) * 200;\n    return setStretchPositions(newGlyphLine, [\n      revX(sx2 + 100),\n      revY(sy2 + 100),\n      revX(tx2 - 100) + 100,\n      revY(ty2 + 100),\n    ]);\n  });\n};\n","import { createStore } from 'redux';\n\nimport reducer from './reducers';\n\nconst store = createStore(reducer);\n\nexport default store;\n","import React from 'react';\n\nimport { Polygons } from '@kurgm/kage-engine';\n\nexport interface StrokeComponentProps {\n  polygons: Polygons;\n}\n\nconst StrokeComponent = (props: StrokeComponentProps) => (\n  <>\n    {props.polygons.array.map((polygon, i) => (\n      <polygon key={i} points={polygon.array.map(({ x, y }) => `${x},${y} `).join(\"\")} />\n    ))}\n  </>\n);\n\nexport default StrokeComponent;\n","import React from 'react';\n\nimport { Glyph } from '../kageUtils/glyph';\nimport { makeGlyphSeparated } from '../kage';\nimport Stroke from './Stroke';\n\nimport './Glyph.css'\n\nexport interface GlyphComponentProps {\n  glyph: Glyph;\n  buhinMap: Map<string, string>;\n  selection: number[];\n  handleMouseDownDeselectedStroke?: (evt: React.MouseEvent, index: number) => void;\n  handleMouseDownSelectedStroke?: (evt: React.MouseEvent, index: number) => void;\n  makeGlyphSeparated?: typeof makeGlyphSeparated;\n}\n\nconst GlyphComponent = (props: GlyphComponentProps) => {\n  const polygonsSep = (props.makeGlyphSeparated || makeGlyphSeparated)(props.glyph, props.buhinMap);\n\n  const { selection } = props;\n  const nonSelection = polygonsSep.map((_polygons, index) => index)\n    .filter((index) => !selection.includes(index));\n\n  return (\n    <>\n      <g className=\"strokes-deselected\">\n        {nonSelection.map((index) => (\n          <g key={index} onMouseDown={(evt) => props.handleMouseDownDeselectedStroke?.(evt, index)}>\n            <Stroke polygons={polygonsSep[index]} />\n          </g>\n        ))}\n      </g>\n      <g className=\"strokes-selected\">\n        {selection.map((index) => (\n          <g key={index} onMouseDown={(evt) => props.handleMouseDownSelectedStroke?.(evt, index)}>\n            <Stroke polygons={polygonsSep[index]} />\n          </g>\n        ))}\n      </g>\n    </>\n  );\n};\n\nexport default GlyphComponent;\n","import React from 'react';\n\nimport './AreaSelectRect.css';\n\ninterface AreaSelectRectProps {\n  rect: [number, number, number, number] | null;\n}\n\nconst AreaSelectRect = (props: AreaSelectRectProps) => {\n  if (!props.rect) {\n    return null;\n  }\n  let [x1, y1, x2, y2] = props.rect;\n  if (x1 > x2) {\n    // swap\n    const temp = x1;\n    x1 = x2;\n    x2 = temp;\n  }\n  if (y1 > y2) {\n    // swap\n    const temp = y1;\n    y1 = y2;\n    y2 = temp;\n  }\n\n  return <rect className='areaselect-rect' x={x1} y={y1} width={x2 - x1} height={y2 - y1} />;\n};\n\nexport default AreaSelectRect;\n","import React from 'react';\n\nimport './ControlPoint.css';\n\ninterface ControlPointProps {\n  x: number;\n  y: number;\n  className?: string;\n  handleMouseDown: (evt: React.MouseEvent) => void;\n}\n\nconst ControlPoint = (props: ControlPointProps) => (\n  <rect\n    x={props.x - 4}\n    y={props.y - 4}\n    width={8} height={8}\n    className={`controlpoint-rect ${props.className || ''}`}\n    onMouseDown={props.handleMouseDown}\n  />\n);\n\nexport default ControlPoint;\n","import React, { useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { createSelector } from 'reselect';\n\nimport { dragActions, RectPointPosition } from '../actions/drag';\nimport { AppState } from '../reducers';\nimport { draggedGlyphSelector } from '../selectors/draggedGlyph';\nimport { getGlyphLinesBBX } from '../kageUtils/bbx';\nimport { getMatchType, MatchType } from '../kageUtils/match';\n\nimport ControlPoint from './ControlPoint';\n\nimport './SelectionControl.css';\n\ninterface RectControl {\n  multiSelect: boolean;\n  coords: [number, number, number, number];\n}\ninterface ControlPoint {\n  x: number;\n  y: number;\n  className: string;\n}\n\ninterface SelectionControlSpec {\n  rectControl: RectControl | null;\n  pointControl: ControlPoint[];\n}\n\nconst selectionControlSelector = createSelector(\n  [\n    draggedGlyphSelector,\n    (state: AppState) => state.selection,\n  ],\n  (glyph, selection): SelectionControlSpec => {\n    if (selection.length === 0) {\n      return { rectControl: null, pointControl: [] };\n    }\n    if (selection.length > 1) {\n      const selectedStrokes = selection.map((index) => glyph[index]);\n      const bbx = getGlyphLinesBBX(selectedStrokes);\n      return {\n        rectControl: {\n          multiSelect: true,\n          coords: bbx,\n        },\n        pointControl: [],\n      };\n    }\n    const selectedStroke = glyph[selection[0]];\n    switch (selectedStroke.value[0]) {\n      case 0:\n      case 9:\n      case 99:\n        return {\n          rectControl: {\n            multiSelect: false,\n            coords: [\n              selectedStroke.value[3],\n              selectedStroke.value[4],\n              selectedStroke.value[5],\n              selectedStroke.value[6],\n            ],\n          },\n          pointControl: [],\n        };\n      case 1:\n      case 2:\n      case 3:\n      case 4:\n      case 6:\n      case 7: {\n        const pointControl: ControlPoint[] = [];\n        for (let i = 3; i + 2 <= selectedStroke.value.length; i += 2) {\n          const matchType = getMatchType(glyph, {\n            lineIndex: selection[0],\n            pointIndex: (i - 3) / 2,\n          });\n          let className = '';\n          if (matchType === MatchType.match) {\n              className = 'match';\n          } else if (matchType === MatchType.online) {\n              className = 'online';\n          }\n\n          pointControl.push({\n            x: selectedStroke.value[i],\n            y: selectedStroke.value[i + 1],\n            className,\n          });\n        }\n        return { rectControl: null, pointControl };\n      }\n      default:\n        return { rectControl: null, pointControl: [] };\n    }\n  }\n);\n\nconst SelectionControl = () => {\n  const { rectControl, pointControl } = useSelector(selectionControlSelector);\n\n  const dispatch = useDispatch();\n  const handleMouseDownRectControl = useCallback((evt: React.MouseEvent, position: RectPointPosition) => {\n    dispatch(dragActions.startResize([evt, position]));\n    evt.stopPropagation();\n  }, [dispatch]);\n\n  const handleMouseDownNorthPoint = useCallback(\n    (evt: React.MouseEvent) => handleMouseDownRectControl(evt, RectPointPosition.north),\n    [handleMouseDownRectControl]\n  );\n  const handleMouseDownWestPoint = useCallback(\n    (evt: React.MouseEvent) => handleMouseDownRectControl(evt, RectPointPosition.west),\n    [handleMouseDownRectControl]\n  );\n  const handleMouseDownSouthPoint = useCallback(\n    (evt: React.MouseEvent) => handleMouseDownRectControl(evt, RectPointPosition.south),\n    [handleMouseDownRectControl]\n  );\n  const handleMouseDownEastPoint = useCallback(\n    (evt: React.MouseEvent) => handleMouseDownRectControl(evt, RectPointPosition.east),\n    [handleMouseDownRectControl]\n  );\n  const handleMouseDownSoutheastPoint = useCallback(\n    (evt: React.MouseEvent) => handleMouseDownRectControl(evt, RectPointPosition.southeast),\n    [handleMouseDownRectControl]\n  );\n\n  const handleMouseDownPointControls = useMemo(() => {\n    return pointControl.map((_control, pointIndex) => (evt: React.MouseEvent) => {\n      dispatch(dragActions.startPointDrag([evt, pointIndex]));\n      evt.stopPropagation();\n    });\n  }, [dispatch, pointControl]);\n\n  return <>\n    {rectControl && <>\n      <rect\n        className='selection-rect'\n        x={rectControl.coords[0]}\n        y={rectControl.coords[1]}\n        width={rectControl.coords[2] - rectControl.coords[0]}\n        height={rectControl.coords[3] - rectControl.coords[1]}\n      />\n      <ControlPoint\n        x={(rectControl.coords[0] + rectControl.coords[2]) / 2}\n        y={rectControl.coords[1]}\n        className='north'\n        handleMouseDown={handleMouseDownNorthPoint}\n      />\n      <ControlPoint\n        x={rectControl.coords[0]}\n        y={(rectControl.coords[1] + rectControl.coords[3]) / 2}\n        className='west'\n        handleMouseDown={handleMouseDownWestPoint}\n      />\n      <ControlPoint\n        x={(rectControl.coords[0] + rectControl.coords[2]) / 2}\n        y={rectControl.coords[3]}\n        className='south'\n        handleMouseDown={handleMouseDownSouthPoint}\n      />\n      <ControlPoint\n        x={rectControl.coords[2]}\n        y={(rectControl.coords[1] + rectControl.coords[3]) / 2}\n        className='east'\n        handleMouseDown={handleMouseDownEastPoint}\n      />\n      <ControlPoint\n        x={rectControl.coords[2]}\n        y={rectControl.coords[3]}\n        className='southeast'\n        handleMouseDown={handleMouseDownSoutheastPoint}\n      />\n    </>}\n    {pointControl.map(({ x, y, className }, index) => (\n      <ControlPoint\n        key={index}\n        x={x} y={y}\n        className={className}\n        handleMouseDown={handleMouseDownPointControls[index]}\n      />\n    ))}\n  </>;\n};\n\nexport default SelectionControl;","import React, { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { AppState } from '../reducers';\n\nimport { selectActions } from '../actions/select';\nimport { dragActions, CTMInv } from '../actions/drag';\nimport { draggedGlyphSelector } from '../selectors/draggedGlyph';\nimport Glyph from './Glyph';\nimport AreaSelectRect from './AreaSelectRect';\nimport SelectionControl from './SelectionControl';\n\nimport './GlyphArea.css';\n\nconst GlyphArea = () => {\n  const glyph = useSelector(draggedGlyphSelector);\n  const buhinMap = useSelector((state: AppState) => state.buhinMap);\n  const selection = useSelector((state: AppState) => state.selection);\n  const areaSelectRect = useSelector((state: AppState) => state.areaSelectRect);\n\n  const dispatch = useDispatch();\n  const handleMouseDownCapture = useCallback((evt: React.MouseEvent<SVGSVGElement>) => {\n    const ctm = evt.currentTarget.getScreenCTM();\n    if (!ctm) {\n      return;\n    }\n    const pt = evt.currentTarget.createSVGPoint();\n    const ictm = ctm.inverse();\n    const ctmInv: CTMInv = (evtx, evty) => {\n      pt.x = evtx;\n      pt.y = evty;\n      const { x, y } = pt.matrixTransform(ictm);\n      return [x, y];\n    };\n    dispatch(dragActions.updateCTMInv(ctmInv));\n  }, [dispatch]);\n\n  const handleMouseDownBackground = useCallback((evt: React.MouseEvent) => {\n    if (!(evt.shiftKey || evt.ctrlKey)) {\n      dispatch(selectActions.selectNone());\n    }\n    dispatch(dragActions.startAreaSelect(evt));\n  }, [dispatch]);\n  const handleMouseDownDeselectedStroke = useCallback((evt: React.MouseEvent, index: number) => {\n    if (evt.shiftKey || evt.ctrlKey) {\n      dispatch(selectActions.selectAddSingle(index));\n    } else {\n      dispatch(selectActions.selectSingle(index));\n    }\n    dispatch(dragActions.startSelectionDrag(evt));\n    evt.stopPropagation();\n  }, [dispatch]);\n  const handleMouseDownSelectedStroke = useCallback((evt: React.MouseEvent, index: number) => {\n    if (evt.shiftKey || evt.ctrlKey) {\n      dispatch(selectActions.selectRemoveSingle(index));\n    }\n    dispatch(dragActions.startSelectionDrag(evt));\n    evt.stopPropagation();\n  }, [dispatch]);\n\n  useEffect(() => {\n    const handleMouseMove = (evt: MouseEvent) => {\n      dispatch(dragActions.mouseMove(evt));\n    };\n    const handleMouseUp = (evt: MouseEvent) => {\n      dispatch(dragActions.mouseUp(evt));\n    };\n    document.addEventListener('mousemove', handleMouseMove)\n    document.addEventListener('mouseup', handleMouseUp);\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [dispatch]);\n\n  return (\n    <div className=\"glyph-area\">\n      <svg\n        width=\"100%\" height=\"100%\" viewBox=\"-20 -20 500 240\"\n        onMouseDownCapture={handleMouseDownCapture}\n        onMouseDown={handleMouseDownBackground}\n      >\n        {/* TODO: grid */}\n        <rect x=\"0\" y=\"0\" width=\"200\" height=\"200\" className=\"glyph-boundary\" />\n        <rect x=\"12\" y=\"12\" width=\"176\" height=\"176\" className=\"glyph-guide\" />\n        <Glyph\n          glyph={glyph}\n          buhinMap={buhinMap}\n          selection={selection}\n          handleMouseDownDeselectedStroke={handleMouseDownDeselectedStroke}\n          handleMouseDownSelectedStroke={handleMouseDownSelectedStroke}\n        />\n        <SelectionControl />\n        <AreaSelectRect rect={areaSelectRect} />\n      </svg>\n    </div>\n  );\n};\n\nexport default GlyphArea;\n","import React, { useCallback } from 'react';\n\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { createSelector } from 'reselect';\n\nimport { editorActions } from '../actions/editor';\nimport { selectActions } from '../actions/select';\nimport { AppState } from '../reducers';\nimport { GlyphLine } from '../kageUtils/glyph';\nimport { calcStretchScalar, getStretchPositions } from '../kageUtils/stretchparam';\nimport { strokeTypes, headShapeTypes, tailShapeTypes, isValidStrokeShapeTypes } from '../kageUtils/stroketype';\nimport { draggedGlyphSelector } from '../selectors/draggedGlyph';\n\nimport { useTranslation } from 'react-i18next';\n\nimport './SelectionInfo.css'\n\n\nconst selectedGlyphLineSelector = createSelector([\n  (state: AppState) => state.selection,\n  draggedGlyphSelector,\n], (selection, draggedGlyph): GlyphLine | null => {\n  if (selection.length !== 1) {\n    return null;\n  }\n  return draggedGlyph[selection[0]];\n});\n\ninterface StrokeInfo {\n  strokeType: number;\n  headShapeType: number;\n  tailShapeType: number;\n  validTypes: boolean;\n  coordString: string;\n}\nconst strokeInfoSelector = createSelector([\n  selectedGlyphLineSelector\n], (selectedStroke): StrokeInfo | null => {\n  if (!selectedStroke) {\n    return null;\n  }\n  if (!strokeTypes.includes(selectedStroke.value[0])) {\n    return null;\n  }\n\n  const points = [];\n  for (let i = 3; i + 2 <= selectedStroke.value.length; i += 2) {\n    points.push(`(${selectedStroke.value[i]},${selectedStroke.value[i + 1]})`);\n  }\n  return {\n    strokeType: selectedStroke.value[0],\n    headShapeType: selectedStroke.value[1],\n    tailShapeType: selectedStroke.value[2],\n    validTypes: isValidStrokeShapeTypes(selectedStroke),\n    coordString: points.join(' → '),\n  };\n});\n\ninterface PartInfo {\n  partName: string;\n  entityName: string | null;\n  coordString: string;\n  stretchCoeff: number | null;\n}\nconst partInfoSelector = createSelector([\n  selectedGlyphLineSelector,\n  (state: AppState) => state.buhinMap,\n  (state: AppState) => state.stretchParamMap,\n], (selectedStroke, buhinMap, stretchParamMap): PartInfo | null => {\n  if (!selectedStroke) {\n    return null;\n  }\n  if (selectedStroke.value[0] !== 99) {\n    return null;\n  }\n  const partName = selectedStroke.partName!;\n  const buhinSource = buhinMap.get(partName);\n  let entityName: string | null = null;\n  if (buhinSource) {\n    const aliasMatch = /^(?:0:1:0:[^$]+\\$)?99:0:0:0:0:200:200:([^$]+)$/.exec(buhinSource);\n    if (aliasMatch) {\n      entityName = aliasMatch[1];\n    }\n  }\n  const stretchParam = stretchParamMap.get(partName);\n  const stretchCoeff = stretchParam\n    ? calcStretchScalar(stretchParam, getStretchPositions(selectedStroke)!)\n    : null;\n\n  return {\n    partName,\n    entityName,\n    coordString: `(${selectedStroke.value[3]},${selectedStroke.value[4]}) → (${selectedStroke.value[5]},${selectedStroke.value[6]})`,\n    stretchCoeff,\n  };\n});\n\ninterface OtherInfo {\n  isMultiple: boolean;\n  coordString?: string;\n}\nconst otherInfoSelector = createSelector([\n  (state: AppState) => state.selection,\n  selectedGlyphLineSelector,\n], (selection, selectedStroke_): OtherInfo | null => {\n  if (selection.length > 1) {\n    return { isMultiple: true };\n  }\n  if (selection.length === 0) {\n    return { isMultiple: false };\n  }\n  const selectedStroke = selectedStroke_!;\n  const strokeType = selectedStroke.value[0];\n  if (strokeTypes.includes(strokeType) || strokeType === 99) {\n    return null;\n  }\n\n  const points = [];\n  for (let i = 3; i + 2 <= selectedStroke.value.length; i += 2) {\n    points.push(`(${selectedStroke.value[i]},${selectedStroke.value[i + 1]})`);\n  }\n  return { isMultiple: false, coordString: points.join(' → ') };\n});\n\nconst selectIndexStringSelector = createSelector([\n  (state: AppState) => state.glyph.length,\n  (state: AppState) => state.selection,\n], (glyphLength, selection) => {\n  const selectedIndexString = selection\n    .map((index) => index + 1)\n    .sort((a, b) => a - b).join(',');\n  return `${selectedIndexString || '-'} / ${glyphLength || '-'}`;\n});\n\nconst buttonsDisabledSelector = createSelector([\n  (state: AppState) => state.glyph.length,\n  (state: AppState) => state.selection,\n], (glyphLength, selection) => ({\n  swapPrevDisabled: selection.length !== 1 || selection[0] === 0,\n  swapNextDisabled: selection.length !== 1 || selection[0] === glyphLength - 1,\n  selectPrevDisabled: glyphLength === 0,\n  selectNextDisabled: glyphLength === 0,\n}));\n\nconst SelectionInfo = () => {\n\n  const strokeInfo = useSelector(strokeInfoSelector);\n  const partInfo = useSelector(partInfoSelector);\n  const otherInfo = useSelector(otherInfoSelector);\n\n  const selectIndexString = useSelector(selectIndexStringSelector);\n\n  const {\n    swapPrevDisabled, swapNextDisabled,\n    selectPrevDisabled, selectNextDisabled,\n  } = useSelector(buttonsDisabledSelector, shallowEqual);\n\n  const dispatch = useDispatch();\n  const changeStrokeType = useCallback((evt: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(editorActions.changeStrokeType(+evt.currentTarget.value));\n  }, [dispatch]);\n  const changeHeadShapeType = useCallback((evt: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(editorActions.changeHeadShapeType(+evt.currentTarget.value));\n  }, [dispatch]);\n  const changeTailShapeType = useCallback((evt: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(editorActions.changeTailShapeType(+evt.currentTarget.value));\n  }, [dispatch]);\n  const changeStretchCoeff = useCallback((evt: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(editorActions.changeStretchCoeff(+evt.currentTarget.value));\n  }, [dispatch]);\n  const selectPrev = useCallback(() => {\n    dispatch(selectActions.selectPrev());\n  }, [dispatch]);\n  const selectNext = useCallback(() => {\n    dispatch(selectActions.selectNext());\n  }, [dispatch]);\n  const swapWithPrev = useCallback(() => {\n    dispatch(editorActions.swapWithPrev());\n  }, [dispatch]);\n  const swapWithNext = useCallback(() => {\n    dispatch(editorActions.swapWithNext());\n  }, [dispatch]);\n\n  const { t } = useTranslation();\n  return (\n    <div className=\"select-control\">\n      <div className=\"selected-info\">\n        {strokeInfo && <>\n          <div>\n            {t('stroke type')}\n            <select value={strokeInfo.strokeType} onChange={changeStrokeType}>\n              {strokeTypes.map((strokeType) => (\n                <option key={strokeType} value={strokeType}>\n                  {t(`stroke type ${strokeType}`)}\n                </option>\n              ))}\n            </select>\n            {' '}\n            {t('head type')}\n            <select value={strokeInfo.headShapeType} onChange={changeHeadShapeType}>\n              {headShapeTypes[strokeInfo.strokeType].map((headShapeType) => (\n                <option key={headShapeType} value={headShapeType}>\n                  {t(`head type ${strokeInfo.strokeType}-${headShapeType}`)}\n                </option>\n              ))}\n            </select>\n            {' '}\n            {t('tail type')}\n            <select value={strokeInfo.tailShapeType} onChange={changeTailShapeType}>\n              {tailShapeTypes[strokeInfo.strokeType].map((tailShapeType) => (\n                <option key={tailShapeType} value={tailShapeType}>\n                  {t(`tail type ${strokeInfo.strokeType}-${tailShapeType}`)}\n                </option>\n              ))}\n            </select>\n            {' '}\n            {!strokeInfo.validTypes && (\n              <span className=\"alert\">\n                {t('invalid stroke shape types')}\n              </span>\n            )}\n          </div>\n          <div>{strokeInfo.coordString}</div>\n        </>}\n        {partInfo && <>\n          <div>\n            {t('part')}\n            {' '}\n            <strong>{partInfo.partName}</strong>\n            {' '}\n            {partInfo.entityName && t('alias of', { entity: partInfo.entityName })}\n          </div>\n          <div>{partInfo.coordString}</div>\n          {partInfo.stretchCoeff !== null && (\n            <div>\n              {t('stretch')}\n              {' '}\n              <input\n                type=\"range\" min={-10} max={10}\n                value={partInfo.stretchCoeff}\n                onChange={changeStretchCoeff}\n              />\n              {' '}\n              {partInfo.stretchCoeff}\n            </div>\n          )}\n        </>}\n        {otherInfo && <>\n          {otherInfo.isMultiple && <div>{t('selecting multiple strokes')}</div>}\n          {otherInfo.coordString && <div>{otherInfo.coordString}</div>}\n        </>}\n      </div>\n      <div className=\"selection-control\">\n        <button\n          disabled={swapPrevDisabled}\n          onClick={swapWithPrev}\n        >\n          {t('swap with prev')}\n        </button>\n        <button\n          className=\"select-prevnext-button\"\n          disabled={selectPrevDisabled}\n          onClick={selectPrev}\n        >\n          {t('select prev')}\n        </button>\n        <div className=\"selection-num\">\n          {selectIndexString}\n        </div>\n        <button\n          className=\"select-prevnext-button\"\n          disabled={selectNextDisabled}\n          onClick={selectNext}\n        >\n          {t('select next')}\n        </button>\n        <button\n          disabled={swapNextDisabled}\n          onClick={swapWithNext}\n        >\n          {t('swap with next')}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default SelectionInfo;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { submitGlyphSelector } from '../selectors/submitGlyph';\nimport { AppState } from '../reducers';\nimport { makeGlyphSeparatedForSubmit } from '../kage';\n\nimport GlyphComponent from './Glyph';\n\nconst SubmitPreview = () => {\n  const submitGlyph = useSelector(submitGlyphSelector);\n  const buhinMap = useSelector((state: AppState) => state.buhinMap);\n\n  return (\n    <svg className=\"preview-thumbnail\" viewBox=\"0 0 200 200\" width=\"50\" height=\"50\">\n      <GlyphComponent\n        buhinMap={buhinMap}\n        glyph={submitGlyph}\n        selection={[]}\n        makeGlyphSeparated={makeGlyphSeparatedForSubmit}\n      />\n    </svg>\n  );\n};\n\nexport default SubmitPreview;\n","import React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { useTranslation } from 'react-i18next';\n\nimport { AppState } from '../reducers';\nimport { editorActions } from '../actions/editor';\nimport { selectActions } from '../actions/select';\n\nimport SelectionInfo from './SelectionInfo';\nimport SubmitPreview from './SubmitPreview';\n\nimport './EditorControls.css';\n\nconst EditorControls = () => {\n  const glyph = useSelector((state: AppState) => state.glyph);\n  const selection = useSelector((state: AppState) => state.selection);\n  const clipboard = useSelector((state: AppState) => state.clipboard);\n  const freehandMode = useSelector((state: AppState) => state.freehandMode);\n\n  const undoDisabled = true;\n  const redoDisabled = true;\n  const pasteDisabled = clipboard.length === 0;\n  const decomposeDisabled = !selection.some((index) => glyph[index].value[0] === 99);\n\n  const dispatch = useDispatch();\n  const undo = useCallback(() => {\n    dispatch(editorActions.undo());\n  }, [dispatch]);\n  const redo = useCallback(() => {\n    dispatch(editorActions.redo());\n  }, [dispatch]);\n  const selectAll = useCallback(() => {\n    dispatch(selectActions.selectAll());\n  }, [dispatch]);\n  const selectDeselected = useCallback(() => {\n    dispatch(selectActions.selectDeselected());\n  }, [dispatch]);\n  const copy = useCallback(() => {\n    dispatch(editorActions.copy());\n  }, [dispatch]);\n  const paste = useCallback(() => {\n    dispatch(editorActions.paste());\n  }, [dispatch]);\n  const cut = useCallback(() => {\n    dispatch(editorActions.cut());\n  }, [dispatch]);\n  const toggleFreehand = useCallback(() => {\n    dispatch(editorActions.toggleFreehand());\n  }, [dispatch]);\n  const decompose = useCallback(() => {\n    dispatch(editorActions.decomposeSelected());\n  }, [dispatch]);\n  const options = useCallback(() => {\n    dispatch(editorActions.openOptionModal());\n  }, [dispatch]);\n  const finishEdit = useCallback(() => {\n    dispatch(editorActions.finishEdit());\n  }, [dispatch]);\n\n  const { t } = useTranslation();\n  return (\n    <div className=\"editor-controls\">\n      <SelectionInfo />\n      <div className=\"control-buttons\">\n        <button\n          disabled={undoDisabled}\n          onClick={undo}\n        >\n          {t('undo')}\n        </button>\n        <button\n          disabled={redoDisabled}\n          onClick={redo}\n        >\n          {t('redo')}\n        </button>\n        <button\n          disabled={freehandMode || glyph.length === 0}\n          onClick={selectAll}\n        >\n          {t('select all')}\n        </button>\n        <button\n          disabled={freehandMode || glyph.length === 0}\n          onClick={selectDeselected}\n        >\n          {t('invert selection')}\n        </button>\n        <button\n          disabled={selection.length === 0}\n          onClick={copy}\n        >\n          {t('copy')}\n        </button>\n        <button\n          disabled={pasteDisabled}\n          onClick={paste}\n        >\n          {t('paste')}\n        </button>\n        <button\n          disabled={selection.length === 0}\n          onClick={cut}\n        >\n          {t('cut')}\n        </button>\n        <button\n          disabled\n          onClick={toggleFreehand}\n        >\n          {freehandMode ? t('end freehand') : t('start freehand')}\n        </button>\n        <button\n          disabled={decomposeDisabled}\n          onClick={decompose}\n        >\n          {t('decompose')}\n        </button>\n        <button\n          disabled\n          onClick={options}\n        >\n          {t('options')}\n        </button>\n      </div>\n      <div className=\"preview\">\n        <SubmitPreview />\n        <button onClick={finishEdit}>\n          {t('finish edit')}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default EditorControls;\n","import React, { useCallback } from 'react';\n\nimport './PartsList.css';\n\nconst getImageURL = (name: string) => (\n  `https://glyphwiki.org/glyph/${name}.50px.png`\n);\n\ninterface PartsListProps {\n  names: string[];\n  handleItemClick: (partName: string, evt: React.MouseEvent<HTMLImageElement>) => void;\n  handleItemMouseEnter: (partName: string, evt: React.MouseEvent<HTMLImageElement>) => void;\n}\n\nconst PartsList = (props: PartsListProps) => {\n  const { handleItemClick, handleItemMouseEnter } = props;\n  const handleImageClick = useCallback((evt: React.MouseEvent<HTMLImageElement>) => {\n    const partName = evt.currentTarget.dataset.name!;\n    handleItemClick(partName, evt);\n  }, [handleItemClick]);\n  const handleImageMouseEnter = useCallback((evt: React.MouseEvent<HTMLImageElement>) => {\n    const partName = evt.currentTarget.dataset.name!;\n    handleItemMouseEnter(partName, evt);\n  }, [handleItemMouseEnter]);\n\n  return (\n    <div className=\"parts-list\">\n      {props.names.map((name) => (\n        <img\n          key={name} alt={name} title={name}\n          data-name={name}\n          src={getImageURL(name)}\n          width={50} height={50}\n          onClick={handleImageClick}\n          onMouseEnter={handleImageMouseEnter}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default PartsList;\n","import React, { useRef, useCallback, useState, useEffect, FormEvent } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { useTranslation } from 'react-i18next';\n\nimport { editorActions } from '../actions/editor';\nimport { search } from '../callapi';\nimport args from '../args';\n\nimport './PartsSearch.css';\nimport PartsList from './PartsList';\n\nconst searchSuggestions = [\n  'エディタ部品1',\n  'エディタ部品2',\n  'エディタ部品3',\n  'エディタ部品4',\n];\n\nconst initialQuery = args.get('name') || '';\n\nclass QueryTooShortError extends Error { }\n\nconst PartsSearch = () => {\n  const queryInputRef = useRef<HTMLInputElement>(null);\n  const [searching, setSearching] = useState(false);\n  const [names, setNames] = useState<string[]>([]);\n  const [err, setErr] = useState<any>(null);\n\n  const startSearch = (query: string) => {\n    setSearching(true);\n    search(query)\n      .then((result) => {\n        if (result === 'tooshort') {\n          throw new QueryTooShortError('query too short');\n        }\n        if (result === 'nodata') {\n          return [];\n        }\n        return result.split('\\t');\n      })\n      .then((names) => {\n        setSearching(false);\n        setNames(names);\n      })\n      .catch((reason) => {\n        setSearching(false);\n        setErr(reason);\n      });\n  };\n\n  useEffect(() => {\n    if (initialQuery) {\n      startSearch(initialQuery);\n    }\n  }, []);\n  const handleSearch = useCallback(() => {\n    if (!queryInputRef.current) {\n      return;\n    }\n    const query = queryInputRef.current.value;\n    if (!query) {\n      setNames([]);\n      return;\n    }\n    startSearch(query);\n  }, []);\n  const handleFormSubmit = useCallback((evt: React.FormEvent) => {\n    evt.preventDefault();\n    handleSearch();\n  }, [handleSearch]);\n\n  const hoverNameRef = useRef<HTMLDivElement>(null);\n  const handleItemMouseEnter = useCallback((partName: string) => {\n    if (!hoverNameRef.current) {\n      return;\n    }\n    hoverNameRef.current.textContent = partName;\n  }, []);\n  const dispatch = useDispatch();\n  const handleItemClick = useCallback((partName: string) => {\n    dispatch(editorActions.insertPart(partName));\n  }, [dispatch]);\n\n  const { t } = useTranslation();\n  return (\n    <div className=\"parts-search-area\">\n      <form className=\"parts-search-box\" onSubmit={handleFormSubmit}>\n        <input defaultValue={initialQuery} list=\"searchList\" ref={queryInputRef} />\n        <button onClick={handleSearch}>\n          {t('search')}\n        </button>\n        <datalist id=\"searchList\">\n          {searchSuggestions.map((suggestion, index) => (\n            <option key={index} value={suggestion} />\n          ))}\n        </datalist>\n      </form>\n      <div className=\"parts-list-area\">\n        {searching\n          ? <div className=\"message\">{t('searching')}</div>\n          : err\n            ? err instanceof QueryTooShortError\n              ? <div className=\"message\">{t('search query too short')}</div>\n              : <div className=\"message\">{t('search error', { message: err })}</div>\n            : names.length === 0\n              ? <div className=\"message\">{t('no search result')}</div>\n              : <PartsList\n                names={names}\n                handleItemClick={handleItemClick}\n                handleItemMouseEnter={handleItemMouseEnter}\n              />}\n      </div>\n      <div className=\"parts-hover-name\" ref={hoverNameRef}>&nbsp;</div>\n    </div>\n  )\n};\n\nexport default PartsSearch;\n","import React from 'react';\nimport './App.css';\n\nimport GlyphArea from './components/GlyphArea';\nimport EditorControls from './components/EditorControls';\nimport PartsSearch from './components/PartsSearch'\nimport { useShortcuts } from './shortcuts';\n\nfunction App() {\n  useShortcuts();\n  return (\n    <div className=\"App\">\n      <GlyphArea />\n      <EditorControls />\n      <PartsSearch />\n    </div>\n  );\n}\n\nexport default App;\n","import { useDispatch } from 'react-redux';\nimport { useHotkeys }from 'react-hotkeys-hook';\n\nimport { selectActions } from './actions/select';\nimport { editorActions } from './actions/editor';\n\nexport const useShortcuts = () => {\n  const dispatch = useDispatch();\n  useHotkeys('ctrl+a, command+a', (evt) => {\n    dispatch(selectActions.selectAll());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+i, command+i', (evt) => {\n    dispatch(selectActions.selectDeselected());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n\n  useHotkeys('ctrl+z, command+z', (evt) => {\n    dispatch(editorActions.undo());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+y, command+y, ctrl+shift+z, command+shift+z', (evt) => {\n    dispatch(editorActions.redo());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+x, command+x', (evt) => {\n    dispatch(editorActions.cut());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+c, command+c', (evt) => {\n    dispatch(editorActions.copy());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+v, command+v', (evt) => {\n    dispatch(editorActions.paste());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('del', (evt) => {\n    dispatch(editorActions.delete());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n\n  useHotkeys('del', (evt) => {\n    dispatch(editorActions.delete());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n\n  useHotkeys('ctrl+h, left', (evt) => {\n    dispatch(editorActions.moveSelected([-1, 0]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+j, down', (evt) => {\n    dispatch(editorActions.moveSelected([0, 1]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+k, up', (evt) => {\n    dispatch(editorActions.moveSelected([0, -1]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+l, right', (evt) => {\n    dispatch(editorActions.moveSelected([1, 0]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+shift+h, shift+left', (evt) => {\n    dispatch(editorActions.moveSelected([-5, 0]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+shift+j, shift+down', (evt) => {\n    dispatch(editorActions.moveSelected([0, 5]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+shift+k, shift+up', (evt) => {\n    dispatch(editorActions.moveSelected([0, -5]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+shift+l, shift+right', (evt) => {\n    dispatch(editorActions.moveSelected([5, 0]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport jaTranslation from './locales/ja.json';\n\nimport args from \"./args\";\n\nconst resources = {\n  ja: {\n    translation: jaTranslation,\n  },\n};\n\nconst host = args.get('host');\nlet lng = 'ja';\nif (host) {\n  switch (host.split('.')[0]) {\n    case 'en':\n      lng = 'en';\n      break;\n    case 'ko':\n      lng = 'ko';\n      break;\n    case 'zhs':\n      lng = 'zh-Hans';\n      break;\n    case 'zht':\n      lng = 'zh-Hant';\n      break;\n  }\n}\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng,\n\n    returnObjects: true,\n    interpolation: {\n      escapeValue: false, // react already safes from xss\n    },\n  });\n\nexport default i18n;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\n\nimport store from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './i18n';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}