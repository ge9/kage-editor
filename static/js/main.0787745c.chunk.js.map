{"version":3,"sources":["actions/editor.ts","kageUtils.ts","kage.ts","args.ts","reducers/editor.ts","reducers/index.ts","components/Stroke.tsx","components/Glyph.tsx","components/AreaSelectRect.tsx","components/ControlPoint.tsx","components/SelectionControl.tsx","containers/SelectionControl.ts","components/GlyphArea.tsx","containers/GlyphArea.ts","App.tsx","serviceWorker.ts","i18n.ts","index.tsx"],"names":["RectPointPosition","glyphStr","actionCreator","actionCreatorFactory","editorActions","selectSingle","selectAddSingle","selectRemoveSingle","selectNone","selectAll","selectPrev","selectNext","startAreaSelect","startSelectionDrag","startPointDrag","startResize","mouseMove","mouseUp","updateCTMInv","unparseGlyphLine","glyphLine","values","value","slice","partName","join","bbxOfPoints","points","xs","map","ys","Math","min","max","getGlyphLineBBX","i","length","push","mergeBBX","x11","y11","x12","y12","x21","y21","x22","y22","getGlyphLinesBBX","memoizeOne","glyphLines","reduce","gLines1","gLines2","every","gLine1","index","moveSelectedGlyphLines","glyph","selection","dx","dy","moveSelectedPoint","pointIndex","resizeSelectedGlyphLines","oldBBX","newBBX","includes","tX","tY","applyGlyphLineOperation","x","round","y","resizeGlyphLine","kage","Kage","makeGlyphSeparated","data","args","URLSearchParams","window","location","hash","resizeSelected","position","north","west","south","east","southeast","applyDraggingEffectToGlyph","state","dragSelection","x1","y1","dragPoint","resizeSelection","initialState","get","split","line","glyphLineStr","splitLine","numColumns","strokeType","getNumColumns","floor","parseGlyphLine","filter","gLine","areaSelectRect","ctmInv","editor","reducerWithInitialState","case","concat","index2","_gLine","firstSelected","evt","clientX","clientY","x2","y2","intersections","polygonsSep","result","gAreaPolygon","array","some","polygon","gPolygon","polygonInPolygon","polygonIntersectsPolygon","performAreaSelect","newSelection","Array","from","Set","newGlyph","combineReducers","StrokeComponent","props","polygons","key","GlyphComponent","nonSelection","_polygons","className","onMouseDown","handleMouseDownDeselectedStroke","Stroke","handleMouseDownSelectedStroke","AreaSelectRect","rect","temp","width","height","ControlPoint","handleMouseDown","SelectionControl","rectControl","coords","handleMouseDownRectControl","pointControl","handleMouseDownPointControl","mapStateToProps","createSelector","selectedStrokes","multiSelect","selectedStroke","connect","dispatch","stopPropagation","GlyphArea","handleMouseMove","handleMouseUp","useEffect","document","addEventListener","removeEventListener","viewBox","onMouseDownCapture","handleMouseDownCapture","handleMouseDownBackground","target","SVGSVGElement","ctm","getScreenCTM","pt","createSVGPoint","evtx","evty","matrixTransform","inverse","shiftKey","ctrlKey","App","Boolean","hostname","match","resources","ja","translation","host","lng","i18n","use","initReactI18next","init","returnObjects","interpolation","escapeValue","store","createStore","reducer","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0787745c.chunk.js","sourcesContent":["import actionCreatorFactory from 'typescript-fsa';\n\nexport type CTMInv = (x: number, y: number) => [number, number];\nexport enum RectPointPosition {\n  north,\n  south,\n  east,\n  west,\n  southeast,\n}\n\nconst actionCreator = actionCreatorFactory('EDITOR');\n\nexport const editorActions = {\n  selectSingle: actionCreator<number>('SELECT_SINGLE'),\n  selectAddSingle: actionCreator<number>('SELECT_ADD_SINGLE'),\n  selectRemoveSingle: actionCreator<number>('SELECT_REMOVE_SINGLE'),\n  selectNone: actionCreator('SELECT_NONE'),\n  selectAll: actionCreator('SELECT_ALL'),\n  selectPrev: actionCreator('SELECT_PREV'),\n  selectNext: actionCreator('SELECT_NEXT'),\n\n  startAreaSelect: actionCreator<React.MouseEvent>('AREA_SELECT_START'),\n  startSelectionDrag: actionCreator<React.MouseEvent>('SELECTION_DRAG_START'),\n  startPointDrag: actionCreator<[React.MouseEvent, number]>('MOVE_POINT_START'),\n  startResize: actionCreator<[React.MouseEvent, RectPointPosition]>('RESIZE_START'),\n\n  mouseMove: actionCreator<MouseEvent>('MOUSE_MOVE'),\n  mouseUp: actionCreator<MouseEvent>('MOUSE_UP'),\n\n  updateCTMInv: actionCreator<CTMInv>('UPDATE_CTMINV'),\n};\n","import memoizeOne from 'memoize-one';\n\nexport interface GlyphLine {\n  value: number[];\n  partName?: string;\n}\n\nexport const getNumColumns = (strokeType: number): number => {\n  switch (strokeType) {\n    case 0:\n    case 1:\n    case 9:\n      return 7;\n    case 2:\n    case 3:\n    case 4:\n      return 9;\n    case 6:\n    case 7:\n    case 99:\n      return 11;\n    default:\n      return 0;\n  }\n};\n\nexport const parseGlyphLine = (glyphLineStr: string): GlyphLine => {\n  const splitLine = glyphLineStr.split(':');\n  const strokeType = +splitLine[0];\n  const numColumns = getNumColumns(strokeType);\n  const value = [];\n  for (let i = 0; i < numColumns; i++) {\n    value.push(Math.floor(+splitLine[i] || 0));\n  }\n  if (value[0] === 99) {\n    const partName = splitLine[7] || '';\n    return { value, partName }\n  }\n  return { value };\n};\n\nexport const unparseGlyphLine = (glyphLine: GlyphLine): string => {\n  const values: (number | string)[] = glyphLine.value.slice();\n  if (values[0] === 99) {\n    values[7] = glyphLine.partName || '';\n  }\n  return values.join(':');\n};\n\nexport const isValidGlyphLine = (glyphLine: GlyphLine): boolean => (\n  glyphLine.value.length !== 0 &&\n  (\n    glyphLine.value[0] !== 0 ||\n    glyphLine.value[1] === 97 || glyphLine.value[1] === 98 || glyphLine.value[1] === 99\n  )\n);\n\nconst applyGlyphLineOperation = (glyphLine: GlyphLine, tX: (x: number) => number, tY: (y: number) => number): GlyphLine => {\n  switch (glyphLine.value[0]) {\n    case 99: {\n      const value = glyphLine.value.slice();\n      value[3] = tX(value[3]);\n      value[4] = tY(value[4]);\n      value[5] = tX(value[5]);\n      value[6] = tY(value[6]);\n      return { value, partName: glyphLine.partName };\n    }\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 6:\n    case 7:\n    case 9: {\n      const value = glyphLine.value.slice();\n      for (let i = 3; i + 2 <= value.length; i += 2) {\n        value[i] = tX(value[i]);\n        value[i + 1] = tY(value[i + 1]);\n      }\n      return { value };\n    }\n    default:\n      return glyphLine;\n  }\n}\n\n\nexport type Glyph = GlyphLine[];\n\nexport const parseGlyph = (glyphStr: string): Glyph => (\n  glyphStr.split(/[$\\r\\n]+/)\n    .map((line) => parseGlyphLine(line))\n    .filter((gLine) => isValidGlyphLine(gLine))\n);\n\nexport const unparseGlyph = (glyph: Glyph): string => (\n  glyph\n    .map((gLine) => unparseGlyphLine(gLine))\n    .join('$')\n);\n\n\nexport type BBX = [number, number, number, number];\n\nexport const bbxOfPoints = (points: [number, number][]): BBX => {\n  const xs = points.map(([x]) => x);\n  const ys = points.map(([, y]) => y);\n  return [\n    Math.min(...xs),\n    Math.min(...ys),\n    Math.max(...xs),\n    Math.max(...ys),\n  ];\n};\n\nexport const getGlyphLineBBX = (glyphLine: GlyphLine): BBX => {\n  switch (glyphLine.value[0]) {\n    case 99:\n      return bbxOfPoints([\n        [glyphLine.value[3], glyphLine.value[4]],\n        [glyphLine.value[5], glyphLine.value[6]],\n      ]);\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 6:\n    case 7:\n    case 9: {\n      const points: [number, number][] = [];\n      for (let i = 3; i + 2 <= glyphLine.value.length; i += 2) {\n        points.push([glyphLine.value[i], glyphLine.value[i + 1]]);\n      }\n      return bbxOfPoints(points);\n    }\n    default:\n      return bbxOfPoints([]);\n  }\n}\n\nexport const mergeBBX = ([x11, y11, x12, y12]: BBX, [x21, y21, x22, y22]: BBX): BBX => [\n  Math.min(x11, x21),\n  Math.min(y11, y21),\n  Math.max(x12, x22),\n  Math.max(y12, y22),\n];\n\nexport const getGlyphLinesBBX = memoizeOne((glyphLines: GlyphLine[]): BBX => {\n  return glyphLines.map(getGlyphLineBBX).reduce(mergeBBX, bbxOfPoints([]));\n}, (gLines1: GlyphLine[], gLines2: GlyphLine[]) => (\n  gLines1.length === gLines2.length &&\n  gLines1.every((gLine1, index) => gLine1 === gLines2[index])\n));\n\n\nexport const moveSelectedGlyphLines = (glyph: Glyph, selection: number[], dx: number, dy: number): Glyph => {\n  // FIXME\n  return glyph;\n};\n\nexport const moveSelectedPoint = (glyph: Glyph, selection: number[], pointIndex: number, dx: number, dy: number): Glyph => {\n  // FIXME\n  return glyph;\n};\n\nexport const resizeGlyphLine = (glyphLine: GlyphLine, oldBBX: BBX, newBBX: BBX): GlyphLine => {\n  const [x11, y11, x12, y12] = oldBBX;\n  const [x21, y21, x22, y22] = newBBX;\n  const tX = (x: number) => Math.round(x21 + (x - x11) * (x22 - x21) / (x12 - x11));\n  const tY = (y: number) => Math.round(y21 + (y - y11) * (y22 - y21) / (y12 - y11));\n  return applyGlyphLineOperation(glyphLine, tX, tY);\n};\n\nexport const resizeSelectedGlyphLines = (glyph: Glyph, selection: number[], oldBBX: BBX, newBBX: BBX): Glyph => {\n  return glyph.map((glyphLine, index) => selection.includes(index)\n    ? resizeGlyphLine(glyphLine, oldBBX, newBBX)\n    : glyphLine\n  );\n};\n","import memoizeOne from 'memoize-one';\n\nimport { Kage, Polygons } from '@kurgm/kage-engine';\nimport { Glyph, unparseGlyphLine } from './kageUtils';\n\nexport const kage = new Kage();\n\nexport const makeGlyphSeparated = memoizeOne((glyph: Glyph): Polygons[] => {\n  const data = glyph.map(unparseGlyphLine);\n  const result = kage.makeGlyphSeparated(data);\n  return result;\n});\n","const args = new URLSearchParams(window.location.hash.slice(1));\n\nexport default args;\n","import { reducerWithInitialState } from 'typescript-fsa-reducers';\n\n// @ts-ignore\nimport { polygonInPolygon, polygonIntersectsPolygon } from 'geometric';\n\nimport { editorActions, RectPointPosition } from '../actions/editor';\nimport { Glyph, parseGlyph, moveSelectedGlyphLines, moveSelectedPoint, resizeSelectedGlyphLines, getGlyphLinesBBX } from '../kageUtils';\nimport { makeGlyphSeparated } from '../kage';\n\nimport args from '../args';\n\n\nconst performAreaSelect = (glyph: Glyph, x1: number, y1: number, x2: number, y2: number): number[] => {\n  const polygonsSep = makeGlyphSeparated(glyph);\n  const result = [];\n\n  const gAreaPolygon: [number, number][] = [\n    [x1, y1],\n    [x1, y2],\n    [x2, y2],\n    [x2, y1],\n    [x1, y1],\n  ];\n\n  for (let index = 0; index < polygonsSep.length; index++) {\n    const polygons = polygonsSep[index];\n    if (polygons.array.some((polygon) => {\n      const gPolygon = polygon.array.map(({ x, y }) => [x, y]);\n      gPolygon.push(gPolygon[0]); // close polygon\n\n      return (\n        polygonInPolygon(gAreaPolygon, gPolygon) ||\n        polygonInPolygon(gPolygon, gAreaPolygon) ||\n        polygonIntersectsPolygon(gAreaPolygon, gPolygon)\n      ) as boolean;\n    })) {\n      result.push(index);\n    }\n  }\n  return result;\n};\n\nexport const resizeSelected = (glyph: Glyph, selection: number[], position: RectPointPosition, dx: number, dy: number): Glyph => {\n  const minSize = 20;\n  const oldBBX = getGlyphLinesBBX(selection.map((index) => glyph[index]));\n  const newBBX = oldBBX.slice() as typeof oldBBX;\n  switch (position) {\n    case RectPointPosition.north:\n      newBBX[1] = Math.min(newBBX[1] + dy, newBBX[3] - minSize);\n      break;\n    case RectPointPosition.west:\n      newBBX[0] = Math.min(newBBX[0] + dx, newBBX[2] - minSize);\n      break;\n    case RectPointPosition.south:\n      newBBX[3] = Math.max(newBBX[3] + dy, newBBX[1] + minSize);\n      break;\n    case RectPointPosition.east:\n      newBBX[2] = Math.max(newBBX[2] + dx, newBBX[0] + minSize);\n      break;\n    case RectPointPosition.southeast:\n      newBBX[2] = Math.max(newBBX[2] + dx, newBBX[0] + minSize);\n      newBBX[3] = Math.max(newBBX[3] + dy, newBBX[1] + minSize);\n      break;\n    default:\n      // exhaustive?\n      ((_x: never) => {})(position);\n  }\n  return resizeSelectedGlyphLines(glyph, selection, oldBBX, newBBX);\n};\n\nexport const applyDraggingEffectToGlyph = (state: EditorState): Glyph => {\n  let glyph = state.glyph;\n  if (state.dragSelection) {\n    const [x1, y1, x2, y2] = state.dragSelection;\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    glyph = moveSelectedGlyphLines(state.glyph, state.selection, dx, dy);\n  } else if (state.dragPoint) {\n    const [pointIndex, [x1, y1, x2, y2]] = state.dragPoint;\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    glyph = moveSelectedPoint(state.glyph, state.selection, pointIndex, dx, dy);\n  } else if (state.resizeSelection) {\n    const [position, [x1, y1, x2, y2]] = state.resizeSelection;\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    glyph = resizeSelected(state.glyph, state.selection, position, dx, dy);\n  }\n  return glyph;\n}\n\n\nexport interface EditorState {\n  glyph: Glyph;\n  selection: number[];\n  areaSelectRect: [number, number, number, number] | null;\n  dragSelection: [number, number, number, number] | null;\n  dragPoint: [number, [number, number, number, number]] | null;\n  resizeSelection: [RectPointPosition, [number, number, number, number]] | null;\n  ctmInv: ((x: number, y: number) => [number, number]) | null;\n}\n\nconst initialState: EditorState = {\n  glyph: parseGlyph(args.get('data') || ''),\n  selection: [],\n  areaSelectRect: null,\n  dragSelection: null,\n  dragPoint: null,\n  resizeSelection: null,\n  ctmInv: null,\n};\n\nconst editor = reducerWithInitialState(initialState)\n  .case(editorActions.selectSingle, (state, index) => ({\n    ...state,\n    selection: [index],\n  }))\n  .case(editorActions.selectAddSingle, (state, index) => ({\n    ...state,\n    selection: state.selection.includes(index) ? state.selection : state.selection.concat([index]),\n  }))\n  .case(editorActions.selectRemoveSingle, (state, index) => ({\n    ...state,\n    selection: state.selection.filter((index2) => index !== index2),\n  }))\n  .case(editorActions.selectAll, (state) => ({\n    ...state,\n    selection: state.glyph.map((_gLine, index) => index),\n  }))\n  .case(editorActions.selectNone, (state) => ({\n    ...state,\n    selection: [],\n  }))\n  .case(editorActions.selectPrev, (state) => {\n    if (state.glyph.length === 0) {\n      return { ...state, selection: [] };\n    }\n    const firstSelected = state.selection.length === 0 ? 0 : Math.min(...state.selection);\n    return {\n      ...state,\n      selection: [(firstSelected - 1 + state.glyph.length) % state.glyph.length],\n    };\n  })\n  .case(editorActions.selectNext, (state) => {\n    if (state.glyph.length === 0) {\n      return { ...state, selection: [] };\n    }\n    const firstSelected = state.selection.length === 0 ? -1 : Math.max(...state.selection);\n    return {\n      ...state,\n      selection: [(firstSelected + 1 + state.glyph.length) % state.glyph.length],\n    };\n  })\n\n  .case(editorActions.startAreaSelect, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      areaSelectRect: [x1, y1, x1, y1],\n    };\n  })\n  .case(editorActions.startSelectionDrag, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      dragSelection: [x1, y1, x1, y1],\n    };\n  })\n  .case(editorActions.startPointDrag, (state, [evt, pointIndex]) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      dragPoint: [pointIndex, [x1, y1, x1, y1]],\n    };\n  })\n  .case(editorActions.startResize, (state, [evt, position]) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      resizeSelection: [position, [x1, y1, x1, y1]],\n    };\n  })\n\n  .case(editorActions.mouseMove, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    if (state.areaSelectRect) {\n      const [x1, y1] = state.areaSelectRect;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        areaSelectRect: [x1, y1, x2, y2],\n      };\n    }\n    if (state.dragSelection) {\n      const [x1, y1] = state.dragSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        dragSelection: [x1, y1, x2, y2],\n      };\n    }\n    if (state.dragPoint) {\n      const [pointIndex, [x1, y1]] = state.dragPoint;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        dragPoint: [pointIndex, [x1, y1, x2, y2]],\n      };\n    }\n    if (state.resizeSelection) {\n      const [position, [x1, y1]] = state.resizeSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        resizeSelection: [position, [x1, y1, x2, y2]],\n      };\n    }\n    return state;\n  })\n  .case(editorActions.mouseUp, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    if (state.areaSelectRect) {\n      const [x1, y1] = state.areaSelectRect;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      const intersections = performAreaSelect(state.glyph, x1, y1, x2, y2);\n\n      const newSelection = Array.from(new Set(state.selection.concat(intersections)));\n      return {\n        ...state,\n        selection: newSelection,\n        areaSelectRect: null,\n      };\n    }\n    if (state.dragSelection) {\n      const [x1, y1] = state.dragSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n\n      const newGlyph = moveSelectedGlyphLines(state.glyph, state.selection, x2 - x1, y2 - y1);\n      return {\n        ...state,\n        glyph: newGlyph,\n        dragSelection: null,\n      };\n    }\n    if (state.dragPoint) {\n      const [pointIndex, [x1, y1]] = state.dragPoint;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n\n      const newGlyph = moveSelectedPoint(state.glyph, state.selection, pointIndex, x2 - x1, y2 - y1);\n      return {\n        ...state,\n        glyph: newGlyph,\n        dragPoint: null,\n      };\n    }\n    if (state.resizeSelection) {\n      const [position, [x1, y1]] = state.resizeSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n\n      const newGlyph = resizeSelected(state.glyph, state.selection, position, x2 - x1, y2 - y1);\n      return {\n        ...state,\n        glyph: newGlyph,\n        resizeSelection: null,\n      };\n    }\n    return state;\n  })\n\n  .case(editorActions.updateCTMInv, (state, ctmInv) => ({\n    ...state,\n    ctmInv,\n  }));\n\nexport default editor;\n","import { combineReducers } from 'redux';\n\nimport editor, { EditorState } from './editor';\n\nexport type AppState = {\n  editor: EditorState;\n};\n\nexport default combineReducers<AppState>({\n  editor,\n});\n","import React from 'react';\n\nimport { Polygons } from '@kurgm/kage-engine';\n\nexport interface StrokeComponentProps {\n  polygons: Polygons;\n}\n\nconst StrokeComponent = (props: StrokeComponentProps) => (\n  <>\n    {props.polygons.array.map((polygon, i) => (\n      <polygon key={i} points={polygon.array.map(({ x, y }) => `${x},${y} `).join(\"\")} />\n    ))}\n  </>\n);\n\nexport default StrokeComponent;\n","import React from 'react';\n\nimport { Glyph } from '../kageUtils';\nimport { makeGlyphSeparated } from '../kage';\nimport Stroke from './Stroke';\n\nimport './Glyph.css'\n\nexport interface GlyphComponentProps {\n  glyph: Glyph;\n  selection: number[];\n  handleMouseDownDeselectedStroke?: (evt: React.MouseEvent, index: number) => void;\n  handleMouseDownSelectedStroke?: (evt: React.MouseEvent, index: number) => void;\n}\n\nconst GlyphComponent = (props: GlyphComponentProps) => {\n  const polygonsSep = makeGlyphSeparated(props.glyph);\n\n  const { selection } = props;\n  const nonSelection = polygonsSep.map((_polygons, index) => index)\n    .filter((index) => !selection.includes(index));\n\n  return (\n    <>\n      <g className=\"strokes-deselected\">\n        {nonSelection.map((index) => (\n          <g key={index} onMouseDown={(evt) => props.handleMouseDownDeselectedStroke?.(evt, index)}>\n            <Stroke polygons={polygonsSep[index]} />\n          </g>\n        ))}\n      </g>\n      <g className=\"strokes-selected\">\n        {selection.map((index) => (\n          <g key={index} onMouseDown={(evt) => props.handleMouseDownSelectedStroke?.(evt, index)}>\n            <Stroke polygons={polygonsSep[index]} />\n          </g>\n        ))}\n      </g>\n    </>\n  );\n};\n\nexport default GlyphComponent;\n","import React from 'react';\n\nimport './AreaSelectRect.css';\n\ninterface AreaSelectRectProps {\n  rect: [number, number, number, number] | null;\n}\n\nconst AreaSelectRect = (props: AreaSelectRectProps) => {\n  if (!props.rect) {\n    return null;\n  }\n  let [x1, y1, x2, y2] = props.rect;\n  if (x1 > x2) {\n    // swap\n    const temp = x1;\n    x1 = x2;\n    x2 = temp;\n  }\n  if (y1 > y2) {\n    // swap\n    const temp = y1;\n    y1 = y2;\n    y2 = temp;\n  }\n\n  return <rect className='areaselect-rect' x={x1} y={y1} width={x2 - x1} height={y2 - y1} />;\n};\n\nexport default AreaSelectRect;\n","import React from 'react';\n\nimport './ControlPoint.css';\n\ninterface ControlPointProps {\n  x: number;\n  y: number;\n  className?: string;\n  handleMouseDown: (evt: React.MouseEvent) => void;\n}\n\nconst ControlPoint = (props: ControlPointProps) => (\n  <rect\n    x={props.x - 4}\n    y={props.y - 4}\n    width={8} height={8}\n    className={`controlpoint-rect ${props.className || ''}`}\n    onMouseDown={props.handleMouseDown}\n  />\n);\n\nexport default ControlPoint;\n","import React from 'react';\n\nimport { RectPointPosition } from '../actions/editor';\nimport ControlPoint from './ControlPoint';\n\nimport { SelectionControlState, SelectionControlActions } from '../containers/SelectionControl';\n\nimport './SelectionControl.css';\n\ninterface OwnProps {\n}\n\ntype SelectionControlProps = OwnProps & SelectionControlState & SelectionControlActions;\n\nconst SelectionControl = (props: SelectionControlProps) => (\n  <>\n    {props.rectControl && <>\n      <rect\n        className='selection-rect'\n        x={props.rectControl.coords[0]}\n        y={props.rectControl.coords[1]}\n        width={props.rectControl.coords[2] - props.rectControl.coords[0]}\n        height={props.rectControl.coords[3] - props.rectControl.coords[1]}\n      />\n      <ControlPoint\n        x={(props.rectControl.coords[0] + props.rectControl.coords[2]) / 2}\n        y={props.rectControl.coords[1]}\n        className='north'\n        handleMouseDown={(evt) => props.handleMouseDownRectControl(evt, RectPointPosition.north)}\n      />\n      <ControlPoint\n        x={props.rectControl.coords[0]}\n        y={(props.rectControl.coords[1] + props.rectControl.coords[3]) / 2}\n        className='west'\n        handleMouseDown={(evt) => props.handleMouseDownRectControl(evt, RectPointPosition.west)}\n      />\n      <ControlPoint\n        x={(props.rectControl.coords[0] + props.rectControl.coords[2]) / 2}\n        y={props.rectControl.coords[3]}\n        className='south'\n        handleMouseDown={(evt) => props.handleMouseDownRectControl(evt, RectPointPosition.south)}\n      />\n      <ControlPoint\n        x={props.rectControl.coords[2]}\n        y={(props.rectControl.coords[1] + props.rectControl.coords[3]) / 2}\n        className='east'\n        handleMouseDown={(evt) => props.handleMouseDownRectControl(evt, RectPointPosition.east)}\n      />\n      <ControlPoint\n        x={props.rectControl.coords[2]}\n        y={props.rectControl.coords[3]}\n        className='southeast'\n        handleMouseDown={(evt) => props.handleMouseDownRectControl(evt, RectPointPosition.southeast)}\n      />\n    </>}\n    {props.pointControl.map(({ x, y, className }, index) => (\n      <ControlPoint\n        key={index}\n        x={x} y={y}\n        className={className}\n        handleMouseDown={(evt) => props.handleMouseDownPointControl(evt, index)}\n      />\n    ))}\n  </>\n);\n\nexport default SelectionControl;","import { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { createSelector } from 'reselect';\n\nimport { editorActions, RectPointPosition } from '../actions/editor';\nimport SelectionControl from '../components/SelectionControl';\nimport { AppState } from '../reducers';\nimport { getGlyphLinesBBX } from '../kageUtils';\nimport { applyDraggingEffectToGlyph } from '../reducers/editor';\n\nexport interface RectControl {\n  multiSelect: boolean;\n  coords: [number, number, number, number];\n}\nexport interface ControlPoint {\n  x: number;\n  y: number;\n  className: string;\n}\n\nexport interface SelectionControlState {\n  rectControl: RectControl | null;\n  pointControl: ControlPoint[];\n}\n\nexport interface SelectionControlActions {\n  handleMouseDownRectControl: (evt: React.MouseEvent, position: RectPointPosition) => void;\n  handleMouseDownPointControl: (evt: React.MouseEvent, pointIndex: number) => void;\n}\n\nconst mapStateToProps = createSelector(\n  [\n    (state: AppState) => applyDraggingEffectToGlyph(state.editor),\n    (state: AppState) => state.editor.selection,\n  ],\n  (glyph, selection): SelectionControlState => {\n    if (selection.length === 0) {\n      return { rectControl: null, pointControl: [] };\n    }\n    if (selection.length > 1) {\n      const selectedStrokes = selection.map((index) => glyph[index]);\n      const bbx = getGlyphLinesBBX(selectedStrokes);\n      return {\n        rectControl: {\n          multiSelect: true,\n          coords: bbx,\n        },\n        pointControl: [],\n      };\n    }\n    const selectedStroke = glyph[selection[0]];\n    switch (selectedStroke.value[0]) {\n      case 0:\n      case 9:\n      case 99:\n        return {\n          rectControl: {\n            multiSelect: false,\n            coords: [\n              selectedStroke.value[3],\n              selectedStroke.value[4],\n              selectedStroke.value[5],\n              selectedStroke.value[6],\n            ],\n          },\n          pointControl: [],\n        };\n      case 1:\n      case 2:\n      case 3:\n      case 4:\n      case 6:\n      case 7: {\n        const pointControl: ControlPoint[] = [];\n        for (let i = 3; i + 2 <= selectedStroke.value.length; i += 2) {\n          pointControl.push({\n            x: selectedStroke.value[i],\n            y: selectedStroke.value[i + 1],\n            className: '', // FIXME: match detection\n          });\n        }\n        return { rectControl: null, pointControl };\n      }\n      default:\n        return { rectControl: null, pointControl: [] };\n    }\n  }\n);\n\nconst mapDispatchToProps = (dispatch: Dispatch): SelectionControlActions => ({\n  handleMouseDownRectControl: (evt: React.MouseEvent, position: RectPointPosition) => {\n    dispatch(editorActions.startResize([evt, position]));\n    evt.stopPropagation();\n  },\n  handleMouseDownPointControl: (evt: React.MouseEvent, pointIndex: number) => {\n    dispatch(editorActions.startPointDrag([evt, pointIndex]));\n    evt.stopPropagation();\n  },\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectionControl);\n","import React, { useEffect } from 'react';\n\nimport { EditorState } from '../reducers/editor';\n\nimport Glyph from './Glyph';\nimport AreaSelectRect from './AreaSelectRect';\nimport SelectionControl from '../containers/SelectionControl';\n\nimport { GlyphAreaActions } from '../containers/GlyphArea';\nimport './GlyphArea.css';\n\ninterface OwnProps {\n}\n\ntype GlyphAreaProps = OwnProps & EditorState & GlyphAreaActions;\n\nconst GlyphArea = (props: GlyphAreaProps) => {\n  const { handleMouseMove, handleMouseUp } = props;\n  useEffect(() => {\n    document.addEventListener('mousemove', handleMouseMove)\n    document.addEventListener('mouseup', handleMouseUp);\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [handleMouseMove, handleMouseUp]);\n\n  return (\n    <div className=\"glyph-area\">\n      <svg\n        width=\"100%\" height=\"100%\" viewBox=\"-20 -20 500 240\"\n        onMouseDownCapture={props.handleMouseDownCapture}\n        onMouseDown={props.handleMouseDownBackground}\n      >\n        {/* TODO: grid */}\n        <rect x=\"0\" y=\"0\" width=\"200\" height=\"200\" className=\"glyph-boundary\" />\n        <rect x=\"12\" y=\"12\" width=\"176\" height=\"176\" className=\"glyph-guide\" />\n        <Glyph\n          glyph={props.glyph}\n          selection={props.selection}\n          handleMouseDownDeselectedStroke={props.handleMouseDownDeselectedStroke}\n          handleMouseDownSelectedStroke={props.handleMouseDownSelectedStroke}\n        />\n        <SelectionControl />\n        <AreaSelectRect rect={props.areaSelectRect} />\n      </svg>\n    </div>\n  );\n};\n\nexport default GlyphArea;\n","import { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\n\nimport { editorActions, CTMInv } from '../actions/editor';\nimport GlyphArea from '../components/GlyphArea';\nimport { AppState } from '../reducers';\nimport { applyDraggingEffectToGlyph } from '../reducers/editor';\n\nexport interface GlyphAreaActions {\n  handleMouseDownCapture: (evt: React.MouseEvent) => void;\n\n  handleMouseDownBackground: (evt: React.MouseEvent) => void;\n  handleMouseDownDeselectedStroke: (evt: React.MouseEvent, index: number) => void;\n  handleMouseDownSelectedStroke: (evt: React.MouseEvent, index: number) => void;\n\n  handleMouseMove: (evt: MouseEvent) => void;\n  handleMouseUp: (evt: MouseEvent) => void;\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  ...state.editor,\n  glyph: applyDraggingEffectToGlyph(state.editor),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): GlyphAreaActions => ({\n  handleMouseDownCapture: (evt: React.MouseEvent) => {\n    if (!(evt.target instanceof SVGSVGElement)) {\n      return;\n    }\n    const ctm = evt.target.getScreenCTM();\n    if (!ctm) {\n      return;\n    }\n    const pt = evt.target.createSVGPoint();\n    const ctmInv: CTMInv = (evtx, evty) => {\n      pt.x = evtx;\n      pt.y = evty;\n      const { x, y } = pt.matrixTransform(ctm.inverse());\n      return [x, y];\n    };\n    dispatch(editorActions.updateCTMInv(ctmInv));\n  },\n\n  handleMouseDownBackground: (evt: React.MouseEvent) => {\n    if (!(evt.shiftKey || evt.ctrlKey)) {\n      dispatch(editorActions.selectNone());\n    }\n    dispatch(editorActions.startAreaSelect(evt));\n  },\n  handleMouseDownDeselectedStroke: (evt: React.MouseEvent, index: number) => {\n    if (evt.shiftKey || evt.ctrlKey) {\n      dispatch(editorActions.selectAddSingle(index));\n    } else {\n      dispatch(editorActions.selectSingle(index));\n    }\n    dispatch(editorActions.startSelectionDrag(evt));\n    evt.stopPropagation();\n  },\n  handleMouseDownSelectedStroke: (evt: React.MouseEvent, index: number) => {\n    if (evt.shiftKey || evt.ctrlKey) {\n      dispatch(editorActions.selectRemoveSingle(index));\n    }\n    dispatch(editorActions.startSelectionDrag(evt));\n    evt.stopPropagation();\n  },\n\n  handleMouseMove: (evt: MouseEvent) => {\n    dispatch(editorActions.mouseMove(evt));\n  },\n  handleMouseUp: (evt: MouseEvent) => {\n    dispatch(editorActions.mouseUp(evt));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GlyphArea);\n","import React from 'react';\nimport './App.css';\n\nimport GlyphArea from './containers/GlyphArea';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GlyphArea />\n      <div className=\"editor-controls\">\n      </div>\n      <div className=\"parts-list-area\" />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport jaTranslation from './locales/ja.json';\n\nimport args from \"./args\";\n\nconst resources = {\n  ja: {\n    translation: jaTranslation,\n  },\n};\n\nconst host = args.get('host');\nlet lng = 'ja';\nif (host) {\n  switch (host.split('.')[0]) {\n    case 'en':\n      lng = 'en';\n      break;\n    case 'ko':\n      lng = 'ko';\n      break;\n    case 'zhs':\n      lng = 'zh-Hans';\n      break;\n    case 'zht':\n      lng = 'zh-Hant';\n      break;\n  }\n}\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng,\n\n    returnObjects: true,\n    interpolation: {\n      escapeValue: false, // react already safes from xss\n    },\n  });\n\nexport default i18n;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from './reducers';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './i18n';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}