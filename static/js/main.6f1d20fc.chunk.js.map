{"version":3,"sources":["kageUtils/glyph.ts","args.ts","actions/drag.ts","actions/select.ts","kageUtils/freehand.ts","kageUtils/reflectrotate.ts","kageUtils/connection.ts","kageUtils/transform.ts","actions/editor.ts","callapi.ts","kage.ts","kageUtils/bbx.ts","selectors/draggedGlyph.ts","kageUtils/stretchparam.ts","kageUtils/decompose.ts","kageUtils/stroketype.ts","kageUtils/match.ts","reducers/editor.ts","actions/display.ts","actions/undo.ts","reducers/index.ts","reducers/undo.ts","reducers/select.ts","reducers/drag.ts","reducers/display.ts","store.ts","components/Grid.tsx","components/Stroke.tsx","components/Glyph.tsx","components/StrokeCenterLine.tsx","components/ControlPoint.tsx","components/SelectionControl.tsx","components/AreaSelectRect.tsx","components/GlyphArea.tsx","components/SelectionInfo.tsx","selectors/submitGlyph.ts","components/SubmitPreview.tsx","components/EditorControls.tsx","components/PartsList.tsx","components/PartsSearch.tsx","components/SubmitForm.tsx","components/OptionModal.tsx","App.tsx","shortcuts.ts","serviceWorker.ts","i18n.ts","index.tsx"],"names":["getNumColumns","strokeType","unparseGlyphLine","glyphLine","values","value","map","num","Math","round","partName","join","parseGlyph","glyphStr","split","line","glyphLineStr","splitLine","numColumns","i","push","floor","parseGlyphLine","filter","gLine","length","unparseGlyph","glyph","args","URLSearchParams","window","location","hash","slice","host","get","ssl","name","related","edittime","data","summary","gwHosts","document","referrer","referrerUrl","URL","includes","protocol","e","RectPointPosition","actionCreator","actionCreatorFactory","selectActions","selectSingle","selectAddSingle","selectRemoveSingle","selectNone","selectAll","selectDeselected","selectPrev","selectNext","snapped","ReflectRotateType","dragActions","startBackgroundDrag","startSelectionDrag","startPointDrag","startResize","mouseMove","mouseUp","updateCTMInv","connectablePairs","position","strokeTypes","shapeTypes","matchConnectablePoint","point","shapeType","getConnectablePoints","result","coord","pointIndex","endPointIndex","listupConnectedPoints","memoizeOne","points","sPoints","lineIndex","sPoint","forEach","dPoint","some","point2","point1","filter1","filter2","glyph1","points1","glyph2","points2","every","index","listupConnectedPointsOfSelection","selection","selectedDescs","applyGlyphLineOperation","tX","tY","applyGlyphPointOperation","pdescs","newGlyph","newValue","moveSelectedGlyphLines","dx","dy","targetDescs","x","y","moveSelectedPoint","selectedDesc","targetDesc","resizeSelectedGlyphLines","oldBBX","newBBX","x11","y11","x12","y12","x21","y21","x22","y22","resizeGlyphLine","avg","nums","reduce","a","b","sum","lerp","x1","x2","k","norm2","drawFreehand","startX","startY","endX","endY","lastStroke","newLastStroke","concat","centroidX","centroidY","midX","midY","dis","sqrt","abs","correctStroke","mid1X","mid1Y","mid2X","mid2Y","startType","endType","ev","undefined","minVal","Infinity","datum","val","minBy","leftBottomX","leftBottomY","dx1","dy1","dx2","dy2","cosAngle","min","newStroke","snapStrokeStart","snapStrokeEnd","snapStrokeTilt","snapToNewStroke","setGlyphValue","column","newGLine","snapVerticalStroke","vertStroke","leftType","middleType","rightType","ti","xi","yi","nx","ny","minX","maxX","minY","maxY","horiStroke","y1","y2","snapHorizontalStroke","midStartShape","rightStartShape","snapStrokeSegmentTilt","point1Index","x1i","y1i","x2i","y2i","sx1","sy1","sx2","sy2","editorActions","loadedBuhin","loadedStretchParam","changeStrokeType","changeHeadShapeType","changeTailShapeType","changeStretchCoeff","changeReflectRotateOpType","swapWithPrev","swapWithNext","insertPart","paste","copy","cut","delete","decomposeSelected","moveSelected","toggleFreehand","escape","finishEdit","callApi","path","fetch","response","ok","Error","text","getSource","encodeURIComponent","search","query","kage_","Kage","getKage","buhinMap","fallback","shotai","kBuhin","kShotai","waiting","Set","loadAbsentBuhin","has","add","then","source","stretchMatch","exec","params","store","dispatch","catch","err","console","error","filteredGlyphIsEqual","gLine1","makeGlyphSeparated_","makeGlyphSeparated","map1","shotai1","map2","shotai2","makeGlyphSeparatedFactory","isEqual","makeGlyphSeparatedForSubmit","bbxOfPoints","xs","ys","max","getGlyphLineBBX","mergeBBX","getGlyphLinesBBX","glyphLines","gLines1","gLines2","resizeSelected","selectedGlyphLine","north","west","south","east","southeast","newGlyphLine","draggedGlyphSelector","createSelector","state","dragSelection","dragPoint","resizeSelection","freehandStroke","getStretchPositions","setStretchPositions","positions","sx","sy","tx","ty","normalizeStretchPositions","calcStretchScalar","param","x0","y0","decomposeDeepGlyph","getEachStrokes","stroke","columns","a1","a2_100","kirikuchiAdjustment","tateAdjustment","a3_100","opt3","mageAdjustment","x3","y3","x4","y4","decomposeDeep","headShapeTypes","1","2","3","4","6","7","tailShapeTypes","validStrokeShapeTypes","isValidStrokeShapeTypes","s0","s1","s2","MatchType","reflectRotateTypes","reflectX","reflectY","rotate90","rotate180","rotate270","reflectRotateTypeParamsMap","setGlyphLine","displayActions","openOptionModal","closeOptionModal","setGridDisplay","setGridOriginX","setGridOriginY","setGridSpacingX","setGridSpacingY","setShotai","setStrokeCenterLineDisplay","undoActions","undo","redo","initialState","areaSelectRect","ctmInv","freehandMode","Map","stretchParamMap","clipboard","undoStacks","exitEvent","showOptionModal","grid","display","originX","originY","spacingX","spacingY","showStrokeCenterLine","reducer","type","reducerWithInitialState","case","default","oldState","action","newState","glyphLine1","glyphLine2","value1","pushUndo","undoable","withHandling","builder","index2","_gLine","firstSelected","evt","clientX","clientY","lastX","lastY","splice","intersections","polygonsSep","gAreaPolygon","array","polygon","gPolygon","polygonInPolygon","polygonIntersectsPolygon","performAreaSelect","newSelection","Array","from","newMap","set","newType","oldType","oldNumPoints","newNumPoints","xm","ym","xm1","ym1","xm2","ym2","selectedLine","stretchParam","calcStretchPositions","opType","targetLines","newLines","buhinSource","failedBuhin","kage","strokesArray","box","getBox","isStretchEnabled","oldGlyphLine","stretchedX","stretch","stretchedY","tx2","ty2","px1","py1","px2","py2","revX","revY","decompose","subindex","createStore","Grid","useSelector","className","key","d","StrokeComponent","props","polygons","GlyphComponent","nonSelection","_polygons","onMouseDown","handleMouseDownDeselectedStroke","Stroke","handleMouseDownSelectedStroke","StrokeCenterLine","strokes","v","getMatchType","none","isOnline","match","online","ControlPoint","width","height","handleMouseDown","selectionControlSelector","rectControl","pointControl","selectedStrokes","multiSelect","coords","selectedStroke","matchType","SelectionControl","useDispatch","handleMouseDownRectControl","useCallback","stopPropagation","handleMouseDownNorthPoint","handleMouseDownWestPoint","handleMouseDownSouthPoint","handleMouseDownEastPoint","handleMouseDownSoutheastPoint","handleMouseDownPointControls","useMemo","_control","AreaSelectRect","rect","temp","GlyphArea","svgClassName","handleMouseDownCapture","ctm","currentTarget","getScreenCTM","pt","createSVGPoint","ictm","inverse","evtx","evty","matrixTransform","handleMouseDownBackground","shiftKey","ctrlKey","preventDefault","useEffect","handleMouseMove","handleMouseUp","addEventListener","removeEventListener","viewBox","onMouseDownCapture","selectedGlyphLineSelector","draggedGlyph","strokeInfoSelector","headShapeType","tailShapeType","validTypes","coordString","partInfoSelector","entityName","aliasMatch","stretchCoeff","reflectRotateInfoSelector","find","param1","param2","otherInfoSelector","selectedStroke_","isMultiple","selectIndexStringSelector","glyphLength","selectedIndexString","sort","buttonsDisabledSelector","swapPrevDisabled","swapNextDisabled","selectPrevDisabled","selectNextDisabled","SelectionInfo","strokeInfo","partInfo","reflectRotateInfo","otherInfo","selectIndexString","shallowEqual","t","useTranslation","onChange","entity","disabled","onClick","submitGlyphSelector","SubmitPreview","submitGlyph","EditorControls","undoDisabled","redoDisabled","pasteDisabled","decomposeDisabled","options","nativeEvent","getImageURL","PartsList","handleItemClick","handleItemMouseEnter","handleImageClick","dataset","handleImageMouseEnter","names","alt","title","data-name","src","onMouseEnter","searchSuggestions","initialQuery","QueryTooShortError","initialSearchState","PartsSearch","queryInputRef","useRef","useState","searchState","setSearchState","startSearch","reason","newSearchState","currentSearchState","handleSearch","current","handleFormSubmit","hoverNameRef","textContent","onSubmit","defaultValue","list","ref","id","suggestion","message","glyphName","formAction","formStyle","visibility","SubmitForm","formRef","submit","style","method","ReactModal","setAppElement","OptionModal","handleRequestClose","handleGridDisplayChange","checked","handleGridOriginXChange","valueAsNumber","handleGridOriginYChange","handleGridSpacingXChange","handleGridSpacingYChange","handleShotaiChange","handleStrokeCenterLineChange","i18n","handleLanguageChange","changeLanguage","isOpen","onRequestClose","shouldCloseOnEsc","language","App","useHotkeys","useShortcuts","Boolean","hostname","resources","ja","translation","en","lng","use","initReactI18next","init","fallbackLng","returnObjects","interpolation","escapeValue","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6f1d20fc.chunk.js","sourcesContent":["export interface GlyphLine {\n  value: number[];\n  partName?: string;\n}\n\nexport const getNumColumns = (strokeType: number): number => {\n  switch (strokeType) {\n    case 0:\n    case 1:\n    case 9:\n      return 7;\n    case 2:\n    case 3:\n    case 4:\n      return 9;\n    case 6:\n    case 7:\n    case 99:\n      return 11;\n    default:\n      return 0;\n  }\n};\n\nexport const parseGlyphLine = (glyphLineStr: string): GlyphLine => {\n  const splitLine = glyphLineStr.split(':');\n  const strokeType = +splitLine[0];\n  const numColumns = getNumColumns(strokeType);\n  const value = [];\n  for (let i = 0; i < numColumns; i++) {\n    value.push(Math.floor(+splitLine[i] || 0));\n  }\n  if (value[0] === 99) {\n    const partName = splitLine[7] || '';\n    return { value, partName }\n  }\n  return { value };\n};\n\nexport const unparseGlyphLine = (glyphLine: GlyphLine): string => {\n  const values: (number | string)[] = glyphLine.value.map((num) => Math.round(num));\n  if (values[0] === 99) {\n    values[7] = glyphLine.partName || '';\n  }\n  return values.join(':');\n};\n\nexport const isValidGlyphLine = (glyphLine: GlyphLine): boolean => (\n  glyphLine.value.length !== 0 &&\n  (\n    glyphLine.value[0] !== 0 ||\n    glyphLine.value[1] === 97 || glyphLine.value[1] === 98 || glyphLine.value[1] === 99\n  )\n);\n\n\nexport type Glyph = GlyphLine[];\n\nexport const parseGlyph = (glyphStr: string): Glyph => (\n  glyphStr.split(/[$\\r\\n]+/)\n    .map((line) => parseGlyphLine(line))\n    .filter((gLine) => isValidGlyphLine(gLine))\n);\n\nexport const unparseGlyph = (glyph: Glyph): string => (\n  glyph\n    .map((gLine) => unparseGlyphLine(gLine))\n    .join('$')\n);\n\nexport const isGlyphDeepEqual = (glyph1: Glyph, glyph2: Glyph) => (\n  glyph1 === glyph2 || (\n    glyph1.length === glyph2.length &&\n    glyph1.every((glyphLine1, index) => {\n      const glyphLine2 = glyph2[index];\n      return glyphLine1 === glyphLine2 || (\n        glyphLine1.partName === glyphLine2.partName &&\n        glyphLine1.value.length === glyphLine2.value.length &&\n        glyphLine1.value.every((value1, index) => value1 === glyphLine2.value[index])\n      );\n    })\n  )\n);\n\n\nexport interface PointDescriptor {\n  lineIndex: number;\n  pointIndex: number;\n}\n","const args = new URLSearchParams(window.location.hash.slice(1));\n\nlet host = args.get('host');\nlet ssl = args.get('ssl') !== 'false';\nconst name = args.get('name');\nconst related = args.get('related') || 'u3013';\nconst edittime = args.get('edittime');\nconst data = args.get('data') || '';\nconst summary = args.get('summary') || '';\n\nconst gwHosts = [\n  'glyphwiki.org',\n  'en.glyphwiki.org',\n  'ko.glyphwiki.org',\n  'zhs.glyphwiki.org',\n  'zht.glyphwiki.org',\n];\n\nif (!host && document.referrer) {\n  try {\n    const referrerUrl = new URL(document.referrer);\n    if (gwHosts.includes(referrerUrl.host)) {\n      host = referrerUrl.host;\n      ssl = referrerUrl.protocol === 'https:';\n    }\n  } catch (e) {\n  }\n}\n\nif (!host || !gwHosts.includes(host)) {\n  host = 'glyphwiki.org';\n}\n\nexport default {\n  host,\n  ssl,\n  name,\n  related,\n  edittime,\n  data,\n  summary,\n};\n","import actionCreatorFactory from 'typescript-fsa';\n\nexport type CTMInv = (x: number, y: number) => [number, number];\nexport enum RectPointPosition {\n  north,\n  south,\n  east,\n  west,\n  southeast,\n}\n\nconst actionCreator = actionCreatorFactory('EDITOR');\n\nexport const dragActions = {\n  startBackgroundDrag: actionCreator<React.MouseEvent>('BACKGROUND_DRAG_START'),\n  startSelectionDrag: actionCreator<React.MouseEvent>('SELECTION_DRAG_START'),\n  startPointDrag: actionCreator<[React.MouseEvent, number]>('MOVE_POINT_START'),\n  startResize: actionCreator<[React.MouseEvent, RectPointPosition]>('RESIZE_START'),\n\n  mouseMove: actionCreator<MouseEvent>('MOUSE_MOVE'),\n  mouseUp: actionCreator<MouseEvent>('MOUSE_UP'),\n\n  updateCTMInv: actionCreator<CTMInv>('UPDATE_CTMINV'),\n}\n","import actionCreatorFactory from 'typescript-fsa';\n\nconst actionCreator = actionCreatorFactory('SELECT');\n\nexport const selectActions = {\n  selectSingle: actionCreator<number>('SELECT_SINGLE'),\n  selectAddSingle: actionCreator<number>('SELECT_ADD_SINGLE'),\n  selectRemoveSingle: actionCreator<number>('SELECT_REMOVE_SINGLE'),\n  selectNone: actionCreator('SELECT_NONE'),\n  selectAll: actionCreator('SELECT_ALL'),\n  selectDeselected: actionCreator('SELECT_TOGGLE_ALL'),\n  selectPrev: actionCreator('SELECT_PREV'),\n  selectNext: actionCreator('SELECT_NEXT'),\n};\n","import { Glyph, GlyphLine } from './glyph';\nimport { applyGlyphLineOperation } from './transform';\n\nconst sum = (nums: number[]) => nums.reduce((a, b) => a + b, 0);\nconst avg = (nums: number[]) => sum(nums) / nums.length;\nconst min: {\n  (data: number[]): number;\n  <T>(data: T[], ev: (val: T) => number): number;\n} = (data: any[], ev?: (val: any) => number) => {\n  let result = Infinity;\n  for (const datum of data) {\n    const val = ev ? ev(datum) : datum as number;\n    if (val < result) {\n      result = val;\n    }\n  }\n  return result;\n};\nconst minBy = <T>(data: T[], ev: (val: T) => number): T | undefined => {\n  let result: T | undefined = undefined;\n  let minVal = Infinity;\n  for (const datum of data) {\n    const val = ev(datum);\n    if (val < minVal) {\n      result = datum;\n      minVal = val;\n    }\n  }\n  return result;\n};\n\nconst lerp = (x1: number, x2: number, k: number) => x1 * (1 - k) + x2 * k;\nconst norm2 = (dx: number, dy: number) => dx * dx + dy * dy;\n\nexport const drawFreehand = (glyph: Glyph, points: [number, number][]): Glyph => {\n  const [startX, startY] = points[0];\n  const [endX, endY] = points[points.length - 1];\n  const dx = endX - startX;\n  const dy = endY - startY;\n\n  if (glyph.length > 0 && norm2(dx, dy) < 25 ** 2) {\n    const lastStroke = glyph[glyph.length - 1];\n    // ハネ部分かどうか？\n    if (\n      [1, 2, 3, 4, 6].includes(lastStroke.value[0]) &&\n      norm2(\n        startX - lastStroke.value[lastStroke.value.length - 2],\n        startY - lastStroke.value[lastStroke.value.length - 1]\n      ) < 10 ** 2\n    ) {\n      if ([1, 2, 6].includes(lastStroke.value[0]) && dx < 0) { // 左ハネに変更\n        const newLastStroke: GlyphLine = {\n          value: lastStroke.value.slice(),\n        };\n        newLastStroke.value[2] = 4;\n        if (newLastStroke.value[1] === 27) {\n          newLastStroke.value[1] = 22;\n        }\n        return glyph.slice(0, -1).concat([newLastStroke]);\n      }\n      if ([2, 6].includes(lastStroke.value[0]) && dx >= 0 && dy < 0) { // 右ハネに変更\n        const newLastStroke: GlyphLine = {\n          value: lastStroke.value.slice(),\n        };\n        newLastStroke.value[2] = 5;\n        if (newLastStroke.value[1] === 7) {\n          newLastStroke.value[1] = 0;\n        } else if (newLastStroke.value[1] === 27) {\n          newLastStroke.value[1] = 22;\n        }\n        return glyph.slice(0, -1).concat([newLastStroke]);\n      }\n      if ([3, 4].includes(lastStroke.value[0]) && dy < 0) { // 上ハネに変更\n        const newLastStroke: GlyphLine = {\n          value: lastStroke.value.slice(),\n        };\n        newLastStroke.value[2] = 5;\n        return glyph.slice(0, -1).concat([newLastStroke]);\n      }\n    }\n  }\n\n  const centroidX = avg(points.map(([x]) => x));\n  const centroidY = avg(points.map(([_x, y]) => y));\n\n  const midLerpRate = 3;\n  const midX = lerp((startX + endX) / 2, centroidX, midLerpRate);\n  const midY = lerp((startY + endY) / 2, centroidY, midLerpRate);\n\n  const dis = (dx * midY - dy * midX + startX * endY - startY * endX) / Math.sqrt(norm2(dx, dy));\n  if (\n    Math.abs(dis) <= 5 && // 曲がっていない\n    (\n      (dx > 0 && Math.abs(dy) <= dx * 0.5) || // 横\n      (dy > 0 && -dy <= dx && dx <= dy * 0.5) // 縦\n    )\n  ) { // 直線\n    const newStroke: GlyphLine = {\n      value: [1, 0, 0, startX, startY, endX, endY],\n    };\n    return correctStroke(glyph, newStroke);\n  }\n  if (dx < 0 && dy >= 50 && dis < 0 && dx * -3 < dy) { // 縦払い\n    const mid1X = startX;\n    const mid1Y = lerp(startY, endY, 1 / 3);\n    const mid2X = startX;\n    const mid2Y = lerp(startY, endY, 2 / 3);\n    const newStroke: GlyphLine = {\n      value: [7, 0, 7, startX, startY, mid1X, mid1Y, mid2X, mid2Y, endX, endY],\n    };\n    return correctStroke(glyph, newStroke);\n  }\n  // 曲線\n  let startType = 0;\n  let endType = 7;\n  if (dx > 0 && dy > 0 && dis > 0) { // 右払い or 折れ\n    const [leftBottomX, leftBottomY] = minBy(points, ([x, y]) => x - y)!;\n    const dx1 = startX - leftBottomX;\n    const dy1 = startY - leftBottomY;\n    const dx2 = endX - leftBottomX;\n    const dy2 = endY - leftBottomY;\n    const cosAngle = (dx1 * dx2 + dy1 * dy2) / Math.sqrt(norm2(dx1, dy1) * norm2(dx2, dy2));\n    if (dx1 < 50 && dx2 > 30 && -20 <= dy2 && dy2 <= 20 && cosAngle > -0.15) {\n      // 折れ\n      const midX = min(points, ([x]) => x);\n      const midY = endY;\n      const newStroke: GlyphLine = {\n        value: [3, 0, 0, startX, startY, midX, midY, endX, endY],\n      };\n      return correctStroke(glyph, newStroke);\n    }\n    startType = 7;\n    endType = 0;\n  } else if (dx > 0 && dy > 0 && dis < 0) { // 止め\n    startType = 7;\n    endType = 8;\n  }\n  const newStroke: GlyphLine = {\n    value: [2, startType, endType, startX, startY, midX, midY, endX, endY],\n  };\n  return correctStroke(glyph, newStroke);\n};\n\nconst round = (x: number) => Math.round(x);\n\nlet snapped: boolean[];\n\nconst correctStroke = (glyph: Glyph, newStroke: GlyphLine): Glyph => {\n  snapped = newStroke.value.map(() => false);\n  glyph = snapStrokeStart(glyph, newStroke);\n  glyph = snapStrokeEnd(glyph, newStroke);\n  snapStrokeTilt(newStroke);\n  newStroke = applyGlyphLineOperation(newStroke, round, round)\n  glyph = snapToNewStroke(glyph, newStroke);\n  return glyph.concat([newStroke]);\n};\n\nconst setGlyphValue = (glyph: Glyph, lineIndex: number, column: number, value: number): Glyph => {\n  if (glyph[lineIndex].value[column] === value) {\n    return glyph;\n  }\n  return glyph.map((gLine, index) => {\n    if (index !== lineIndex) {\n      return gLine;\n    }\n    const newGLine: GlyphLine = {\n      ...gLine,\n      value: gLine.value.slice(),\n    };\n    newGLine.value[column] = value;\n    return newGLine;\n  });\n};\n\nconst snapVerticalStroke = (\n  glyph: Glyph, vertStroke: GlyphLine, position: 'start' | 'end',\n  leftType: number, middleType: number, rightType: number\n): Glyph => {\n  const ti = position === 'start' ? 1 : 2;\n  const xi = position === 'start' ? 3 : vertStroke.value.length - 2;\n  const yi = xi + 1;\n  const nx = vertStroke.value[xi];\n  const ny = vertStroke.value[yi];\n  const minX = nx - 10;\n  const maxX = nx + 10;\n  const minY = ny - 10;\n  const maxY = ny + 10;\n  for (let lineIndex = glyph.length - 1; lineIndex >= 0; lineIndex--) {\n    const horiStroke = glyph[lineIndex];\n    if (horiStroke.value[0] !== 1) {\n      continue;\n    }\n    const x1 = horiStroke.value[3];\n    const y1 = horiStroke.value[4];\n    const x2 = horiStroke.value[5];\n    const y2 = horiStroke.value[6];\n    if (x2 - x1 < Math.abs(y2 - y1)) {\n      continue;\n    }\n    if (\n      [0, 2].includes(horiStroke.value[1]) &&\n      minX <= x1 && x1 <= maxX &&\n      minY <= y1 && y1 <= maxY\n    ) {\n      vertStroke.value[xi] = x1;\n      vertStroke.value[yi] = y1;\n      snapped[xi] = snapped[yi] = true;\n      vertStroke.value[ti] = leftType;\n      return setGlyphValue(glyph, lineIndex, 1, 2); // 接続(横)\n    }\n    if (\n      [0, 2].includes(horiStroke.value[2]) &&\n      minX <= x2 && x2 <= maxX &&\n      minY <= y2 && y2 <= maxY\n    ) {\n      vertStroke.value[xi] = x2;\n      vertStroke.value[yi] = y2;\n      snapped[xi] = snapped[yi] = true;\n      vertStroke.value[ti] = rightType;\n      return setGlyphValue(glyph, lineIndex, 2, 2); // 接続(横)\n    }\n    if (y1 === y2 && minY <= y1 && y1 <= maxY && x1 <= nx && nx <= x2) {\n      vertStroke.value[yi] = y1;\n      snapped[yi] = true;\n      vertStroke.value[ti] = middleType;\n      return glyph;\n    }\n  }\n  return glyph;\n};\n\nconst snapHorizontalStroke = (glyph: Glyph, horiStroke: GlyphLine, position: 'start' | 'end'): Glyph => {\n  const ti = position === 'start' ? 1 : 2;\n  const xi = position === 'start' ? 3 : 5;\n  const yi = xi + 1;\n  const nx = horiStroke.value[xi];\n  const ny = horiStroke.value[yi];\n  const minX = nx - 10;\n  const maxX = nx + 10;\n  const minY = ny - 10;\n  const maxY = ny + 10;\n  for (let lineIndex = glyph.length - 1; lineIndex >= 0; lineIndex--) {\n    const vertStroke = glyph[lineIndex];\n    if (![1, 2, 3, 4, 6, 7].includes(vertStroke.value[0])) {\n      continue;\n    }\n    const x1 = vertStroke.value[3];\n    const y1 = vertStroke.value[4];\n    const x2 = vertStroke.value[5];\n    const y2 = vertStroke.value[6];\n    if (vertStroke.value[0] === 1 && x2 - x1 > Math.abs(y2 - y1)) {\n      continue;\n    }\n    if (position === 'start') {\n      if (\n        [0, 12].includes(vertStroke.value[1]) &&\n        minX <= x1 && x1 <= maxX &&\n        minY <= y1 && y1 <= maxY\n      ) {\n        horiStroke.value[xi] = x1;\n        horiStroke.value[yi] = y1;\n        snapped[xi] = snapped[yi] = true;\n        horiStroke.value[ti] = 2;\n        return setGlyphValue(glyph, lineIndex, 1, 12); // 左上カド\n      }\n      if (\n        vertStroke.value[0] === 1 &&\n        [0, 13, 313, 413].includes(vertStroke.value[2]) &&\n        minX <= x2 && x2 <= maxX &&\n        minY <= y2 && y2 <= maxY\n      ) {\n        horiStroke.value[xi] = x2;\n        horiStroke.value[yi] = y2;\n        snapped[xi] = snapped[yi] = true;\n        horiStroke.value[ti] = 2;\n        return vertStroke.value[2] === 0\n          ? setGlyphValue(glyph, lineIndex, 2, 13) // 左下カド\n          : glyph;\n      }\n    } else {\n      if (\n        [0, 22].includes(vertStroke.value[1]) &&\n        minX <= x1 && x1 <= maxX &&\n        minY <= y1 && y1 <= maxY\n      ) {\n        horiStroke.value[xi] = x1;\n        horiStroke.value[yi] = y1;\n        snapped[xi] = snapped[yi] = true;\n        horiStroke.value[ti] = 2;\n        return setGlyphValue(glyph, lineIndex, 1, 22); // 右上カド\n      }\n      if (\n        vertStroke.value[0] === 1 &&\n        [0, 23, 24].includes(vertStroke.value[2]) &&\n        minX <= x2 && x2 <= maxX &&\n        minY <= y2 && y2 <= maxY\n      ) {\n        horiStroke.value[xi] = x2;\n        horiStroke.value[yi] = y2;\n        snapped[xi] = snapped[yi] = true;\n        horiStroke.value[ti] = 2;\n        return vertStroke.value[2] === 0\n          ? setGlyphValue(glyph, lineIndex, 2, 23) // 右下カド\n          : glyph;\n      }\n    }\n    if (x1 === x2 && minX <= x1 && x1 <= maxX && y1 <= ny && ny <= y2) {\n      horiStroke.value[xi] = x1;\n      snapped[xi] = true;\n      horiStroke.value[ti] = 2;\n      return glyph;\n    }\n  }\n  return glyph;\n};\n\nconst snapStrokeStart = (glyph: Glyph, newStroke: GlyphLine): Glyph => {\n  if (newStroke.value[0] !== 1) {\n    const y1 = newStroke.value[4];\n    const y2 = newStroke.value[6];\n    if (y1 > y2) {\n      return glyph;\n    }\n    const midStartShape = newStroke.value[1] === 7 ? 7 : 32;\n    const rightStartShape = newStroke.value[1] === 7 ? 27 : 22;\n    return snapVerticalStroke(glyph, newStroke, 'start', 12, midStartShape, rightStartShape);\n  }\n  const x1 = newStroke.value[3];\n  const y1 = newStroke.value[4];\n  const x2 = newStroke.value[5];\n  const y2 = newStroke.value[6];\n  if (x2 - x1 > Math.abs(y2 - y1)) {\n    return snapHorizontalStroke(glyph, newStroke, 'start');\n  }\n  if (y2 - y1 > 0) {\n    return snapVerticalStroke(glyph, newStroke, 'start', 12, 32, 22);\n  }\n  return glyph;\n};\nconst snapStrokeSegmentTilt = (newStroke: GlyphLine, point1Index: number) => {\n  const x1i = 3 + point1Index * 2;\n  const y1i = x1i + 1;\n  const x2i = x1i + 2;\n  const y2i = x1i + 3;\n\n  const x1 = newStroke.value[x1i];\n  const y1 = newStroke.value[y1i];\n  const x2 = newStroke.value[x2i];\n  const y2 = newStroke.value[y2i];\n\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n\n  if (Math.abs(dx) > Math.abs(dy) * 20) {\n    if (!snapped[y2i]) {\n      newStroke.value[y2i] = y1;\n      return;\n    }\n    if (!snapped[y1i]) {\n      newStroke.value[y1i] = y2;\n      return;\n    }\n  }\n  if (Math.abs(dy) > Math.abs(dx) * 20) {\n    if (!snapped[x2i]) {\n      newStroke.value[x2i] = x1;\n      return;\n    }\n    if (!snapped[x1i]) {\n      newStroke.value[x1i] = x2;\n      return;\n    }\n  }\n};\nconst snapStrokeTilt = (newStroke: GlyphLine) => {\n  switch (newStroke.value[0]) {\n    case 1:\n      snapStrokeSegmentTilt(newStroke, 0);\n      return;\n    case 3:\n      snapStrokeSegmentTilt(newStroke, 0);\n      snapStrokeSegmentTilt(newStroke, 1);\n      return;\n    case 4:\n      snapStrokeSegmentTilt(newStroke, 1);\n      return;\n    case 7:\n      newStroke.value[5] = newStroke.value[7] = newStroke.value[3];\n  }\n};\nconst snapStrokeEnd = (glyph: Glyph, newStroke: GlyphLine): Glyph => {\n  if (newStroke.value[0] !== 1) {\n    return glyph;\n  }\n  const x1 = newStroke.value[3];\n  const y1 = newStroke.value[4];\n  const x2 = newStroke.value[5];\n  const y2 = newStroke.value[6];\n  if (x2 - x1 > Math.abs(y2 - y1)) {\n    return snapHorizontalStroke(glyph, newStroke, 'end');\n  }\n  if (y2 - y1 > 0) {\n    return snapVerticalStroke(glyph, newStroke, 'end', 13, 32, 23);\n  }\n  return glyph;\n};\nconst snapToNewStroke = (glyph: Glyph, newStroke: GlyphLine): Glyph => {\n  if (newStroke.value[0] !== 1) {\n    return glyph;\n  }\n  const x1 = newStroke.value[3];\n  const y1 = newStroke.value[4];\n  const x2 = newStroke.value[5];\n  const y2 = newStroke.value[6];\n  if (y1 !== y2) {\n    return glyph;\n  }\n  const minY = y1 - 10;\n  const maxY = y1 + 10;\n  glyph.forEach((gLine, lineIndex) => {\n    if (gLine.value[0] !== 1 || gLine.value[2] !== 0) {\n      return;\n    }\n    const sx1 = gLine.value[3];\n    const sy1 = gLine.value[4];\n    const sx2 = gLine.value[5];\n    const sy2 = gLine.value[6];\n    if (sx2 - sx1 > Math.abs(sy2 - sy1)) {\n      return;\n    }\n    if (minY <= sy2 && sy2 <= maxY && x1 <= sx2 && sx2 <= x2) {\n      glyph = setGlyphValue(glyph, lineIndex, 2, 32);\n      glyph = setGlyphValue(glyph, lineIndex, 6, y1);\n    }\n  });\n  return glyph;\n};\n","export enum ReflectRotateType {\n  reflectX,\n  reflectY,\n  rotate90,\n  rotate180,\n  rotate270,\n}\n\nexport const reflectRotateTypes = [\n  ReflectRotateType.reflectX,\n  ReflectRotateType.reflectY,\n  ReflectRotateType.rotate90,\n  ReflectRotateType.rotate180,\n  ReflectRotateType.rotate270,\n];\n\nexport const reflectRotateTypeParamsMap: Record<ReflectRotateType, [number, number]> = {\n  [ReflectRotateType.reflectX]: [98, 0],\n  [ReflectRotateType.reflectY]: [97, 0],\n  [ReflectRotateType.rotate90]: [99, 1],\n  [ReflectRotateType.rotate180]: [99, 2],\n  [ReflectRotateType.rotate270]: [99, 3],\n};\n","import memoizeOne from 'memoize-one';\n\nimport { GlyphLine, Glyph, PointDescriptor, getNumColumns } from './glyph';\n\ninterface ConnectablePoint {\n  position: 'start' | 'end';\n  strokeType: number;\n  shapeType: number;\n  coord: [number, number];\n  pointIndex: number;\n}\n\ninterface ConnectablePointFilter {\n  position: 'start' | 'end';\n  strokeTypes: number[];\n  shapeTypes: number[];\n}\n\nconst connectablePairs: [ConnectablePointFilter, ConnectablePointFilter][] = [\n  [\n    // 左上\n    {\n      position: 'start',\n      strokeTypes: [1],\n      shapeTypes: [2],\n    },\n    {\n      position: 'start',\n      strokeTypes: [1, 2, 3, 4, 6, 7],\n      shapeTypes: [12],\n    },\n  ],\n  [\n    // 左下\n    {\n      position: 'start',\n      strokeTypes: [1],\n      shapeTypes: [2],\n    },\n    {\n      position: 'end',\n      strokeTypes: [1],\n      shapeTypes: [13, 313, 413],\n    },\n  ],\n  [\n    // 右上\n    {\n      position: 'end',\n      strokeTypes: [1],\n      shapeTypes: [2],\n    },\n    {\n      position: 'start',\n      strokeTypes: [1, 2, 3, 4, 6, 7],\n      shapeTypes: [22, 27],\n    },\n  ],\n  [\n    // 右下\n    {\n      position: 'end',\n      strokeTypes: [1],\n      shapeTypes: [2],\n    },\n    {\n      position: 'end',\n      strokeTypes: [1],\n      shapeTypes: [23, 24],\n    },\n  ],\n];\n\nconst matchConnectablePoint = (filter: ConnectablePointFilter, point: ConnectablePoint) => (\n  filter.position === point.position &&\n  filter.strokeTypes.includes(point.strokeType) &&\n  filter.shapeTypes.includes(point.shapeType)\n)\n\nconst isConnectable = (point1: ConnectablePoint, point2: ConnectablePoint) => (\n  point1.coord[0] === point2.coord[0] &&\n  point1.coord[1] === point2.coord[1] &&\n  connectablePairs.some(([filter1, filter2]) => (\n    (matchConnectablePoint(filter1, point1) && matchConnectablePoint(filter2, point2)) ||\n    (matchConnectablePoint(filter2, point1) && matchConnectablePoint(filter1, point2))\n  ))\n);\n\nconst getConnectablePoints = (glyphLine: GlyphLine): ConnectablePoint[] => {\n  const result: ConnectablePoint[] = [];\n  switch (glyphLine.value[0]) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 6:\n    case 7: {\n      result.push({\n        position: 'start',\n        strokeType: glyphLine.value[0],\n        shapeType: glyphLine.value[1],\n        coord: [\n          glyphLine.value[3],\n          glyphLine.value[4],\n        ],\n        pointIndex: 0,\n      });\n      const endPointIndex = (getNumColumns(glyphLine.value[0]) - 3) / 2 - 1;\n      result.push({\n        position: 'end',\n        strokeType: glyphLine.value[0],\n        shapeType: glyphLine.value[2],\n        coord: [\n          glyphLine.value[3 + endPointIndex * 2],\n          glyphLine.value[3 + endPointIndex * 2 + 1],\n        ],\n        pointIndex: endPointIndex,\n      });\n      break;\n    }\n  }\n  return result;\n};\n\nexport const listupConnectedPoints = memoizeOne((glyph: Glyph, points: PointDescriptor[]): PointDescriptor[] => {\n  const sPoints: ConnectablePoint[] = [];\n  for (const { lineIndex, pointIndex } of points) {\n    for (const sPoint of getConnectablePoints(glyph[lineIndex])) {\n      if (sPoint.pointIndex === pointIndex) {\n        sPoints.push(sPoint);\n      }\n    }\n  }\n  const result: PointDescriptor[] = [];\n  glyph.forEach((glyphLine, lineIndex) => {\n    for (const dPoint of getConnectablePoints(glyphLine)) {\n      if (sPoints.some((sPoint) => isConnectable(sPoint, dPoint))) {\n        result.push({\n          lineIndex,\n          pointIndex: dPoint.pointIndex,\n        });\n      }\n    }\n  });\n  return result;\n}, ([glyph1, points1], [glyph2, points2]) => (\n  glyph1 === glyph2 &&\n  points1.length === points2.length &&\n  points1.every((point1, index) => (\n    point1.lineIndex === points2[index].lineIndex &&\n    point1.pointIndex === points2[index].pointIndex\n  ))\n));\n\nexport const listupConnectedPointsOfSelection = memoizeOne((glyph: Glyph, selection: number[]): PointDescriptor[] => {\n  const selectedDescs: PointDescriptor[] = [];\n  for (const lineIndex of selection) {\n    const glyphLine = glyph[lineIndex];\n    selectedDescs.push({ lineIndex, pointIndex: 0 });\n    selectedDescs.push({ lineIndex, pointIndex: (getNumColumns(glyphLine.value[0]) - 3) / 2 - 1 });\n  }\n  return listupConnectedPoints(glyph, selectedDescs)\n    .filter(({ lineIndex }) => !selection.includes(lineIndex));\n});\n","import { GlyphLine, Glyph, PointDescriptor } from './glyph';\n\nimport { BBX } from './bbx';\nimport { listupConnectedPoints, listupConnectedPointsOfSelection } from './connection';\n\nexport const applyGlyphLineOperation = (glyphLine: GlyphLine, tX: (x: number) => number, tY: (y: number) => number): GlyphLine => {\n  switch (glyphLine.value[0]) {\n    case 99: {\n      const value = glyphLine.value.slice();\n      value[3] = tX(value[3]);\n      value[4] = tY(value[4]);\n      value[5] = tX(value[5]);\n      value[6] = tY(value[6]);\n      return { value, partName: glyphLine.partName };\n    }\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 6:\n    case 7:\n    case 9: {\n      const value = glyphLine.value.slice();\n      for (let i = 3; i + 2 <= value.length; i += 2) {\n        value[i] = tX(value[i]);\n        value[i + 1] = tY(value[i + 1]);\n      }\n      return { value };\n    }\n    default:\n      return glyphLine;\n  }\n}\n\nexport const applyGlyphPointOperation = (glyph: Glyph, pdescs: PointDescriptor[], tX: (x: number) => number, tY: (y: number) => number): Glyph => {\n  if (pdescs.length === 0) {\n    return glyph;\n  }\n  const newGlyph = glyph.slice();\n  for (const { lineIndex, pointIndex } of pdescs) {\n    const glyphLine = newGlyph[lineIndex];\n    const newValue = glyphLine.value.slice();\n    newValue[3 + pointIndex * 2] = tX(newValue[3 + pointIndex * 2]);\n    newValue[3 + pointIndex * 2 + 1] = tY(newValue[3 + pointIndex * 2 + 1]);\n    newGlyph[lineIndex] = {\n      ...glyphLine,\n      value: newValue,\n    };\n  }\n  return newGlyph;\n};\n\n\nexport const moveSelectedGlyphLines = (glyph: Glyph, selection: number[], dx: number, dy: number): Glyph => {\n  if (selection.length === 0) {\n    return glyph;\n  }\n  const targetDescs = listupConnectedPointsOfSelection(glyph, selection);\n\n  const tX = (x: number) => Math.round(x + dx);\n  const tY = (y: number) => Math.round(y + dy);\n  glyph = glyph.map((glyphLine, index) => selection.includes(index)\n    ? applyGlyphLineOperation(glyphLine, tX, tY)\n    : glyphLine\n  );\n  glyph = applyGlyphPointOperation(glyph, targetDescs, tX, tY);\n  return glyph;\n};\n\nexport const moveSelectedPoint = (glyph: Glyph, selection: number[], pointIndex: number, dx: number, dy: number): Glyph => {\n  if (selection.length === 0) {\n    return glyph;\n  }\n  const lineIndex = selection[0];\n  const selectedDesc: PointDescriptor = { lineIndex, pointIndex };\n  const targetDescs = listupConnectedPoints(glyph, [selectedDesc])\n    .filter((targetDesc) => targetDesc.lineIndex !== lineIndex);\n  targetDescs.push(selectedDesc);\n\n  const tX = (x: number) => Math.round(x + dx);\n  const tY = (y: number) => Math.round(y + dy);\n  glyph = applyGlyphPointOperation(glyph, targetDescs, tX, tY);\n  return glyph;\n};\n\nexport const resizeGlyphLine = (glyphLine: GlyphLine, oldBBX: BBX, newBBX: BBX): GlyphLine => {\n  const [x11, y11, x12, y12] = oldBBX;\n  const [x21, y21, x22, y22] = newBBX;\n  const tX = (x: number) => Math.round(x21 + (x - x11) * (x22 - x21) / (x12 - x11));\n  const tY = (y: number) => Math.round(y21 + (y - y11) * (y22 - y21) / (y12 - y11));\n  return applyGlyphLineOperation(glyphLine, tX, tY);\n};\n\nexport const resizeSelectedGlyphLines = (glyph: Glyph, selection: number[], oldBBX: BBX, newBBX: BBX): Glyph => {\n  return glyph.map((glyphLine, index) => selection.includes(index)\n    ? resizeGlyphLine(glyphLine, oldBBX, newBBX)\n    : glyphLine\n  );\n};\n","import actionCreatorFactory from 'typescript-fsa';\n\nimport { StretchParam } from '../kageUtils/stretchparam';\nimport { ReflectRotateType } from '../kageUtils/reflectrotate';\n\nconst actionCreator = actionCreatorFactory('EDITOR');\n\nexport const editorActions = {\n  loadedBuhin: actionCreator<[string, string]>('LOAD_BUHIN_DATA'),\n  loadedStretchParam: actionCreator<[string, StretchParam]>('LOAD_STRETCH_PARAM'),\n\n  changeStrokeType: actionCreator<number>('CHANGE_STROKE_TYPE'),\n  changeHeadShapeType: actionCreator<number>('CHANGE_HEAD_SHAPE_TYPE'),\n  changeTailShapeType: actionCreator<number>('CHANGE_TAIL_SHAPE_TYPE'),\n  changeStretchCoeff: actionCreator<number>('CHANGE_STRETCH_COEFF'),\n  changeReflectRotateOpType: actionCreator<ReflectRotateType>('CHANGE_REFLECT_ROTATE_OPTYPE'),\n\n  swapWithPrev: actionCreator('SWAP_WITH_PREV'),\n  swapWithNext: actionCreator('SWAP_WITH_NEXT'),\n\n  insertPart: actionCreator<string>('ADD_PART'),\n\n  paste: actionCreator('PASTE'),\n  copy: actionCreator('COPY_SELECTION'),\n  cut: actionCreator('CUT_SELECTION'),\n  delete: actionCreator('DELETE_SELECTION'),\n  decomposeSelected: actionCreator('DECOMPOSE_SELECTION'),\n  moveSelected: actionCreator<[number, number]>('MOVE_SELECTED'),\n\n  toggleFreehand: actionCreator('TOGGLE_FREEHAND_MODE'),\n\n  escape: actionCreator('PRESS_ESC_KEY'),\n\n  finishEdit: actionCreator<Event>('FINISH_EDIT'),\n};\n","// The temporary reverse proxy which adds 'Access-Control-Allow-Origin: *' header.\n// This header is required for cross-origin requests.\nconst apiUrlPrefix = 'https://asia-northeast1-ku6goma.cloudfunctions.net/gwproxy';\n\nconst callApi = async (path: string) => {\n  const response = await fetch(apiUrlPrefix + path);\n  if (!response.ok) {\n    throw new Error('API error occurred');\n  }\n  return new URLSearchParams(await response.text());\n};\n\nexport const getSource = async (name: string) => {\n  const result = await callApi(`/get_source.cgi?name=${encodeURIComponent(name)}`);\n  return result.get('data');\n};\n\nexport const search = async (query: string) => {\n  const result = await callApi(`/search4ge.cgi?query=${encodeURIComponent(query)}`);\n  return result.get('data')!;\n};\n\nexport const getCandidate = async (name: string) => {\n  const result = await callApi(`/get_candidate.cgi?name=${encodeURIComponent(name)}`);\n  return result.get('data')!;\n};\n","import memoizeOne from 'memoize-one';\n\nimport { Kage, Polygons } from '@kurgm/kage-engine';\nimport { Glyph, unparseGlyphLine } from './kageUtils/glyph';\nimport { StretchParam } from './kageUtils/stretchparam';\n\nimport store from './store';\nimport { editorActions } from './actions/editor';\n\nimport { getSource } from './callapi';\n\nexport type KShotai = Kage[\"kShotai\"];\n\nconst kage_ = new Kage();\n\nexport const getKage = (buhinMap: Map<string, string>, fallback?: (name: string) => string | undefined | void, shotai?: KShotai): Kage => {\n  kage_.kBuhin.search = (name) => {\n    let result = buhinMap.get(name);\n    if (typeof result === 'undefined') {\n      result = fallback?.(name) || '';\n    }\n    return result;\n  };\n  if (typeof shotai !== 'undefined') {\n    kage_.kShotai = shotai;\n  }\n  return kage_;\n};\n\nlet waiting = new Set<string>();\nconst loadAbsentBuhin = (name: string) => {\n  if (waiting.has(name)) {\n    return;\n  }\n  waiting.add(name);\n  getSource(name)\n    .then((source) => {\n      if (typeof source !== 'string') {\n        throw new Error(`failed to get buhin source of ${name}`);\n      }\n      const stretchMatch = /^0:1:0:(-?\\d+):(-?\\d+):(-?\\d+):(-?\\d+)(?=$|\\$)/.exec(source);\n      if (stretchMatch) {\n        const params: StretchParam = [\n          +stretchMatch[1] || 0,\n          +stretchMatch[2] || 0,\n          +stretchMatch[3] || 0,\n          +stretchMatch[4] || 0,\n        ];\n        store.dispatch(editorActions.loadedStretchParam([name, params]));\n      }\n      store.dispatch(editorActions.loadedBuhin([name, source]));\n      waiting.delete(name);\n    })\n    .catch((err) => console.error(err));\n};\n\nconst filteredGlyphIsEqual = (glyph1: Glyph, glyph2: Glyph) => (\n  glyph1.length === glyph2.length &&\n  glyph1.every((gLine1, index) => (\n    gLine1 === glyph2[index]\n  ))\n);\n\nconst makeGlyphSeparated_ = memoizeOne((glyph: Glyph, map: Map<string, string>, shotai: KShotai): Polygons[] => {\n  const data = glyph.map(unparseGlyphLine);\n  const result = getKage(map, loadAbsentBuhin, shotai).makeGlyphSeparated(data);\n  return result;\n}, ([glyph1, map1, shotai1], [glyph2, map2, shotai2]) => (\n  map1 === map2 &&\n  shotai1 === shotai2 &&\n  filteredGlyphIsEqual(glyph1, glyph2)\n));\n\nconst makeGlyphSeparatedFactory = (\n  isEqual?: (newArgs: Parameters<typeof makeGlyphSeparated_>, lastArgs: Parameters<typeof makeGlyphSeparated_>) => boolean\n) => memoizeOne((glyph: Glyph, map: Map<string, string>, shotai: KShotai): Polygons[] => {\n  return makeGlyphSeparated_(glyph, map, shotai);\n}, isEqual);\n\nexport const makeGlyphSeparated = makeGlyphSeparatedFactory();\nexport const makeGlyphSeparatedForSubmit = makeGlyphSeparatedFactory(\n  ([glyph1, map1, shotai1], [glyph2, map2, shotai2]) => (\n    map1 === map2 &&\n    shotai1 === shotai2 &&\n    filteredGlyphIsEqual(glyph1, glyph2)\n  )\n);\n","import memoizeOne from 'memoize-one';\n\nimport { GlyphLine } from './glyph';\n\nexport type BBX = [number, number, number, number];\n\nexport const bbxOfPoints = (points: [number, number][]): BBX => {\n  const xs = points.map(([x]) => x);\n  const ys = points.map(([, y]) => y);\n  return [\n    Math.min(...xs),\n    Math.min(...ys),\n    Math.max(...xs),\n    Math.max(...ys),\n  ];\n};\n\nexport const getGlyphLineBBX = (glyphLine: GlyphLine): BBX => {\n  switch (glyphLine.value[0]) {\n    case 99:\n      return bbxOfPoints([\n        [glyphLine.value[3], glyphLine.value[4]],\n        [glyphLine.value[5], glyphLine.value[6]],\n      ]);\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 6:\n    case 7:\n    case 9: {\n      const points: [number, number][] = [];\n      for (let i = 3; i + 2 <= glyphLine.value.length; i += 2) {\n        points.push([glyphLine.value[i], glyphLine.value[i + 1]]);\n      }\n      return bbxOfPoints(points);\n    }\n    default:\n      return bbxOfPoints([]);\n  }\n}\n\nexport const mergeBBX = ([x11, y11, x12, y12]: BBX, [x21, y21, x22, y22]: BBX): BBX => [\n  Math.min(x11, x21),\n  Math.min(y11, y21),\n  Math.max(x12, x22),\n  Math.max(y12, y22),\n];\n\nexport const getGlyphLinesBBX = memoizeOne((glyphLines: GlyphLine[]): BBX => {\n  return glyphLines.map(getGlyphLineBBX).reduce(mergeBBX, bbxOfPoints([]));\n}, ([gLines1], [gLines2]) => (\n  gLines1.length === gLines2.length &&\n  gLines1.every((gLine1, index) => gLine1 === gLines2[index])\n));\n","import { createSelector } from 'reselect';\n\nimport { RectPointPosition } from '../actions/drag';\n\nimport { AppState } from '../reducers';\n\nimport { Glyph, GlyphLine } from '../kageUtils/glyph';\nimport { getGlyphLinesBBX } from '../kageUtils/bbx';\nimport { moveSelectedGlyphLines, moveSelectedPoint, resizeSelectedGlyphLines } from '../kageUtils/transform';\nimport { drawFreehand } from '../kageUtils/freehand';\n\nexport const resizeSelected = (glyph: Glyph, selection: number[], position: RectPointPosition, dx: number, dy: number): Glyph => {\n  if (selection.length === 1) {\n    const selectedGlyphLine = glyph[selection[0]];\n    switch (selectedGlyphLine.value[0]) {\n      case 0:\n      case 9:\n      case 99: {\n        const newValue = selectedGlyphLine.value.slice();\n        switch (position) {\n          case RectPointPosition.north:\n            newValue[4] = Math.round(newValue[4] + dy);\n            break;\n          case RectPointPosition.west:\n            newValue[3] = Math.round(newValue[3] + dx);\n            break;\n          case RectPointPosition.south:\n            newValue[6] = Math.round(newValue[6] + dy);\n            break;\n          case RectPointPosition.east:\n            newValue[5] = Math.round(newValue[5] + dx);\n            break;\n          case RectPointPosition.southeast:\n            newValue[5] = Math.round(newValue[5] + dx);\n            newValue[6] = Math.round(newValue[6] + dy);\n            break;\n          default:\n            // exhaustive?\n            ((_x: never) => { })(position);\n        }\n        const newGlyphLine: GlyphLine = selectedGlyphLine.value[0] === 99\n          ? { value: newValue, partName: selectedGlyphLine.partName }\n          : { value: newValue };\n        return glyph.map((glyphLine, index) => index === selection[0] ? newGlyphLine : glyphLine);\n      }\n    }\n  }\n  const minSize = 20;\n  const oldBBX = getGlyphLinesBBX(selection.map((index) => glyph[index]));\n  const newBBX = oldBBX.slice() as typeof oldBBX;\n  switch (position) {\n    case RectPointPosition.north:\n      newBBX[1] = Math.min(newBBX[1] + dy, newBBX[3] - minSize);\n      break;\n    case RectPointPosition.west:\n      newBBX[0] = Math.min(newBBX[0] + dx, newBBX[2] - minSize);\n      break;\n    case RectPointPosition.south:\n      newBBX[3] = Math.max(newBBX[3] + dy, newBBX[1] + minSize);\n      break;\n    case RectPointPosition.east:\n      newBBX[2] = Math.max(newBBX[2] + dx, newBBX[0] + minSize);\n      break;\n    case RectPointPosition.southeast:\n      newBBX[2] = Math.max(newBBX[2] + dx, newBBX[0] + minSize);\n      newBBX[3] = Math.max(newBBX[3] + dy, newBBX[1] + minSize);\n      break;\n    default:\n      // exhaustive?\n      ((_x: never) => { })(position);\n  }\n  return resizeSelectedGlyphLines(glyph, selection, oldBBX, newBBX);\n};\n\nexport const draggedGlyphSelector = createSelector([\n  (state: AppState) => state.glyph,\n  (state: AppState) => state.selection,\n  (state: AppState) => state.dragSelection,\n  (state: AppState) => state.dragPoint,\n  (state: AppState) => state.resizeSelection,\n  (state: AppState) => state.freehandStroke,\n], (glyph, selection, dragSelection, dragPoint, resizeSelection, freehandStroke) => {\n  if (dragSelection) {\n    const [x1, y1, x2, y2] = dragSelection;\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    glyph = moveSelectedGlyphLines(glyph, selection, dx, dy);\n  } else if (dragPoint) {\n    const [pointIndex, [x1, y1, x2, y2]] = dragPoint;\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    glyph = moveSelectedPoint(glyph, selection, pointIndex, dx, dy);\n  } else if (resizeSelection) {\n    const [position, [x1, y1, x2, y2]] = resizeSelection;\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    glyph = resizeSelected(glyph, selection, position, dx, dy);\n  } else if (freehandStroke) {\n    glyph = drawFreehand(glyph, freehandStroke);\n  }\n  return glyph;\n});\n","import { GlyphLine } from './glyph';\n\nexport type StretchParam = [number, number, number, number];\nexport type StretchPositions = [number, number, number, number];\n\nexport const getStretchPositions = (glyphLine: GlyphLine): StretchPositions | null => {\n  if (glyphLine.value[0] !== 99) {\n    return null;\n  }\n  const sx = glyphLine.value[9];\n  const sy = glyphLine.value[10];\n  const tx = glyphLine.value[1];\n  const ty = glyphLine.value[2];\n  return [sx, sy, tx, ty];\n};\n\nexport const setStretchPositions = (glyphLine: GlyphLine, positions: StretchPositions): GlyphLine => {\n  if (glyphLine.value[0] !== 99) {\n    return glyphLine;\n  }\n  const [sx, sy, tx, ty] = positions;\n\n  const newValue = glyphLine.value.slice();\n  newValue[9] = Math.round(sx);\n  newValue[10] = Math.round(sy);\n  newValue[1] = Math.round(tx);\n  newValue[2] = Math.round(ty);\n  return { value: newValue, partName: glyphLine.partName };\n};\n\nexport const normalizeStretchPositions = (positions: StretchPositions): StretchPositions => {\n  let [sx, sy, tx, ty] = positions;\n  if (tx <= 100) {\n    tx += 200;\n    sx = sy = 0;\n  }\n  return [sx, sy, tx, ty];\n};\n\nexport const calcStretchPositions = (param: StretchParam, k: number): StretchPositions => {\n  const [x0, y0, x1, y1] = param;\n  return [\n    x0 - 100,\n    y0 - 100,\n    x0 + (x1 - x0) * k / 20 + 100,\n    y0 + (y1 - y0) * k / 20 - 100,\n  ];\n};\n\nconst clampStretchScalar = (k: number): number => Math.max(-10, Math.min(10, k));\n\nexport const calcStretchScalar = (param: StretchParam, positions: StretchPositions): number => {\n  const [x0, y0, x1, y1] = param;\n  if (x0 === x1 && y0 === y1) {\n    return 0;\n  }\n  const [sx, sy, tx, ty] = normalizeStretchPositions(positions);\n  if (sx === tx - 200 && sy === ty) {\n    return 0;\n  }\n  return clampStretchScalar(Math.round(\n    Math.abs(x0 - x1) > Math.abs(y0 - y1)\n      ? (tx - 100 - x0) / (x1 - x0) * 20\n      : (ty + 100 - y0) / (y1 - y0) * 20\n  )) || 0;\n}\n","import { getKage } from '../kage';\n\nimport { GlyphLine, parseGlyph, unparseGlyph, unparseGlyphLine, getNumColumns, Glyph } from './glyph';\nimport { getStretchPositions, normalizeStretchPositions, setStretchPositions } from './stretchparam';\nimport { applyGlyphLineOperation } from './transform';\n\nexport const decompose = (glyphLine: GlyphLine, buhinMap: Map<string, string>): GlyphLine[] => {\n  if (glyphLine.value[0] !== 99) {\n    return [glyphLine];\n  }\n  const buhinSource = buhinMap.get(glyphLine.partName!);\n  if (!buhinSource) {\n    return [glyphLine];\n  }\n\n  let failedBuhin = false;\n  const kage = getKage(buhinMap, () => {\n    failedBuhin = true;\n  });\n\n  const glyph = parseGlyph(buhinSource);\n\n  const strokesArray =\n    // @ts-ignore 2445\n    kage.getEachStrokes(\n      unparseGlyph(glyph)\n    );\n  const box =\n    // @ts-ignore 2445\n    kage.getBox(\n      strokesArray\n    );\n\n  const x1 = glyphLine.value[3];\n  const y1 = glyphLine.value[4];\n  const x2 = glyphLine.value[5];\n  const y2 = glyphLine.value[6];\n  const [sx, sy, tx, ty] = normalizeStretchPositions(getStretchPositions(glyphLine)!);\n  const isStretchEnabled = !(sx === tx - 200 && sy === ty);\n\n  if (isStretchEnabled && failedBuhin) {\n    // box may be incorrect\n    return [glyphLine];\n  }\n\n  return glyph.map((oldGlyphLine) => {\n    const tX = (x: number) => {\n      const stretchedX = isStretchEnabled\n        ? kage.stretch(tx - 200, sx, x, box.minX, box.maxX)\n        : x;\n      return Math.round(stretchedX / 200 * (x2 - x1) + x1);\n    };\n    const tY = (y: number) => {\n      const stretchedY = isStretchEnabled\n        ? kage.stretch(ty, sy, y, box.minY, box.maxY)\n        : y;\n      return Math.round(stretchedY / 200 * (y2 - y1) + y1);\n    };\n    const newGlyphLine = applyGlyphLineOperation(oldGlyphLine, tX, tY);\n\n    if (!(isStretchEnabled && newGlyphLine.value[0] === 99)) {\n      return newGlyphLine;\n    }\n\n    const [sx2, sy2, tx2, ty2] = normalizeStretchPositions(getStretchPositions(newGlyphLine)!);\n    if (!(sx2 === tx2 - 200 && sy2 === ty2)) {\n      // Cannot compose two stretches...\n      return newGlyphLine;\n    }\n\n    const px1 = newGlyphLine.value[3];\n    const py1 = newGlyphLine.value[4];\n    const px2 = newGlyphLine.value[5];\n    const py2 = newGlyphLine.value[6];\n\n    if (px1 === px2 || py1 === py2) {\n      return newGlyphLine;\n    }\n\n    const revX = (x: number) => (x - px1) / (px2 - px1) * 200;\n    const revY = (y: number) => (y - py1) / (py2 - py1) * 200;\n    return setStretchPositions(newGlyphLine, [\n      revX(sx + 100) - 100,\n      revY(sy + 100) - 100,\n      revX(tx - 100) + 100,\n      revY(ty + 100) - 100,\n    ]);\n  });\n};\n\nexport const decomposeDeep = (glyphLine: GlyphLine, buhinMap: Map<string, string>): GlyphLine[] => {\n  const kage = getKage(buhinMap);\n  const strokesArray =\n    // @ts-ignore 2445\n    kage.getEachStrokes(\n      unparseGlyphLine(glyphLine)\n    );\n  return strokesArray.map((stroke): GlyphLine => {\n    const columns = getNumColumns(stroke.a1);\n    return {\n      value: [\n        stroke.a1,\n        stroke.a2_100 + stroke.kirikuchiAdjustment * 100 + stroke.tateAdjustment * 1000,\n        stroke.a3_100 + stroke.opt3 * 100 + stroke.mageAdjustment * 1000,\n        Math.round(stroke.x1) || 0,\n        Math.round(stroke.y1) || 0,\n        Math.round(stroke.x2) || 0,\n        Math.round(stroke.y2) || 0,\n        Math.round(stroke.x3) || 0,\n        Math.round(stroke.y3) || 0,\n        Math.round(stroke.x4) || 0,\n        Math.round(stroke.y4) || 0,\n      ].slice(0, columns),\n    };\n  });\n};\n\nexport const decomposeDeepGlyph = (glyph: Glyph, buhinMap: Map<string, string>): GlyphLine[] => {\n  return glyph.map((glyphLine) => decomposeDeep(glyphLine, buhinMap)).reduce((a, b) => a.concat(b), []);\n};\n","import memoizeOne from 'memoize-one';\n\nimport { GlyphLine, getNumColumns } from './glyph';\n\nexport const strokeTypes = [1, 2, 3, 4, 6, 7];\n\nexport const headShapeTypes: Record<number, number[]> = {\n  1: [0, 2, 32, 12, 22],\n  2: [0, 32, 12, 22, 7, 27],\n  3: [0, 32, 12, 22],\n  4: [0, 22],\n  6: [0, 32, 12, 22, 7, 27],\n  7: [0, 32, 12, 22],\n};\n\nexport const tailShapeTypes: Record<number, number[]> = {\n  1: [0, 2, 32, 13, 23, 4, 313, 413, 24],\n  2: [7, 0, 8, 4, 5],\n  3: [0, 5],\n  4: [0, 5],\n  6: [7, 0, 8, 4, 5],\n  7: [7],\n};\n\nexport const changeStrokeType = (glyphLine: GlyphLine, newType: number): GlyphLine => {\n  const oldType = glyphLine.value[0];\n  if (!strokeTypes.includes(oldType) || !strokeTypes.includes(newType)) {\n    return glyphLine;\n  }\n  const newGlyphLine: GlyphLine = {\n    value: glyphLine.value.slice(),\n  };\n\n  newGlyphLine.value[0] = newType;\n\n  if (!headShapeTypes[newType].includes(newGlyphLine.value[1])) {\n    newGlyphLine.value[1] = headShapeTypes[newType][0];\n  }\n  if (!tailShapeTypes[newType].includes(newGlyphLine.value[2])) {\n    newGlyphLine.value[2] = tailShapeTypes[newType][0];\n  }\n\n  const oldNumPoints = (getNumColumns(oldType) - 3) / 2;\n  const newNumPoints = (getNumColumns(newType) - 3) / 2;\n  if (oldNumPoints === newNumPoints) {\n    return newGlyphLine;\n  }\n  if (oldNumPoints === 2 && newNumPoints === 3) {\n    const x1 = newGlyphLine.value[3];\n    const y1 = newGlyphLine.value[4];\n    const x3 = newGlyphLine.value[5];\n    const y3 = newGlyphLine.value[6];\n\n    const x2 = Math.round((x1 + x3) / 2);\n    const y2 = Math.round((y1 + y3) / 2);\n    newGlyphLine.value = newGlyphLine.value.slice(0, 3).concat(\n      [x1, y1, x2, y2, x3, y3]\n    );\n    return newGlyphLine;\n  }\n  if (oldNumPoints === 2 && newNumPoints === 4) {\n    const x1 = newGlyphLine.value[3];\n    const y1 = newGlyphLine.value[4];\n    const x4 = newGlyphLine.value[5];\n    const y4 = newGlyphLine.value[6];\n\n    const x2 = Math.round((2 * x1 + x4) / 3);\n    const y2 = Math.round((2 * y1 + y4) / 3);\n    const x3 = Math.round((x1 + 2 * x4) / 3);\n    const y3 = Math.round((y1 + 2 * y4) / 3);\n    newGlyphLine.value = newGlyphLine.value.slice(0, 3).concat(\n      [x1, y1, x2, y2, x3, y3, x4, y4]\n    );\n    return newGlyphLine;\n  }\n  if (oldNumPoints === 3 && newNumPoints === 2) {\n    const x1 = newGlyphLine.value[3];\n    const y1 = newGlyphLine.value[4];\n    const x2 = newGlyphLine.value[7];\n    const y2 = newGlyphLine.value[8];\n    newGlyphLine.value = newGlyphLine.value.slice(0, 3).concat(\n      [x1, y1, x2, y2]\n    );\n    return newGlyphLine;\n  }\n  if (oldNumPoints === 3 && newNumPoints === 4) {\n    const x1 = newGlyphLine.value[3];\n    const y1 = newGlyphLine.value[4];\n    const xm = newGlyphLine.value[5];\n    const ym = newGlyphLine.value[6];\n    const x4 = newGlyphLine.value[7];\n    const y4 = newGlyphLine.value[8];\n\n    const x2 = Math.round((x1 + 2 * xm) / 3);\n    const y2 = Math.round((y1 + 2 * ym) / 3);\n    const x3 = Math.round((x4 + 2 * xm) / 3);\n    const y3 = Math.round((y4 + 2 * ym) / 3);\n    newGlyphLine.value = newGlyphLine.value.slice(0, 3).concat(\n      [x1, y1, x2, y2, x3, y3, x4, y4]\n    );\n    return newGlyphLine;\n  }\n  if (oldNumPoints === 4 && newNumPoints === 2) {\n    const x1 = newGlyphLine.value[3];\n    const y1 = newGlyphLine.value[4];\n    const x2 = newGlyphLine.value[9];\n    const y2 = newGlyphLine.value[10];\n    newGlyphLine.value = newGlyphLine.value.slice(0, 3).concat(\n      [x1, y1, x2, y2]\n    );\n    return newGlyphLine;\n  }\n  if (oldNumPoints === 4 && newNumPoints === 3) {\n    const x1 = newGlyphLine.value[3];\n    const y1 = newGlyphLine.value[4];\n    const xm1 = newGlyphLine.value[5];\n    const ym1 = newGlyphLine.value[6];\n    const xm2 = newGlyphLine.value[7];\n    const ym2 = newGlyphLine.value[8];\n    const x3 = newGlyphLine.value[9];\n    const y3 = newGlyphLine.value[10];\n\n    const x2 = Math.round((xm1 + xm2) / 2);\n    const y2 = Math.round((ym1 + ym2) / 2);\n    newGlyphLine.value = newGlyphLine.value.slice(0, 3).concat(\n      [x1, y1, x2, y2, x3, y3]\n    );\n    return newGlyphLine;\n  }\n  return newGlyphLine;\n};\n\nconst validStrokeShapeTypes: [number, number, number][] = [\n  [1, 0, 0],\n  [1, 0, 2],\n  [1, 0, 32],\n  [1, 0, 13],\n  [1, 0, 23],\n  [1, 0, 4],\n  [1, 0, 313],\n  [1, 0, 413],\n  [1, 0, 24],\n  [1, 2, 0],\n  [1, 2, 2],\n  [1, 32, 0],\n  [1, 32, 32],\n  [1, 32, 13],\n  [1, 32, 23],\n  [1, 32, 4],\n  [1, 32, 313],\n  [1, 32, 413],\n  [1, 32, 24],\n  [1, 12, 0],\n  [1, 12, 32],\n  [1, 12, 13],\n  [1, 12, 23],\n  [1, 12, 313],\n  [1, 12, 413],\n  [1, 12, 24],\n  [1, 22, 0],\n  [1, 22, 32],\n  [1, 22, 13],\n  [1, 22, 23],\n  [1, 22, 4],\n  [1, 22, 313],\n  [1, 22, 413],\n  [1, 22, 24],\n  [2, 0, 7],\n  [2, 0, 5],\n  [2, 32, 7],\n  [2, 32, 4],\n  [2, 32, 5],\n  [2, 12, 7],\n  [2, 22, 7],\n  [2, 22, 4],\n  [2, 22, 5],\n  [2, 7, 0],\n  [2, 7, 8],\n  [2, 7, 4],\n  [2, 27, 0],\n  [3, 0, 0],\n  [3, 0, 5],\n  [3, 32, 0],\n  [3, 32, 5],\n  [3, 12, 0],\n  [3, 12, 5],\n  [3, 22, 0],\n  [3, 22, 5],\n  [4, 0, 0],\n  [4, 0, 5],\n  [4, 22, 0],\n  [4, 22, 5],\n  [6, 0, 7],\n  [6, 0, 5],\n  [6, 32, 7],\n  [6, 32, 4],\n  [6, 32, 5],\n  [6, 12, 7],\n  [6, 22, 7],\n  [6, 22, 4],\n  [6, 22, 5],\n  [6, 7, 0],\n  [6, 7, 8],\n  [6, 7, 4],\n  [6, 27, 0],\n  [7, 0, 7],\n  [7, 32, 7],\n  [7, 12, 7],\n  [7, 22, 7],\n];\n\nexport const isValidStrokeShapeTypes = memoizeOne((stroke: GlyphLine) => {\n  if (!strokeTypes.includes(stroke.value[0])) {\n    return true;\n  }\n\n  return validStrokeShapeTypes.some(([s0, s1, s2]) => (\n    s0 === stroke.value[0] &&\n    s1 === stroke.value[1] &&\n    s2 === stroke.value[2]\n  ));\n});\n","import { Glyph, PointDescriptor, getNumColumns } from './glyph';\n\nexport enum MatchType {\n  none,\n  online,\n  match,\n}\n\nexport const getMatchType = (glyph: Glyph, point: PointDescriptor): MatchType => {\n  const glyphLine = glyph[point.lineIndex];\n\n  const endPointIndex = (getNumColumns(glyphLine.value[0]) - 3) / 2 - 1;\n  if (point.pointIndex !== 0 && point.pointIndex !== endPointIndex) {\n    return MatchType.none;\n  }\n\n  const x = glyphLine.value[3 + point.pointIndex * 2];\n  const y = glyphLine.value[3 + point.pointIndex * 2 + 1];\n  const isOnline = (x1: number, y1: number, x2: number, y2: number): boolean => (\n    (\n      x1 === x2 && // 垂直\n      x1 === x && y1 <= y && y <= y2\n    ) || (\n      y1 === y2 && // 水平\n      y1 === y && x1 <= x && x <= x2\n    )\n  );\n\n  let result = MatchType.none;\n  for (let lineIndex = 0; lineIndex < glyph.length; lineIndex++) {\n    if (point.lineIndex === lineIndex) {\n      continue;\n    }\n    const glyphLine = glyph[lineIndex];\n    if ([0, 9, 99].includes(glyphLine.value[0])) {\n      continue;\n    }\n\n    if (glyphLine.value[3] === x && glyphLine.value[4] === y) {\n      return MatchType.match;\n    }\n    const endPointIndex = (getNumColumns(glyphLine.value[0]) - 3) / 2 - 1;\n    if (\n      glyphLine.value[3 + endPointIndex * 2] === x &&\n      glyphLine.value[3 + endPointIndex * 2 + 1] === y\n    ) {\n      return MatchType.match;\n    }\n\n    switch (glyphLine.value[0]) {\n      case 3:\n      case 4:\n        if (\n          isOnline(glyphLine.value[3], glyphLine.value[4], glyphLine.value[5], glyphLine.value[6]) ||\n          isOnline(glyphLine.value[5], glyphLine.value[6], glyphLine.value[7], glyphLine.value[8])\n        ) {\n          result = MatchType.online;\n        }\n        break;\n      case 1:\n      case 7:\n        if (isOnline(glyphLine.value[3], glyphLine.value[4], glyphLine.value[5], glyphLine.value[6])) {\n          result = MatchType.online;\n        }\n        break;\n    }\n  }\n  return result;\n};\n","import { ReducerBuilder } from 'typescript-fsa-reducers';\n\nimport { editorActions } from '../actions/editor';\n\nimport { Glyph, GlyphLine } from '../kageUtils/glyph';\nimport { getGlyphLinesBBX } from '../kageUtils/bbx';\nimport { decompose } from '../kageUtils/decompose';\nimport { calcStretchPositions, setStretchPositions } from '../kageUtils/stretchparam';\nimport { changeStrokeType } from '../kageUtils/stroketype';\nimport { reflectRotateTypeParamsMap } from '../kageUtils/reflectrotate';\nimport { applyGlyphLineOperation, moveSelectedGlyphLines } from '../kageUtils/transform';\n\nimport { AppState } from '.';\n\nconst setGlyphLine = (glyph: Glyph, index: number, glyphLine: GlyphLine): Glyph => {\n  const newGlyph = glyph.slice();\n  newGlyph[index] = glyphLine;\n  return newGlyph;\n};\n\nexport default (builder: ReducerBuilder<AppState>) => builder\n  .case(editorActions.loadedBuhin, (state, [name, data]) => {\n    const newMap = new Map(state.buhinMap);\n    newMap.set(name, data);\n    return {\n      ...state,\n      buhinMap: newMap,\n    };\n  })\n  .case(editorActions.loadedStretchParam, (state, [name, param]) => {\n    const newMap = new Map(state.stretchParamMap);\n    newMap.set(name, param);\n    return {\n      ...state,\n      stretchParamMap: newMap,\n    };\n  })\n\n  .case(editorActions.changeStrokeType, (state, newType) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    const newGLine = changeStrokeType(state.glyph[lineIndex], newType);\n    return {\n      ...state,\n      glyph: setGlyphLine(state.glyph, lineIndex, newGLine),\n    };\n  })\n  .case(editorActions.changeHeadShapeType, (state, newType) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    const newGLine: GlyphLine = {\n      ...state.glyph[lineIndex],\n      value: state.glyph[lineIndex].value.slice(),\n    };\n    newGLine.value[1] = newType;\n    return {\n      ...state,\n      glyph: setGlyphLine(state.glyph, lineIndex, newGLine),\n    };\n  })\n  .case(editorActions.changeTailShapeType, (state, newType) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    const newGLine: GlyphLine = {\n      ...state.glyph[lineIndex],\n      value: state.glyph[lineIndex].value.slice(),\n    };\n    newGLine.value[2] = newType;\n    return {\n      ...state,\n      glyph: setGlyphLine(state.glyph, lineIndex, newGLine),\n    };\n  })\n  .case(editorActions.changeStretchCoeff, (state, value) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    const selectedLine = state.glyph[lineIndex];\n    if (!selectedLine.partName) {\n      return state;\n    }\n    const stretchParam = state.stretchParamMap.get(selectedLine.partName);\n    if (!stretchParam) {\n      return state;\n    }\n    const newGLine = setStretchPositions(\n      state.glyph[lineIndex],\n      calcStretchPositions(stretchParam, value)\n    );\n    return {\n      ...state,\n      glyph: setGlyphLine(state.glyph, lineIndex, newGLine),\n    };\n  })\n  .case(editorActions.changeReflectRotateOpType, (state, opType) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    const newGLine: GlyphLine = {\n      ...state.glyph[lineIndex],\n      value: state.glyph[lineIndex].value.slice(),\n    };\n    const params = reflectRotateTypeParamsMap[opType]\n    if (!params) {\n      return state;\n    }\n    newGLine.value[1] = params[0];\n    newGLine.value[2] = params[1];\n    return {\n      ...state,\n      glyph: setGlyphLine(state.glyph, lineIndex, newGLine),\n    };\n  })\n\n  .case(editorActions.swapWithPrev, (state) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    if (lineIndex === 0) {\n      return state;\n    }\n    const newGlyph = state.glyph.slice();\n    newGlyph[lineIndex - 1] = state.glyph[lineIndex];\n    newGlyph[lineIndex] = state.glyph[lineIndex - 1];\n    return {\n      ...state,\n      glyph: newGlyph,\n      selection: [lineIndex - 1],\n    };\n  })\n  .case(editorActions.swapWithNext, (state) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    if (lineIndex === state.glyph.length - 1) {\n      return state;\n    }\n    const newGlyph = state.glyph.slice();\n    newGlyph[lineIndex + 1] = state.glyph[lineIndex];\n    newGlyph[lineIndex] = state.glyph[lineIndex + 1];\n    return {\n      ...state,\n      glyph: newGlyph,\n      selection: [lineIndex + 1],\n    };\n  })\n\n  .case(editorActions.insertPart, (state, partName) => ({\n    ...state,\n    glyph: state.glyph.concat([{\n      value: [99, 0, 0, 0, 0, 200, 200, 0, 0, 0, 0],\n      partName,\n    }]),\n    selection: [state.glyph.length],\n  }))\n\n  .case(editorActions.paste, (state) => ({\n    ...state,\n    glyph: state.glyph.concat(state.clipboard),\n    selection: state.clipboard.map((_gLine, index) => state.glyph.length + index),\n  }))\n  .case(editorActions.copy, (state) => {\n    const targetLines = state.selection.map((index) => state.glyph[index]);\n    const [x1, y1] = getGlyphLinesBBX(targetLines);\n    const tX = (x: number) => 230 + x - x1;\n    const tY = (y: number) => 20 + y - y1;\n    return {\n      ...state,\n      clipboard: state.selection.map((index) => (\n        applyGlyphLineOperation(state.glyph[index], tX, tY)\n      )),\n    };\n  })\n  .case(editorActions.cut, (state) => ({\n    ...state,\n    glyph: state.glyph.filter((_gLine, index) => !state.selection.includes(index)),\n    clipboard: state.selection.map((index) => state.glyph[index]),\n    selection: [],\n  }))\n  .case(editorActions.delete, (state) => ({\n    ...state,\n    glyph: state.glyph.filter((_gLine, index) => !state.selection.includes(index)),\n    selection: [],\n  }))\n\n  .case(editorActions.decomposeSelected, (state) => {\n    let newGlyph: Glyph = [];\n    let newSelection: number[] = [];\n    state.glyph.forEach((gLine, index) => {\n      if (!state.selection.includes(index)) {\n        newGlyph.push(gLine);\n        return;\n      }\n      const newLines = decompose(gLine, state.buhinMap);\n      newSelection = newSelection.concat(\n        newLines.map((_gLine, subindex) => newGlyph.length + subindex)\n      );\n      newGlyph = newGlyph.concat(newLines);\n    });\n    return {\n      ...state,\n      glyph: newGlyph,\n      selection: newSelection,\n    };\n  })\n  .case(editorActions.moveSelected, (state, [dx, dy]) => ({\n    ...state,\n    glyph: moveSelectedGlyphLines(state.glyph, state.selection, dx, dy),\n  }))\n\n  .case(editorActions.toggleFreehand, (state) => ({\n    ...state,\n    selection: state.freehandMode ? state.selection : [],\n    freehandMode: !state.freehandMode,\n  }))\n\n  .case(editorActions.escape, (state) => {\n    if (state.showOptionModal) {\n      return {\n        ...state,\n        showOptionModal: false,\n      }\n    }\n    if (state.freehandMode) {\n      return {\n        ...state,\n        freehandMode: false,\n      };\n    }\n    if (state.selection.length) {\n      return {\n        ...state,\n        selection: [],\n      };\n    }\n    return state;\n  })\n\n  .case(editorActions.finishEdit, (state, evt) => ({\n    ...state,\n    exitEvent: evt,\n  }));\n","import actionCreatorFactory from 'typescript-fsa';\n\nimport { KShotai } from '../kage';\n\nconst actionCreator = actionCreatorFactory('DISPLAY');\n\nexport const displayActions = {\n  openOptionModal: actionCreator('OPEN_OPTION_MODAL'),\n  closeOptionModal: actionCreator('CLOSE_OPTION_MODAL'),\n\n  setGridDisplay: actionCreator<boolean>('SET_GRID_DISPLAY'),\n  setGridOriginX: actionCreator<number>('SET_GRID_ORIGIN_X'),\n  setGridOriginY: actionCreator<number>('SET_GRID_ORIGIN_Y'),\n  setGridSpacingX: actionCreator<number>('SET_GRID_SPACING_X'),\n  setGridSpacingY: actionCreator<number>('SET_GRID_SPACING_Y'),\n\n  setShotai: actionCreator<KShotai>('SET_SHOTAI'),\n  setStrokeCenterLineDisplay: actionCreator<boolean>('SET_STROKE_CENTER_LINE_DISPLAY'),\n};\n","import actionCreatorFactory from 'typescript-fsa';\n\nconst actionCreator = actionCreatorFactory('UNDO');\n\nexport const undoActions = {\n  undo: actionCreator('UNDO'),\n  redo: actionCreator('REDO'),\n};\n","import { reducerWithInitialState } from 'typescript-fsa-reducers';\n\nimport { RectPointPosition, CTMInv } from '../actions/drag';\n\nimport { GlyphLine, Glyph, parseGlyph } from '../kageUtils/glyph';\nimport { StretchParam } from '../kageUtils/stretchparam';\nimport args from '../args';\nimport { KShotai } from '../kage';\n\nimport select from './select';\nimport drag from './drag';\nimport editor from './editor';\nimport display, { GridState } from './display';\n\nimport { undoable } from './undo';\n\nexport interface AppState {\n  glyph: Glyph;\n  selection: number[];\n\n  areaSelectRect: [number, number, number, number] | null;\n  dragSelection: [number, number, number, number] | null;\n  dragPoint: [number, [number, number, number, number]] | null;\n  resizeSelection: [RectPointPosition, [number, number, number, number]] | null;\n  freehandStroke: [number, number][] | null;\n  ctmInv: CTMInv | null;\n  freehandMode: boolean;\n\n  buhinMap: Map<string, string>;\n  stretchParamMap: Map<string, StretchParam>;\n  clipboard: GlyphLine[];\n  undoStacks: {\n    undo: Glyph[];\n    redo: Glyph[];\n  };\n  exitEvent: Event | null;\n\n  showOptionModal: boolean;\n  grid: GridState;\n  showStrokeCenterLine: boolean;\n  shotai: KShotai;\n}\n\nconst initialState: AppState = {\n  glyph: parseGlyph(args.data),\n  selection: [],\n\n  areaSelectRect: null,\n  dragSelection: null,\n  dragPoint: null,\n  resizeSelection: null,\n  freehandStroke: null,\n  ctmInv: null,\n  freehandMode: false,\n\n  buhinMap: new Map<string, string>(),\n  stretchParamMap: new Map<string, StretchParam>(),\n  clipboard: [],\n  undoStacks: { undo: [], redo: [] },\n  exitEvent: null,\n\n  showOptionModal: false,\n  grid: {\n    display: true,\n    originX: 0,\n    originY: 0,\n    spacingX: 20,\n    spacingY: 20,\n  },\n  showStrokeCenterLine: false,\n  shotai: 0, // kMincho\n};\n\nconst reducer = undoable(\n  reducerWithInitialState(initialState)\n    .withHandling(select)\n    .withHandling(drag)\n    .withHandling(editor)\n    .withHandling(display)\n);\n\nexport default reducer;\n","import { Reducer } from 'redux';\nimport { reducerWithInitialState } from 'typescript-fsa-reducers';\n\nimport { isGlyphDeepEqual } from '../kageUtils/glyph';\n\nimport { undoActions } from '../actions/undo';\n\nimport { AppState } from '.';\n\nconst UNDO_MAX_TIMES = 30;\n\nconst pushUndo = (oldState: AppState, newState: AppState): AppState => {\n  if (isGlyphDeepEqual(oldState.glyph, newState.glyph)) {\n    return newState;\n  }\n  return {\n    ...newState,\n    undoStacks: {\n      undo: oldState.undoStacks.undo.concat([oldState.glyph]).slice(-UNDO_MAX_TIMES),\n      redo: [],\n    },\n  };\n};\n\nexport const undoable = (reducer: Reducer<AppState>): Reducer<AppState> => {\n  const initialState = reducer(undefined, { type: '_INIT' });\n  return reducerWithInitialState(initialState)\n    .case(undoActions.undo, (state) => {\n      if (state.undoStacks.undo.length === 0) {\n        return state;\n      }\n      return {\n        ...state,\n        glyph: state.undoStacks.undo[state.undoStacks.undo.length - 1],\n        selection: [], // TODO: select changed lines?\n        undoStacks: {\n          undo: state.undoStacks.undo.slice(0, -1),\n          redo: state.undoStacks.redo.concat([state.glyph]),\n        },\n      };\n    })\n    .case(undoActions.redo, (state) => {\n      if (state.undoStacks.redo.length === 0) {\n        return state;\n      }\n      return {\n        ...state,\n        glyph: state.undoStacks.redo[state.undoStacks.redo.length - 1],\n        selection: [], // TODO: select changed lines?\n        undoStacks: {\n          undo: state.undoStacks.undo.concat([state.glyph]),\n          redo: state.undoStacks.redo.slice(0, -1),\n        },\n      };\n    })\n    .default((oldState, action) => {\n      const newState = reducer(oldState, action);\n      if (!oldState) {\n        return newState;\n      }\n      return pushUndo(oldState, newState);\n    });\n};\n","import { ReducerBuilder } from 'typescript-fsa-reducers';\n\nimport { selectActions } from '../actions/select';\n\nimport { AppState } from '.';\n\nexport default (builder: ReducerBuilder<AppState>) => builder\n  .case(selectActions.selectSingle, (state, index) => ({\n    ...state,\n    selection: [index],\n  }))\n  .case(selectActions.selectAddSingle, (state, index) => ({\n    ...state,\n    selection: state.selection.includes(index) ? state.selection : state.selection.concat([index]),\n  }))\n  .case(selectActions.selectRemoveSingle, (state, index) => ({\n    ...state,\n    selection: state.selection.filter((index2) => index !== index2),\n  }))\n  .case(selectActions.selectAll, (state) => ({\n    ...state,\n    selection: state.glyph.map((_gLine, index) => index),\n  }))\n  .case(selectActions.selectDeselected, (state) => ({\n    ...state,\n    selection: state.glyph.map((_gLine, index) => index).filter((index) => !state.selection.includes(index)),\n  }))\n  .case(selectActions.selectNone, (state) => ({\n    ...state,\n    selection: [],\n  }))\n  .case(selectActions.selectPrev, (state) => {\n    if (state.glyph.length === 0) {\n      return { ...state, selection: [] };\n    }\n    const firstSelected = state.selection.length === 0 ? 0 : Math.min(...state.selection);\n    return {\n      ...state,\n      selection: [(firstSelected - 1 + state.glyph.length) % state.glyph.length],\n    };\n  })\n  .case(selectActions.selectNext, (state) => {\n    if (state.glyph.length === 0) {\n      return { ...state, selection: [] };\n    }\n    const firstSelected = state.selection.length === 0 ? -1 : Math.max(...state.selection);\n    return {\n      ...state,\n      selection: [(firstSelected + 1 + state.glyph.length) % state.glyph.length],\n    };\n  });\n","import { ReducerBuilder } from 'typescript-fsa-reducers';\n\n// @ts-ignore\nimport { polygonInPolygon, polygonIntersectsPolygon } from 'geometric';\n\nimport { dragActions } from '../actions/drag';\n\nimport { Glyph } from '../kageUtils/glyph';\nimport { moveSelectedGlyphLines, moveSelectedPoint } from '../kageUtils/transform';\nimport { drawFreehand } from '../kageUtils/freehand';\nimport { makeGlyphSeparated, KShotai } from '../kage';\n\nimport { AppState } from '.';\nimport { resizeSelected } from '../selectors/draggedGlyph';\n\nconst performAreaSelect = (glyph: Glyph, buhinMap: Map<string, string>, shotai: KShotai, x1: number, y1: number, x2: number, y2: number): number[] => {\n  const polygonsSep = makeGlyphSeparated(glyph, buhinMap, shotai);\n  const result = [];\n\n  const gAreaPolygon: [number, number][] = [\n    [x1, y1],\n    [x1, y2],\n    [x2, y2],\n    [x2, y1],\n    [x1, y1],\n  ];\n\n  for (let index = 0; index < polygonsSep.length; index++) {\n    const polygons = polygonsSep[index];\n    if (polygons.array.some((polygon) => {\n      const gPolygon = polygon.array.map(({ x, y }) => [x, y]);\n      gPolygon.push(gPolygon[0]); // close polygon\n\n      return (\n        polygonInPolygon(gAreaPolygon, gPolygon) ||\n        polygonInPolygon(gPolygon, gAreaPolygon) ||\n        polygonIntersectsPolygon(gAreaPolygon, gPolygon)\n      ) as boolean;\n    })) {\n      result.push(index);\n    }\n  }\n  return result;\n};\n\nexport default (builder: ReducerBuilder<AppState>) => builder\n  .case(dragActions.startBackgroundDrag, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    if (state.freehandMode) {\n      return {\n        ...state,\n        freehandStroke: [[x1, y1]],\n      };\n    }\n    return {\n      ...state,\n      areaSelectRect: [x1, y1, x1, y1],\n    };\n  })\n  .case(dragActions.startSelectionDrag, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      dragSelection: [x1, y1, x1, y1],\n    };\n  })\n  .case(dragActions.startPointDrag, (state, [evt, pointIndex]) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      dragPoint: [pointIndex, [x1, y1, x1, y1]],\n    };\n  })\n  .case(dragActions.startResize, (state, [evt, position]) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      resizeSelection: [position, [x1, y1, x1, y1]],\n    };\n  })\n\n  .case(dragActions.mouseMove, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    if (state.areaSelectRect) {\n      const [x1, y1] = state.areaSelectRect;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        areaSelectRect: [x1, y1, x2, y2],\n      };\n    }\n    if (state.dragSelection) {\n      const [x1, y1] = state.dragSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        dragSelection: [x1, y1, x2, y2],\n      };\n    }\n    if (state.dragPoint) {\n      const [pointIndex, [x1, y1]] = state.dragPoint;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        dragPoint: [pointIndex, [x1, y1, x2, y2]],\n      };\n    }\n    if (state.resizeSelection) {\n      const [position, [x1, y1]] = state.resizeSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        resizeSelection: [position, [x1, y1, x2, y2]],\n      };\n    }\n    if (state.freehandStroke) {\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      let freehandStroke = state.freehandStroke.concat([[x2, y2]]);\n      if (freehandStroke.length >= 3) {\n        const [lastX, lastY] = freehandStroke[freehandStroke.length - 2];\n        if (Math.abs(x2 - lastX) < 2 && Math.abs(y2 - lastY) < 2) {\n          freehandStroke.splice(freehandStroke.length - 2, 1);\n        }\n      }\n      return {\n        ...state,\n        freehandStroke,\n      };\n    }\n    return state;\n  })\n  .case(dragActions.mouseUp, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    if (state.areaSelectRect) {\n      const [x1, y1] = state.areaSelectRect;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      const intersections = performAreaSelect(state.glyph, state.buhinMap, state.shotai, x1, y1, x2, y2);\n\n      const newSelection = Array.from(new Set(state.selection.concat(intersections)));\n      return {\n        ...state,\n        selection: newSelection,\n        areaSelectRect: null,\n      };\n    }\n    if (state.dragSelection) {\n      const [x1, y1] = state.dragSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n\n      const newGlyph = moveSelectedGlyphLines(state.glyph, state.selection, x2 - x1, y2 - y1);\n      return {\n        ...state,\n        glyph: newGlyph,\n        dragSelection: null,\n      };\n    }\n    if (state.dragPoint) {\n      const [pointIndex, [x1, y1]] = state.dragPoint;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n\n      const newGlyph = moveSelectedPoint(state.glyph, state.selection, pointIndex, x2 - x1, y2 - y1);\n      return {\n        ...state,\n        glyph: newGlyph,\n        dragPoint: null,\n      };\n    }\n    if (state.resizeSelection) {\n      const [position, [x1, y1]] = state.resizeSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n\n      const newGlyph = resizeSelected(state.glyph, state.selection, position, x2 - x1, y2 - y1);\n      return {\n        ...state,\n        glyph: newGlyph,\n        resizeSelection: null,\n      };\n    }\n    if (state.freehandStroke) {\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      const freehandStroke = state.freehandStroke.concat([[x2, y2]]);\n\n      const newGlyph = drawFreehand(state.glyph, freehandStroke);\n      return {\n        ...state,\n        glyph: newGlyph,\n        freehandStroke: null,\n      };\n    }\n    return state;\n  })\n\n  .case(dragActions.updateCTMInv, (state, ctmInv) => ({\n    ...state,\n    ctmInv,\n  }));\n","import { ReducerBuilder } from 'typescript-fsa-reducers';\n\nimport { displayActions } from '../actions/display';\n\nimport { AppState } from '.';\n\nexport interface GridState {\n  display: boolean;\n  originX: number;\n  originY: number;\n  spacingX: number;\n  spacingY: number;\n}\n\nexport default (builder: ReducerBuilder<AppState>) => builder\n  .case(displayActions.openOptionModal, (state) => ({\n    ...state,\n    showOptionModal: true,\n  }))\n  .case(displayActions.closeOptionModal, (state) => ({\n    ...state,\n    showOptionModal: false,\n  }))\n\n  .case(displayActions.setGridDisplay, (state, value) => ({\n    ...state,\n    grid: {\n      ...state.grid,\n      display: value,\n    },\n  }))\n  .case(displayActions.setGridOriginX, (state, value) => ({\n    ...state,\n    grid: {\n      ...state.grid,\n      originX: value,\n    },\n  }))\n  .case(displayActions.setGridOriginY, (state, value) => ({\n    ...state,\n    grid: {\n      ...state.grid,\n      originY: value,\n    },\n  }))\n  .case(displayActions.setGridSpacingX, (state, value) => ({\n    ...state,\n    grid: {\n      ...state.grid,\n      spacingX: Math.max(2, value),\n    },\n  }))\n  .case(displayActions.setGridSpacingY, (state, value) => ({\n    ...state,\n    grid: {\n      ...state.grid,\n      spacingY: Math.max(2, value),\n    },\n  }))\n\n  .case(displayActions.setStrokeCenterLineDisplay, (state, value) => ({\n    ...state,\n    showStrokeCenterLine: value,\n  }))\n  .case(displayActions.setShotai, (state, shotai) => ({\n    ...state,\n    shotai,\n  }));\n","import { createStore } from 'redux';\n\nimport reducer from './reducers';\n\nconst store = createStore(reducer);\n\nexport default store;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { AppState } from '../reducers';\n\nimport './Grid.css';\n\nconst Grid = () => {\n  const grid = useSelector((state: AppState) => state.grid);\n  if (!grid.display) {\n    return <></>;\n  }\n  const xs = [];\n  for (let x = grid.originX; x < 200; x += grid.spacingX) {\n    xs.push(x);\n  }\n  const ys = [];\n  for (let y = grid.originY; y < 200; y += grid.spacingY) {\n    ys.push(y);\n  }\n  return (\n    <g className=\"grid-lines\">\n      {xs.map((x) => (\n        <path\n          key={x}\n          d={`M ${x} 0 V 200`}\n        />\n      ))}\n      {ys.map((y) => (\n        <path\n          key={y}\n          d={`M 0 ${y} H 200`}\n        />\n      ))}\n    </g>\n  );\n};\n\nexport default Grid;","import React from 'react';\n\nimport { Polygons } from '@kurgm/kage-engine';\n\nexport interface StrokeComponentProps {\n  polygons: Polygons;\n}\n\nconst StrokeComponent = (props: StrokeComponentProps) => (\n  <>\n    {props.polygons.array.map((polygon, i) => (\n      <polygon key={i} points={polygon.array.map(({ x, y }) => `${x},${y} `).join(\"\")} />\n    ))}\n  </>\n);\n\nexport default StrokeComponent;\n","import React from 'react';\n\nimport { Glyph } from '../kageUtils/glyph';\nimport { makeGlyphSeparated, KShotai } from '../kage';\n\nimport Stroke from './Stroke';\n\nimport './Glyph.css'\n\nexport interface GlyphComponentProps {\n  glyph: Glyph;\n  buhinMap: Map<string, string>;\n  selection: number[];\n  shotai: KShotai;\n  handleMouseDownDeselectedStroke?: (evt: React.MouseEvent, index: number) => void;\n  handleMouseDownSelectedStroke?: (evt: React.MouseEvent, index: number) => void;\n  makeGlyphSeparated?: typeof makeGlyphSeparated;\n}\n\nconst GlyphComponent = (props: GlyphComponentProps) => {\n  const polygonsSep = (props.makeGlyphSeparated || makeGlyphSeparated)(props.glyph, props.buhinMap, props.shotai);\n\n  const { selection } = props;\n  const nonSelection = polygonsSep.map((_polygons, index) => index)\n    .filter((index) => !selection.includes(index));\n\n  return (\n    <>\n      <g className=\"strokes-deselected\">\n        {nonSelection.map((index) => (\n          <g key={index} onMouseDown={(evt) => props.handleMouseDownDeselectedStroke?.(evt, index)}>\n            <Stroke polygons={polygonsSep[index]} />\n          </g>\n        ))}\n      </g>\n      <g className=\"strokes-selected\">\n        {selection.map((index) => (\n          <g key={index} onMouseDown={(evt) => props.handleMouseDownSelectedStroke?.(evt, index)}>\n            <Stroke polygons={polygonsSep[index]} />\n          </g>\n        ))}\n      </g>\n    </>\n  );\n};\n\nexport default GlyphComponent;\n","import React from 'react';\n\nimport { decomposeDeepGlyph } from '../kageUtils/decompose';\nimport { Glyph } from '../kageUtils/glyph';\n\nimport './StrokeCenterLine.css';\n\nexport interface StrokeCenterLineProps {\n  glyph: Glyph;\n  buhinMap: Map<string, string>;\n}\n\nconst StrokeCenterLine = (props: StrokeCenterLineProps) => {\n  const strokes = decomposeDeepGlyph(props.glyph, props.buhinMap);\n  return (\n    <g className=\"stroke-center-line\">\n      {strokes.map((stroke, index) => {\n        const v = stroke.value;\n        switch (v[0]) {\n          case 1:\n            return <path key={index} d={`M ${v[3]} ${v[4]} ${v[5]} ${v[6]}`} />\n          case 2:\n            return <path key={index} d={`M ${v[3]} ${v[4]} Q ${v[5]} ${v[6]} ${v[7]} ${v[8]}`} />\n          case 3:\n          case 4:\n            return <path key={index} d={`M ${v[3]} ${v[4]} ${v[5]} ${v[6]} ${v[7]} ${v[8]}`} />\n          case 6:\n            return <path key={index} d={`M ${v[3]} ${v[4]} C ${v[5]} ${v[6]} ${v[7]} ${v[8]} ${v[9]} ${v[10]}`} />\n          case 7:\n            return <path key={index} d={`M ${v[3]} ${v[4]} ${v[5]} ${v[6]} Q ${v[7]} ${v[8]} ${v[9]} ${v[10]}`} />\n          default:\n            return null;\n        }\n      })}\n    </g>\n  )\n}\n\nexport default StrokeCenterLine;\n","import React from 'react';\n\nimport './ControlPoint.css';\n\ninterface ControlPointProps {\n  x: number;\n  y: number;\n  className?: string;\n  handleMouseDown: (evt: React.MouseEvent) => void;\n}\n\nconst ControlPoint = (props: ControlPointProps) => (\n  <rect\n    x={props.x - 4}\n    y={props.y - 4}\n    width={8} height={8}\n    className={`controlpoint-rect ${props.className || ''}`}\n    onMouseDown={props.handleMouseDown}\n  />\n);\n\nexport default ControlPoint;\n","import React, { useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { createSelector } from 'reselect';\n\nimport { dragActions, RectPointPosition } from '../actions/drag';\nimport { AppState } from '../reducers';\nimport { draggedGlyphSelector } from '../selectors/draggedGlyph';\nimport { getGlyphLinesBBX } from '../kageUtils/bbx';\nimport { getMatchType, MatchType } from '../kageUtils/match';\n\nimport ControlPoint from './ControlPoint';\n\nimport './SelectionControl.css';\n\ninterface RectControl {\n  multiSelect: boolean;\n  coords: [number, number, number, number];\n}\ninterface ControlPoint {\n  x: number;\n  y: number;\n  className: string;\n}\n\ninterface SelectionControlSpec {\n  rectControl: RectControl | null;\n  pointControl: ControlPoint[];\n}\n\nconst selectionControlSelector = createSelector(\n  [\n    draggedGlyphSelector,\n    (state: AppState) => state.selection,\n  ],\n  (glyph, selection): SelectionControlSpec => {\n    if (selection.length === 0) {\n      return { rectControl: null, pointControl: [] };\n    }\n    if (selection.length > 1) {\n      const selectedStrokes = selection.map((index) => glyph[index]);\n      const bbx = getGlyphLinesBBX(selectedStrokes);\n      return {\n        rectControl: {\n          multiSelect: true,\n          coords: bbx,\n        },\n        pointControl: [],\n      };\n    }\n    const selectedStroke = glyph[selection[0]];\n    switch (selectedStroke.value[0]) {\n      case 0:\n      case 9:\n      case 99:\n        return {\n          rectControl: {\n            multiSelect: false,\n            coords: [\n              selectedStroke.value[3],\n              selectedStroke.value[4],\n              selectedStroke.value[5],\n              selectedStroke.value[6],\n            ],\n          },\n          pointControl: [],\n        };\n      case 1:\n      case 2:\n      case 3:\n      case 4:\n      case 6:\n      case 7: {\n        const pointControl: ControlPoint[] = [];\n        for (let i = 3; i + 2 <= selectedStroke.value.length; i += 2) {\n          const matchType = getMatchType(glyph, {\n            lineIndex: selection[0],\n            pointIndex: (i - 3) / 2,\n          });\n          let className = '';\n          if (matchType === MatchType.match) {\n              className = 'match';\n          } else if (matchType === MatchType.online) {\n              className = 'online';\n          }\n\n          pointControl.push({\n            x: selectedStroke.value[i],\n            y: selectedStroke.value[i + 1],\n            className,\n          });\n        }\n        return { rectControl: null, pointControl };\n      }\n      default:\n        return { rectControl: null, pointControl: [] };\n    }\n  }\n);\n\nconst SelectionControl = () => {\n  const { rectControl, pointControl } = useSelector(selectionControlSelector);\n\n  const dispatch = useDispatch();\n  const handleMouseDownRectControl = useCallback((evt: React.MouseEvent, position: RectPointPosition) => {\n    dispatch(dragActions.startResize([evt, position]));\n    evt.stopPropagation();\n  }, [dispatch]);\n\n  const handleMouseDownNorthPoint = useCallback(\n    (evt: React.MouseEvent) => handleMouseDownRectControl(evt, RectPointPosition.north),\n    [handleMouseDownRectControl]\n  );\n  const handleMouseDownWestPoint = useCallback(\n    (evt: React.MouseEvent) => handleMouseDownRectControl(evt, RectPointPosition.west),\n    [handleMouseDownRectControl]\n  );\n  const handleMouseDownSouthPoint = useCallback(\n    (evt: React.MouseEvent) => handleMouseDownRectControl(evt, RectPointPosition.south),\n    [handleMouseDownRectControl]\n  );\n  const handleMouseDownEastPoint = useCallback(\n    (evt: React.MouseEvent) => handleMouseDownRectControl(evt, RectPointPosition.east),\n    [handleMouseDownRectControl]\n  );\n  const handleMouseDownSoutheastPoint = useCallback(\n    (evt: React.MouseEvent) => handleMouseDownRectControl(evt, RectPointPosition.southeast),\n    [handleMouseDownRectControl]\n  );\n\n  const handleMouseDownPointControls = useMemo(() => {\n    return pointControl.map((_control, pointIndex) => (evt: React.MouseEvent) => {\n      dispatch(dragActions.startPointDrag([evt, pointIndex]));\n      evt.stopPropagation();\n    });\n  }, [dispatch, pointControl]);\n\n  return <>\n    {rectControl && <>\n      <rect\n        className='selection-rect'\n        x={Math.min(rectControl.coords[0], rectControl.coords[2])}\n        y={Math.min(rectControl.coords[1], rectControl.coords[3])}\n        width={Math.abs(rectControl.coords[2] - rectControl.coords[0])}\n        height={Math.abs(rectControl.coords[3] - rectControl.coords[1])}\n      />\n      <ControlPoint\n        x={(rectControl.coords[0] + rectControl.coords[2]) / 2}\n        y={rectControl.coords[1]}\n        className='north'\n        handleMouseDown={handleMouseDownNorthPoint}\n      />\n      <ControlPoint\n        x={rectControl.coords[0]}\n        y={(rectControl.coords[1] + rectControl.coords[3]) / 2}\n        className='west'\n        handleMouseDown={handleMouseDownWestPoint}\n      />\n      <ControlPoint\n        x={(rectControl.coords[0] + rectControl.coords[2]) / 2}\n        y={rectControl.coords[3]}\n        className='south'\n        handleMouseDown={handleMouseDownSouthPoint}\n      />\n      <ControlPoint\n        x={rectControl.coords[2]}\n        y={(rectControl.coords[1] + rectControl.coords[3]) / 2}\n        className='east'\n        handleMouseDown={handleMouseDownEastPoint}\n      />\n      <ControlPoint\n        x={rectControl.coords[2]}\n        y={rectControl.coords[3]}\n        className='southeast'\n        handleMouseDown={handleMouseDownSoutheastPoint}\n      />\n    </>}\n    {pointControl.map(({ x, y, className }, index) => (\n      <ControlPoint\n        key={index}\n        x={x} y={y}\n        className={className}\n        handleMouseDown={handleMouseDownPointControls[index]}\n      />\n    ))}\n  </>;\n};\n\nexport default SelectionControl;","import React from 'react';\n\nimport './AreaSelectRect.css';\n\ninterface AreaSelectRectProps {\n  rect: [number, number, number, number] | null;\n}\n\nconst AreaSelectRect = (props: AreaSelectRectProps) => {\n  if (!props.rect) {\n    return null;\n  }\n  let [x1, y1, x2, y2] = props.rect;\n  if (x1 > x2) {\n    // swap\n    const temp = x1;\n    x1 = x2;\n    x2 = temp;\n  }\n  if (y1 > y2) {\n    // swap\n    const temp = y1;\n    y1 = y2;\n    y2 = temp;\n  }\n\n  return <rect className='areaselect-rect' x={x1} y={y1} width={x2 - x1} height={y2 - y1} />;\n};\n\nexport default AreaSelectRect;\n","import React, { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { AppState } from '../reducers';\n\nimport { selectActions } from '../actions/select';\nimport { dragActions, CTMInv } from '../actions/drag';\nimport { draggedGlyphSelector } from '../selectors/draggedGlyph';\n\nimport Grid from './Grid';\nimport Glyph from './Glyph';\nimport StrokeCenterLine from './StrokeCenterLine';\nimport SelectionControl from './SelectionControl';\nimport AreaSelectRect from './AreaSelectRect';\n\nimport './GlyphArea.css';\n\nconst GlyphArea = () => {\n  const glyph = useSelector(draggedGlyphSelector);\n  const buhinMap = useSelector((state: AppState) => state.buhinMap);\n  const shotai = useSelector((state: AppState) => state.shotai);\n  const selection = useSelector((state: AppState) => state.selection);\n  const areaSelectRect = useSelector((state: AppState) => state.areaSelectRect);\n  const freehandMode = useSelector((state: AppState) => state.freehandMode);\n  const showStrokeCenterLine = useSelector((state: AppState) => state.showStrokeCenterLine);\n\n  const svgClassName = freehandMode ? 'freehand' : '';\n\n  const dispatch = useDispatch();\n  const handleMouseDownCapture = useCallback((evt: React.MouseEvent<SVGSVGElement>) => {\n    const ctm = evt.currentTarget.getScreenCTM();\n    if (!ctm) {\n      return;\n    }\n    const pt = evt.currentTarget.createSVGPoint();\n    const ictm = ctm.inverse();\n    const ctmInv: CTMInv = (evtx, evty) => {\n      pt.x = evtx;\n      pt.y = evty;\n      const { x, y } = pt.matrixTransform(ictm);\n      return [x, y];\n    };\n    dispatch(dragActions.updateCTMInv(ctmInv));\n  }, [dispatch]);\n\n  const handleMouseDownBackground = useCallback((evt: React.MouseEvent) => {\n    if (!(evt.shiftKey || evt.ctrlKey)) {\n      dispatch(selectActions.selectNone());\n    }\n    dispatch(dragActions.startBackgroundDrag(evt));\n    evt.preventDefault();\n  }, [dispatch]);\n  const handleMouseDownDeselectedStroke = useCallback((evt: React.MouseEvent, index: number) => {\n    if (evt.shiftKey || evt.ctrlKey) {\n      dispatch(selectActions.selectAddSingle(index));\n    } else {\n      dispatch(selectActions.selectSingle(index));\n    }\n    dispatch(dragActions.startSelectionDrag(evt));\n    evt.preventDefault();\n    evt.stopPropagation();\n  }, [dispatch]);\n  const handleMouseDownSelectedStroke = useCallback((evt: React.MouseEvent, index: number) => {\n    if (evt.shiftKey || evt.ctrlKey) {\n      dispatch(selectActions.selectRemoveSingle(index));\n    }\n    dispatch(dragActions.startSelectionDrag(evt));\n    evt.preventDefault();\n    evt.stopPropagation();\n  }, [dispatch]);\n\n  useEffect(() => {\n    const handleMouseMove = (evt: MouseEvent) => {\n      dispatch(dragActions.mouseMove(evt));\n    };\n    const handleMouseUp = (evt: MouseEvent) => {\n      dispatch(dragActions.mouseUp(evt));\n    };\n    document.addEventListener('mousemove', handleMouseMove)\n    document.addEventListener('mouseup', handleMouseUp);\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [dispatch]);\n\n  return (\n    <div className=\"glyph-area\">\n      <svg\n        width=\"100%\" height=\"100%\" viewBox=\"-20 -20 500 240\"\n        className={svgClassName}\n        onMouseDownCapture={handleMouseDownCapture}\n        onMouseDown={handleMouseDownBackground}\n      >\n        <Grid />\n        <rect x=\"0\" y=\"0\" width=\"200\" height=\"200\" className=\"glyph-boundary\" />\n        <rect x=\"12\" y=\"12\" width=\"176\" height=\"176\" className=\"glyph-guide\" />\n        <Glyph\n          glyph={glyph}\n          buhinMap={buhinMap}\n          shotai={shotai}\n          selection={selection}\n          handleMouseDownDeselectedStroke={handleMouseDownDeselectedStroke}\n          handleMouseDownSelectedStroke={handleMouseDownSelectedStroke}\n        />\n        {showStrokeCenterLine && <StrokeCenterLine glyph={glyph} buhinMap={buhinMap} />}\n        <SelectionControl />\n        <AreaSelectRect rect={areaSelectRect} />\n      </svg>\n    </div>\n  );\n};\n\nexport default GlyphArea;\n","import React, { useCallback } from 'react';\n\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { useTranslation } from 'react-i18next';\n\nimport { editorActions } from '../actions/editor';\nimport { selectActions } from '../actions/select';\nimport { AppState } from '../reducers';\nimport { GlyphLine } from '../kageUtils/glyph';\nimport { calcStretchScalar, getStretchPositions } from '../kageUtils/stretchparam';\nimport { strokeTypes, headShapeTypes, tailShapeTypes, isValidStrokeShapeTypes } from '../kageUtils/stroketype';\nimport { ReflectRotateType, reflectRotateTypeParamsMap, reflectRotateTypes } from '../kageUtils/reflectrotate';\nimport { draggedGlyphSelector } from '../selectors/draggedGlyph';\n\nimport './SelectionInfo.css'\n\n\nconst selectedGlyphLineSelector = createSelector([\n  (state: AppState) => state.selection,\n  draggedGlyphSelector,\n], (selection, draggedGlyph): GlyphLine | null => {\n  if (selection.length !== 1) {\n    return null;\n  }\n  return draggedGlyph[selection[0]];\n});\n\ninterface StrokeInfo {\n  strokeType: number;\n  headShapeType: number;\n  tailShapeType: number;\n  validTypes: boolean;\n  coordString: string;\n}\nconst strokeInfoSelector = createSelector([\n  selectedGlyphLineSelector\n], (selectedStroke): StrokeInfo | null => {\n  if (!selectedStroke) {\n    return null;\n  }\n  if (!strokeTypes.includes(selectedStroke.value[0])) {\n    return null;\n  }\n\n  const points = [];\n  for (let i = 3; i + 2 <= selectedStroke.value.length; i += 2) {\n    points.push(`(${selectedStroke.value[i]},${selectedStroke.value[i + 1]})`);\n  }\n  return {\n    strokeType: selectedStroke.value[0],\n    headShapeType: selectedStroke.value[1],\n    tailShapeType: selectedStroke.value[2],\n    validTypes: isValidStrokeShapeTypes(selectedStroke),\n    coordString: points.join(' → '),\n  };\n});\n\ninterface PartInfo {\n  partName: string;\n  entityName: string | null;\n  coordString: string;\n  stretchCoeff: number | null;\n}\nconst partInfoSelector = createSelector([\n  selectedGlyphLineSelector,\n  (state: AppState) => state.buhinMap,\n  (state: AppState) => state.stretchParamMap,\n], (selectedStroke, buhinMap, stretchParamMap): PartInfo | null => {\n  if (!selectedStroke) {\n    return null;\n  }\n  if (selectedStroke.value[0] !== 99) {\n    return null;\n  }\n  const partName = selectedStroke.partName!;\n  const buhinSource = buhinMap.get(partName);\n  let entityName: string | null = null;\n  if (buhinSource) {\n    const aliasMatch = /^(?:0:1:0:[^$]+\\$)?99:0:0:0:0:200:200:([^$]+)$/.exec(buhinSource);\n    if (aliasMatch) {\n      entityName = aliasMatch[1];\n    }\n  }\n  const stretchParam = stretchParamMap.get(partName);\n  const stretchCoeff = stretchParam\n    ? calcStretchScalar(stretchParam, getStretchPositions(selectedStroke)!)\n    : null;\n\n  return {\n    partName,\n    entityName,\n    coordString: `(${selectedStroke.value[3]},${selectedStroke.value[4]}) → (${selectedStroke.value[5]},${selectedStroke.value[6]})`,\n    stretchCoeff,\n  };\n});\n\ninterface ReflectRotateInfo {\n  opType: ReflectRotateType | -1;\n  coordString: string;\n}\nconst reflectRotateInfoSelector = createSelector([\n  selectedGlyphLineSelector,\n], (selectedStroke): ReflectRotateInfo | null => {\n  if (!selectedStroke) {\n    return null;\n  }\n  if (selectedStroke.value[0] !== 0) {\n    return null;\n  }\n  const opType = reflectRotateTypes.find((type) => {\n    const [param1, param2] = reflectRotateTypeParamsMap[type];\n    return param1 === selectedStroke.value[1] && param2 === selectedStroke.value[2];\n  }) ?? -1;\n\n  return {\n    opType,\n    coordString: `(${selectedStroke.value[3]},${selectedStroke.value[4]}) → (${selectedStroke.value[5]},${selectedStroke.value[6]})`,\n  };\n});\n\ninterface OtherInfo {\n  isMultiple: boolean;\n  coordString?: string;\n}\nconst otherInfoSelector = createSelector([\n  (state: AppState) => state.selection,\n  selectedGlyphLineSelector,\n], (selection, selectedStroke_): OtherInfo | null => {\n  if (selection.length > 1) {\n    return { isMultiple: true };\n  }\n  if (selection.length === 0) {\n    return { isMultiple: false };\n  }\n  const selectedStroke = selectedStroke_!;\n  const strokeType = selectedStroke.value[0];\n  if (strokeTypes.includes(strokeType) || strokeType === 99 || strokeType === 0) {\n    return null;\n  }\n\n  const points = [];\n  for (let i = 3; i + 2 <= selectedStroke.value.length; i += 2) {\n    points.push(`(${selectedStroke.value[i]},${selectedStroke.value[i + 1]})`);\n  }\n  return { isMultiple: false, coordString: points.join(' → ') };\n});\n\nconst selectIndexStringSelector = createSelector([\n  (state: AppState) => state.glyph.length,\n  (state: AppState) => state.selection,\n], (glyphLength, selection) => {\n  const selectedIndexString = selection\n    .map((index) => index + 1)\n    .sort((a, b) => a - b).join(',');\n  return `${selectedIndexString || '-'} / ${glyphLength || '-'}`;\n});\n\nconst buttonsDisabledSelector = createSelector([\n  (state: AppState) => state.glyph.length,\n  (state: AppState) => state.selection,\n], (glyphLength, selection) => ({\n  swapPrevDisabled: selection.length !== 1 || selection[0] === 0,\n  swapNextDisabled: selection.length !== 1 || selection[0] === glyphLength - 1,\n  selectPrevDisabled: glyphLength === 0,\n  selectNextDisabled: glyphLength === 0,\n}));\n\nconst SelectionInfo = () => {\n\n  const strokeInfo = useSelector(strokeInfoSelector);\n  const partInfo = useSelector(partInfoSelector);\n  const reflectRotateInfo = useSelector(reflectRotateInfoSelector);\n  const otherInfo = useSelector(otherInfoSelector);\n\n  const selectIndexString = useSelector(selectIndexStringSelector);\n\n  const {\n    swapPrevDisabled, swapNextDisabled,\n    selectPrevDisabled, selectNextDisabled,\n  } = useSelector(buttonsDisabledSelector, shallowEqual);\n\n  const dispatch = useDispatch();\n  const changeStrokeType = useCallback((evt: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(editorActions.changeStrokeType(+evt.currentTarget.value));\n  }, [dispatch]);\n  const changeHeadShapeType = useCallback((evt: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(editorActions.changeHeadShapeType(+evt.currentTarget.value));\n  }, [dispatch]);\n  const changeTailShapeType = useCallback((evt: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(editorActions.changeTailShapeType(+evt.currentTarget.value));\n  }, [dispatch]);\n  const changeStretchCoeff = useCallback((evt: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(editorActions.changeStretchCoeff(+evt.currentTarget.value));\n  }, [dispatch]);\n  const changeReflectRotateOpType = useCallback((evt: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(editorActions.changeReflectRotateOpType(+evt.currentTarget.value))\n  }, [dispatch]);\n  const selectPrev = useCallback(() => {\n    dispatch(selectActions.selectPrev());\n  }, [dispatch]);\n  const selectNext = useCallback(() => {\n    dispatch(selectActions.selectNext());\n  }, [dispatch]);\n  const swapWithPrev = useCallback(() => {\n    dispatch(editorActions.swapWithPrev());\n  }, [dispatch]);\n  const swapWithNext = useCallback(() => {\n    dispatch(editorActions.swapWithNext());\n  }, [dispatch]);\n\n  const { t } = useTranslation();\n  return (\n    <div className=\"select-control\">\n      <div className=\"selected-info\">\n        {strokeInfo && <>\n          <div>\n            {t('stroke type')}\n            <select value={strokeInfo.strokeType} onChange={changeStrokeType}>\n              {strokeTypes.map((strokeType) => (\n                <option key={strokeType} value={strokeType}>\n                  {t(`stroke type ${strokeType}`)}\n                </option>\n              ))}\n              {!strokeTypes.includes(strokeInfo.strokeType) && (\n                <option value={strokeInfo.strokeType} />\n              )}\n            </select>\n            {' '}\n            {t('head type')}\n            <select value={strokeInfo.headShapeType} onChange={changeHeadShapeType}>\n              {headShapeTypes[strokeInfo.strokeType].map((headShapeType) => (\n                <option key={headShapeType} value={headShapeType}>\n                  {t(`head type ${strokeInfo.strokeType}-${headShapeType}`)}\n                </option>\n              ))}\n              {!headShapeTypes[strokeInfo.strokeType].includes(strokeInfo.headShapeType) && (\n                <option value={strokeInfo.headShapeType} />\n              )}\n            </select>\n            {' '}\n            {t('tail type')}\n            <select value={strokeInfo.tailShapeType} onChange={changeTailShapeType}>\n              {tailShapeTypes[strokeInfo.strokeType].map((tailShapeType) => (\n                <option key={tailShapeType} value={tailShapeType}>\n                  {t(`tail type ${strokeInfo.strokeType}-${tailShapeType}`)}\n                </option>\n              ))}\n              {!tailShapeTypes[strokeInfo.strokeType].includes(strokeInfo.tailShapeType) && (\n                <option value={strokeInfo.tailShapeType} />\n              )}\n            </select>\n            {' '}\n            {!strokeInfo.validTypes && (\n              <span className=\"alert\">\n                {t('invalid stroke shape types')}\n              </span>\n            )}\n          </div>\n          <div>{strokeInfo.coordString}</div>\n        </>}\n        {partInfo && <>\n          <div>\n            {t('part')}\n            {' '}\n            <strong>{partInfo.partName}</strong>\n            {' '}\n            {partInfo.entityName && t('alias of', { entity: partInfo.entityName })}\n          </div>\n          <div>{partInfo.coordString}</div>\n          {partInfo.stretchCoeff !== null && (\n            <div>\n              {t('stretch')}\n              {' '}\n              <input\n                type=\"range\" min={-10} max={10}\n                value={partInfo.stretchCoeff}\n                onChange={changeStretchCoeff}\n              />\n              {' '}\n              {partInfo.stretchCoeff}\n            </div>\n          )}\n        </>}\n        {reflectRotateInfo && <>\n          <div>\n            <select value={reflectRotateInfo.opType} onChange={changeReflectRotateOpType}>\n              {reflectRotateTypes.map((opType) => (\n                <option key={opType} value={opType}>\n                  {t(`operation type ${ReflectRotateType[opType]}`)}\n                </option>\n              ))}\n              {!reflectRotateTypes.includes(reflectRotateInfo.opType) && (\n                <option value={reflectRotateInfo.opType} />\n              )}\n            </select>\n          </div>\n          <div>{reflectRotateInfo.coordString}</div>\n        </>}\n        {otherInfo && <>\n          {otherInfo.isMultiple && <div>{t('selecting multiple strokes')}</div>}\n          {otherInfo.coordString && <div>{otherInfo.coordString}</div>}\n        </>}\n      </div>\n      <div className=\"selection-control\">\n        <button\n          disabled={swapPrevDisabled}\n          onClick={swapWithPrev}\n        >\n          {t('swap with prev')}\n        </button>\n        <button\n          className=\"select-prevnext-button\"\n          disabled={selectPrevDisabled}\n          onClick={selectPrev}\n        >\n          {t('select prev')}\n        </button>\n        <div className=\"selection-num\">\n          {selectIndexString}\n        </div>\n        <button\n          className=\"select-prevnext-button\"\n          disabled={selectNextDisabled}\n          onClick={selectNext}\n        >\n          {t('select next')}\n        </button>\n        <button\n          disabled={swapNextDisabled}\n          onClick={swapWithNext}\n        >\n          {t('swap with next')}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default SelectionInfo;\n","import { createSelector } from 'reselect';\n\nimport { Glyph } from '../kageUtils/glyph';\nimport { getGlyphLineBBX } from '../kageUtils/bbx';\n\nimport { draggedGlyphSelector } from './draggedGlyph';\n\nexport const submitGlyphSelector = createSelector([\n  draggedGlyphSelector,\n], (glyph: Glyph): Glyph => {\n  return glyph.filter((glyphLine) => getGlyphLineBBX(glyphLine)[0] < 200);\n});\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { submitGlyphSelector } from '../selectors/submitGlyph';\nimport { AppState } from '../reducers';\nimport { makeGlyphSeparatedForSubmit } from '../kage';\n\nimport GlyphComponent from './Glyph';\n\nconst SubmitPreview = () => {\n  const submitGlyph = useSelector(submitGlyphSelector);\n  const buhinMap = useSelector((state: AppState) => state.buhinMap);\n  const shotai = useSelector((state: AppState) => state.shotai);\n\n  return (\n    <svg className=\"preview-thumbnail\" viewBox=\"0 0 200 200\" width=\"50\" height=\"50\">\n      <GlyphComponent\n        buhinMap={buhinMap}\n        glyph={submitGlyph}\n        shotai={shotai}\n        selection={[]}\n        makeGlyphSeparated={makeGlyphSeparatedForSubmit}\n      />\n    </svg>\n  );\n};\n\nexport default SubmitPreview;\n","import React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { useTranslation } from 'react-i18next';\n\nimport { AppState } from '../reducers';\nimport { editorActions } from '../actions/editor';\nimport { selectActions } from '../actions/select';\nimport { undoActions } from '../actions/undo';\nimport { displayActions } from '../actions/display';\n\nimport SelectionInfo from './SelectionInfo';\nimport SubmitPreview from './SubmitPreview';\n\nimport './EditorControls.css';\n\nconst EditorControls = () => {\n  const glyph = useSelector((state: AppState) => state.glyph);\n  const selection = useSelector((state: AppState) => state.selection);\n  const clipboard = useSelector((state: AppState) => state.clipboard);\n  const freehandMode = useSelector((state: AppState) => state.freehandMode);\n  const undoLength = useSelector((state: AppState) => state.undoStacks.undo.length);\n  const redoLength = useSelector((state: AppState) => state.undoStacks.redo.length);\n\n  const undoDisabled = undoLength === 0;\n  const redoDisabled = redoLength === 0;\n  const pasteDisabled = clipboard.length === 0;\n  const decomposeDisabled = !selection.some((index) => glyph[index].value[0] === 99);\n\n  const dispatch = useDispatch();\n  const undo = useCallback(() => {\n    dispatch(undoActions.undo());\n  }, [dispatch]);\n  const redo = useCallback(() => {\n    dispatch(undoActions.redo());\n  }, [dispatch]);\n  const selectAll = useCallback(() => {\n    dispatch(selectActions.selectAll());\n  }, [dispatch]);\n  const selectDeselected = useCallback(() => {\n    dispatch(selectActions.selectDeselected());\n  }, [dispatch]);\n  const copy = useCallback(() => {\n    dispatch(editorActions.copy());\n  }, [dispatch]);\n  const paste = useCallback(() => {\n    dispatch(editorActions.paste());\n  }, [dispatch]);\n  const cut = useCallback(() => {\n    dispatch(editorActions.cut());\n  }, [dispatch]);\n  const toggleFreehand = useCallback(() => {\n    dispatch(editorActions.toggleFreehand());\n  }, [dispatch]);\n  const decompose = useCallback(() => {\n    dispatch(editorActions.decomposeSelected());\n  }, [dispatch]);\n  const options = useCallback(() => {\n    dispatch(displayActions.openOptionModal());\n  }, [dispatch]);\n  const finishEdit = useCallback((evt: React.MouseEvent) => {\n    dispatch(editorActions.finishEdit(evt.nativeEvent));\n  }, [dispatch]);\n\n  const { t } = useTranslation();\n  return (\n    <div className=\"editor-controls\">\n      <SelectionInfo />\n      <div className=\"control-buttons\">\n        <button\n          disabled={undoDisabled}\n          onClick={undo}\n        >\n          {t('undo')}\n        </button>\n        <button\n          disabled={redoDisabled}\n          onClick={redo}\n        >\n          {t('redo')}\n        </button>\n        <button\n          disabled={glyph.length === 0}\n          onClick={selectAll}\n        >\n          {t('select all')}\n        </button>\n        <button\n          disabled={glyph.length === 0}\n          onClick={selectDeselected}\n        >\n          {t('invert selection')}\n        </button>\n        <button\n          disabled={selection.length === 0}\n          onClick={copy}\n        >\n          {t('copy')}\n        </button>\n        <button\n          disabled={pasteDisabled}\n          onClick={paste}\n        >\n          {t('paste')}\n        </button>\n        <button\n          disabled={selection.length === 0}\n          onClick={cut}\n        >\n          {t('cut')}\n        </button>\n        <button\n          onClick={toggleFreehand}\n        >\n          {freehandMode ? t('end freehand') : t('start freehand')}\n        </button>\n        <button\n          disabled={decomposeDisabled}\n          onClick={decompose}\n        >\n          {t('decompose')}\n        </button>\n        <button\n          onClick={options}\n        >\n          {t('options')}\n        </button>\n      </div>\n      <div className=\"preview\">\n        <SubmitPreview />\n        <button onClick={finishEdit}>\n          {t('finish edit')}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default EditorControls;\n","import React, { useCallback } from 'react';\n\nimport './PartsList.css';\n\nconst getImageURL = (name: string) => (\n  `https://glyphwiki.org/glyph/${name}.50px.png`\n);\n\ninterface PartsListProps {\n  names: string[];\n  handleItemClick: (partName: string, evt: React.MouseEvent<HTMLImageElement>) => void;\n  handleItemMouseEnter: (partName: string, evt: React.MouseEvent<HTMLImageElement>) => void;\n}\n\nconst PartsList = (props: PartsListProps) => {\n  const { handleItemClick, handleItemMouseEnter } = props;\n  const handleImageClick = useCallback((evt: React.MouseEvent<HTMLImageElement>) => {\n    const partName = evt.currentTarget.dataset.name!;\n    handleItemClick(partName, evt);\n  }, [handleItemClick]);\n  const handleImageMouseEnter = useCallback((evt: React.MouseEvent<HTMLImageElement>) => {\n    const partName = evt.currentTarget.dataset.name!;\n    handleItemMouseEnter(partName, evt);\n  }, [handleItemMouseEnter]);\n\n  return (\n    <div className=\"parts-list\">\n      {props.names.map((name) => (\n        <img\n          key={name} alt={name} title={name}\n          data-name={name}\n          src={getImageURL(name)}\n          width={50} height={50}\n          onClick={handleImageClick}\n          onMouseEnter={handleImageMouseEnter}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default PartsList;\n","import React, { useRef, useCallback, useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { useTranslation } from 'react-i18next';\n\nimport { editorActions } from '../actions/editor';\nimport { search } from '../callapi';\nimport args from '../args';\n\nimport PartsList from './PartsList';\n\nimport './PartsSearch.css';\n\nconst searchSuggestions = [\n  'エディタ部品1',\n  'エディタ部品2',\n  'エディタ部品3',\n  'エディタ部品4',\n];\n\nconst initialQuery = args.name || '';\n\nclass QueryTooShortError extends Error { }\n\ninterface SearchState {\n  query: string;\n  result: string[] | null;\n  err: any;\n}\n\nconst initialSearchState: SearchState = {\n  query: '',\n  result: [],\n  err: null,\n};\n\nconst PartsSearch = () => {\n  const queryInputRef = useRef<HTMLInputElement>(null);\n  const [searchState, setSearchState] = useState<SearchState>(initialSearchState);\n\n  const startSearch = (query: string) => {\n    setSearchState({\n      query,\n      result: null,\n      err: null,\n    });\n    search(query)\n      .then((result) => {\n        if (result === 'tooshort') {\n          throw new QueryTooShortError('query too short');\n        }\n        if (result === 'nodata') {\n          return [];\n        }\n        return result.split('\\t');\n      })\n      .then((names): SearchState => ({\n        query,\n        result: names,\n        err: null,\n      }))\n      .catch((reason): SearchState => ({\n        query,\n        result: null,\n        err: reason,\n      }))\n      .then((newSearchState) => {\n        setSearchState((currentSearchState) => (\n          (currentSearchState.query === query)\n            ? newSearchState\n            : currentSearchState // query has changed, discard result\n        ));\n      });\n  };\n\n  useEffect(() => {\n    if (initialQuery) {\n      startSearch(initialQuery);\n    }\n  }, []);\n  const handleSearch = useCallback(() => {\n    if (!queryInputRef.current) {\n      return;\n    }\n    const query = queryInputRef.current.value;\n    if (!query) {\n      setSearchState({\n        query,\n        result: [],\n        err: null,\n      });\n      return;\n    }\n    startSearch(query);\n  }, []);\n  const handleFormSubmit = useCallback((evt: React.FormEvent) => {\n    evt.preventDefault();\n    handleSearch();\n  }, [handleSearch]);\n\n  const hoverNameRef = useRef<HTMLDivElement>(null);\n  const handleItemMouseEnter = useCallback((partName: string) => {\n    if (!hoverNameRef.current) {\n      return;\n    }\n    hoverNameRef.current.textContent = partName;\n  }, []);\n  const dispatch = useDispatch();\n  const handleItemClick = useCallback((partName: string, evt: React.MouseEvent) => {\n    if (evt.shiftKey) {\n      if (!queryInputRef.current) {\n        return;\n      }\n      queryInputRef.current.value = partName;\n      startSearch(partName);\n    } else {\n      dispatch(editorActions.insertPart(partName));\n    }\n  }, [dispatch]);\n\n  const { t } = useTranslation();\n  return (\n    <div className=\"parts-search-area\">\n      <form className=\"parts-search-box\" onSubmit={handleFormSubmit}>\n        <input defaultValue={initialQuery} list=\"searchList\" ref={queryInputRef} />\n        <button>\n          {t('search')}\n        </button>\n        <datalist id=\"searchList\">\n          {searchSuggestions.map((suggestion, index) => (\n            <option key={index} value={suggestion} />\n          ))}\n        </datalist>\n      </form>\n      <div className=\"parts-list-area\">\n        {searchState.err\n          ? searchState.err instanceof QueryTooShortError\n            ? <div className=\"message\">{t('search query too short')}</div>\n            : <div className=\"message\">{t('search error', { message: searchState.err })}</div>\n          : !searchState.result\n            ? <div className=\"message\">{t('searching')}</div>\n            : searchState.result.length === 0\n              ? <div className=\"message\">{t('no search result')}</div>\n              : <PartsList\n                names={searchState.result}\n                handleItemClick={handleItemClick}\n                handleItemMouseEnter={handleItemMouseEnter}\n              />}\n      </div>\n      <div className=\"parts-hover-name\" ref={hoverNameRef}>&nbsp;</div>\n    </div>\n  )\n};\n\nexport default PartsSearch;\n","import React, { useRef, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport args from '../args';\n\nimport { AppState } from '../reducers';\nimport { submitGlyphSelector } from '../selectors/submitGlyph';\nimport { unparseGlyph } from '../kageUtils/glyph';\n\n\nconst glyphName = args.name || 'sandbox';\n\nconst formAction = `${args.ssl ? 'https' : 'http'}://${args.host}/wiki/${encodeURIComponent(glyphName)}?action=preview`;\n\nconst formStyle: React.CSSProperties = {\n  visibility: 'hidden',\n  position: 'absolute',\n};\n\nconst SubmitForm = () => {\n  const exitEvent = useSelector((state: AppState) => state.exitEvent);\n  const formRef = useRef<HTMLFormElement>(null);\n  useEffect(() => {\n    if (exitEvent) {\n      formRef.current?.submit();\n    }\n  }, [exitEvent]);\n  const glyph = useSelector(submitGlyphSelector);\n  return (\n    <form\n      style={formStyle}\n      ref={formRef}\n      action={formAction}\n      method=\"post\"\n    >\n      <input type=\"hidden\" name=\"page\" value={glyphName} />\n      <input type=\"hidden\" name=\"action\" value=\"preview\" />\n      <input type=\"hidden\" name=\"textbox\" value={unparseGlyph(glyph)} />\n      <input type=\"hidden\" name=\"related\" value={args.related} />\n      <input type=\"hidden\" name=\"summary\" value={args.summary} />\n      {args.edittime && <input type=\"hidden\" name=\"edittime\" value={args.edittime} />}\n    </form>\n  );\n};\n\nexport default SubmitForm;","import React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport ReactModal from 'react-modal';\nimport { useTranslation } from 'react-i18next';\n\nimport { displayActions } from '../actions/display';\nimport { AppState } from '../reducers';\nimport { KShotai } from '../kage';\n\nimport './OptionModal.css';\n\nconst OptionModal = () => {\n  const showOptionModal = useSelector((state: AppState) => state.showOptionModal);\n  const grid = useSelector((state: AppState) => state.grid);\n  const shotai = useSelector((state: AppState) => state.shotai);\n  const showStrokeCenterLine = useSelector((state: AppState) => state.showStrokeCenterLine);\n\n  const dispatch = useDispatch();\n  const handleRequestClose = useCallback(() => {\n    dispatch(displayActions.closeOptionModal());\n  }, [dispatch]);\n\n  const handleGridDisplayChange = useCallback((evt: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(displayActions.setGridDisplay(evt.currentTarget.checked));\n  }, [dispatch]);\n  const handleGridOriginXChange = useCallback((evt: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(displayActions.setGridOriginX(evt.currentTarget.valueAsNumber));\n  }, [dispatch]);\n  const handleGridOriginYChange = useCallback((evt: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(displayActions.setGridOriginY(evt.currentTarget.valueAsNumber));\n  }, [dispatch]);\n  const handleGridSpacingXChange = useCallback((evt: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(displayActions.setGridSpacingX(evt.currentTarget.valueAsNumber));\n  }, [dispatch]);\n  const handleGridSpacingYChange = useCallback((evt: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(displayActions.setGridSpacingY(evt.currentTarget.valueAsNumber));\n  }, [dispatch]);\n  const handleShotaiChange = useCallback((evt: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(displayActions.setShotai(+evt.currentTarget.value as KShotai));\n  }, [dispatch]);\n  const handleStrokeCenterLineChange = useCallback((evt: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(displayActions.setStrokeCenterLineDisplay(evt.currentTarget.checked));\n  }, [dispatch]);\n  \n  const { t, i18n } = useTranslation();\n  const handleLanguageChange = useCallback((evt: React.ChangeEvent<HTMLSelectElement>) => {\n    i18n.changeLanguage(evt.currentTarget.value);\n  }, [i18n]);\n\n  return (\n    <ReactModal\n      isOpen={showOptionModal}\n      onRequestClose={handleRequestClose}\n      shouldCloseOnEsc={false} // handled by hotkeys-js\n      className={'modal-content'}\n    >\n      <fieldset>\n        <legend>{t('grid option')}</legend>\n        <div>\n          <label>\n            <input type=\"checkbox\" checked={grid.display} onChange={handleGridDisplayChange} />\n            {t('enable grid')}\n          </label>\n        </div>\n        <div>\n          {t('grid origin x')} <input\n            type=\"number\"\n            value={grid.originX}\n            min={0}\n            max={200}\n            onChange={handleGridOriginXChange}\n            disabled={!grid.display}\n          />\n          {' '}\n          {t('grid origin y')} <input\n            type=\"number\"\n            value={grid.originY}\n            min={0}\n            max={200}\n            onChange={handleGridOriginYChange}\n            disabled={!grid.display}\n          />\n        </div>\n        <div>\n          {t('grid spacing x')} <input\n            type=\"number\"\n            value={grid.spacingX}\n            min={2}\n            max={200}\n            onChange={handleGridSpacingXChange}\n            disabled={!grid.display}\n          />\n          {' '}\n          {t('grid spacing y')} <input\n            type=\"number\"\n            value={grid.spacingY}\n            min={2}\n            max={200}\n            onChange={handleGridSpacingYChange}\n            disabled={!grid.display}\n          />\n        </div>\n      </fieldset>\n      <div>\n        {t('glyph font style')} <select\n          value={shotai}\n          onChange={handleShotaiChange}\n        >\n          <option value={0}>{t('mincho style')}</option>\n          <option value={1}>{t('gothic style')}</option>\n        </select>\n      </div>\n      <div>\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={showStrokeCenterLine}\n            onChange={handleStrokeCenterLineChange}\n          />\n          {t('show stroke center line')}\n        </label>\n      </div>\n      <div>\n        {t('display language')} <select\n          value={i18n.language}\n          onChange={handleLanguageChange}\n        >\n          <option value=\"ja\">日本語</option>\n          <option value=\"en\">English</option>\n          <option value=\"ko\" disabled>한국어</option>\n          <option value=\"zh-Hans\" disabled>简体中文</option>\n          <option value=\"zh-Hant\" disabled>繁体中文</option>\n        </select>\n      </div>\n      <div>\n        <button onClick={handleRequestClose}>{t('close modal')}</button>\n      </div>\n    </ReactModal>\n  )\n};\n\nif (process.env.NODE_ENV !== 'test') {\n  ReactModal.setAppElement('#root');\n}\n\nexport default OptionModal;\n","import React from 'react';\n\nimport GlyphArea from './components/GlyphArea';\nimport EditorControls from './components/EditorControls';\nimport PartsSearch from './components/PartsSearch'\nimport SubmitForm from './components/SubmitForm';\nimport OptionModal from './components/OptionModal';\n\nimport { useShortcuts } from './shortcuts';\n\nimport './App.css';\n\nfunction App() {\n  useShortcuts();\n  return (\n    <div className=\"App\">\n      <GlyphArea />\n      <EditorControls />\n      <PartsSearch />\n      <SubmitForm />\n      <OptionModal />\n    </div>\n  );\n}\n\nexport default App;\n","import { useDispatch } from 'react-redux';\nimport { useHotkeys }from 'react-hotkeys-hook';\n\nimport { selectActions } from './actions/select';\nimport { editorActions } from './actions/editor';\nimport { undoActions } from './actions/undo';\n\nexport const useShortcuts = () => {\n  const dispatch = useDispatch();\n  useHotkeys('ctrl+a, command+a', (evt) => {\n    dispatch(selectActions.selectAll());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+i, command+i', (evt) => {\n    dispatch(selectActions.selectDeselected());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n\n  useHotkeys('ctrl+z, command+z', (evt) => {\n    dispatch(undoActions.undo());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+y, command+y, ctrl+shift+z, command+shift+z', (evt) => {\n    dispatch(undoActions.redo());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+x, command+x', (evt) => {\n    dispatch(editorActions.cut());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+c, command+c', (evt) => {\n    dispatch(editorActions.copy());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+v, command+v', (evt) => {\n    dispatch(editorActions.paste());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('del', (evt) => {\n    dispatch(editorActions.delete());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n\n  useHotkeys('esc', () => {\n    dispatch(editorActions.escape());\n  }, {}, [dispatch]);\n\n  useHotkeys('ctrl+h, left', (evt) => {\n    dispatch(editorActions.moveSelected([-1, 0]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+j, down', (evt) => {\n    dispatch(editorActions.moveSelected([0, 1]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+k, up', (evt) => {\n    dispatch(editorActions.moveSelected([0, -1]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+l, right', (evt) => {\n    dispatch(editorActions.moveSelected([1, 0]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+shift+h, shift+left', (evt) => {\n    dispatch(editorActions.moveSelected([-5, 0]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+shift+j, shift+down', (evt) => {\n    dispatch(editorActions.moveSelected([0, 5]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+shift+k, shift+up', (evt) => {\n    dispatch(editorActions.moveSelected([0, -5]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+shift+l, shift+right', (evt) => {\n    dispatch(editorActions.moveSelected([5, 0]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n\n  useHotkeys('ctrl+s, command+s', (evt) => {\n    dispatch(editorActions.finishEdit(evt));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport args from \"./args\";\n\nimport jaTranslation from './locales/ja.json';\nimport enTranslation from './locales/en.json';\n\nconst resources = {\n  ja: {\n    translation: jaTranslation,\n  },\n  en: {\n    translation: enTranslation,\n  },\n};\n\nlet lng = 'ja';\nswitch (args.host.split('.')[0]) {\n  case 'en':\n    lng = 'en';\n    break;\n  case 'ko':\n    lng = 'ko';\n    break;\n  case 'zhs':\n    lng = 'zh-Hans';\n    break;\n  case 'zht':\n    lng = 'zh-Hant';\n    break;\n}\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng,\n    fallbackLng: {\n      'zh-Hans': ['zh-Hant', 'ja'],\n      'zh-Hant': ['zh-Hans', 'ja'],\n      'default': ['ja'],\n    },\n\n    returnObjects: true,\n    interpolation: {\n      escapeValue: false, // react already safes from xss\n    },\n  });\n\nexport default i18n;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\n\nimport store from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './i18n';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}