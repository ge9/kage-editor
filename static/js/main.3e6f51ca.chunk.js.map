{"version":3,"sources":["kageUtils.ts","actions/editor.ts","args.ts","reducers/editor.ts","reducers/index.ts","kage.ts","components/Stroke.tsx","components/Glyph.tsx","components/GlyphArea.tsx","containers/GlyphArea.ts","App.tsx","serviceWorker.ts","i18n.ts","index.tsx"],"names":["glyphStr","actionCreator","actionCreatorFactory","editorActions","selectSingle","selectAddSingle","selectRemoveSingle","selectNone","selectAll","selectPrev","selectNext","startAreaSelect","startSelectionDrag","mouseMove","mouseUp","updateCTMInv","unparseGlyphLine","glyphLine","values","value","slice","partName","join","args","URLSearchParams","window","location","hash","initialState","glyph","get","split","map","line","glyphLineStr","splitLine","numColumns","strokeType","getNumColumns","i","push","Math","floor","parseGlyphLine","filter","gLine","length","selection","areaSelectRect","dragSelection","ctmInv","editor","reducerWithInitialState","case","state","index","includes","concat","index2","_gLine","firstSelected","min","max","evt","clientX","clientY","x1","y1","x2","y2","intersections","newSelection","Array","from","Set","newGlyph","combineReducers","kage","Kage","cached","StrokeComponent","props","polygons","array","polygon","key","points","x","y","GlyphComponent","polygonsSep","result","data","makeGlyphSeparated","nonSelection","_polygons","className","onMouseDown","handleMouseDownDeselectedStroke","Stroke","handleMouseDownSelectedStroke","GlyphArea","handleMouseMove","handleMouseUp","useEffect","document","addEventListener","removeEventListener","width","height","viewBox","onMouseDownCapture","handleMouseDownCapture","handleMouseDownBackground","connect","dispatch","target","SVGSVGElement","ctm","getScreenCTM","pt","createSVGPoint","evtx","evty","matrixTransform","inverse","shiftKey","ctrlKey","stopPropagation","App","Boolean","hostname","match","resources","ja","translation","host","lng","i18n","use","initReactI18next","init","returnObjects","interpolation","escapeValue","store","createStore","reducer","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3e6f51ca.chunk.js","sourcesContent":["export interface GlyphLine {\n  value: number[];\n  partName?: string;\n}\n\nexport const getNumColumns = (strokeType: number): number => {\n  switch (strokeType) {\n    case 0:\n    case 1:\n    case 9:\n      return 7;\n    case 2:\n      return 9;\n    case 3:\n    case 4:\n    case 6:\n    case 99:\n      return 11;\n    default:\n      return 0;\n  }\n};\n\nexport const parseGlyphLine = (glyphLineStr: string): GlyphLine => {\n  const splitLine = glyphLineStr.split(':');\n  const strokeType = +splitLine[0];\n  const numColumns = getNumColumns(strokeType);\n  const value = [];\n  for (let i = 0; i < numColumns; i++) {\n    value.push(Math.floor(+splitLine[i] || 0));\n  }\n  if (value[0] === 99) {\n    const partName = splitLine[7] || '';\n    return { value, partName }\n  }\n  return { value };\n};\n\nexport const unparseGlyphLine = (glyphLine: GlyphLine): string => {\n  const values: (number | string)[] = glyphLine.value.slice();\n  if (values[0] === 99) {\n    values[7] = glyphLine.partName || '';\n  }\n  return values.join(':');\n};\n\nexport const isValidGlyphLine = (glyphLine: GlyphLine): boolean => (\n  glyphLine.value.length !== 0 &&\n  (\n    glyphLine.value[0] !== 0 ||\n    glyphLine.value[1] === 97 || glyphLine.value[1] === 98 || glyphLine.value[1] === 99\n  )\n);\n\nexport type Glyph = GlyphLine[];\n\nexport const parseGlyph = (glyphStr: string): Glyph => (\n  glyphStr.split(/[$\\r\\n]+/)\n    .map((line) => parseGlyphLine(line))\n    .filter((gLine) => isValidGlyphLine(gLine))\n);\n\nexport const unparseGlyph = (glyph: Glyph): string => (\n  glyph\n    .map((gLine) => unparseGlyphLine(gLine))\n    .join('$')\n);\n","import actionCreatorFactory from 'typescript-fsa';\n\nexport type CTMInv = (x: number, y: number) => [number, number];\n\nconst actionCreator = actionCreatorFactory('EDITOR');\n\nexport const editorActions = {\n  selectSingle: actionCreator<number>('SELECT_SINGLE'),\n  selectAddSingle: actionCreator<number>('SELECT_ADD_SINGLE'),\n  selectRemoveSingle: actionCreator<number>('SELECT_REMOVE_SINGLE'),\n  selectNone: actionCreator('SELECT_NONE'),\n  selectAll: actionCreator('SELECT_ALL'),\n  selectPrev: actionCreator('SELECT_PREV'),\n  selectNext: actionCreator('SELECT_NEXT'),\n\n  startAreaSelect: actionCreator<React.MouseEvent>('AREA_SELECT_START'),\n  startSelectionDrag: actionCreator<React.MouseEvent>('SELECTION_DRAG_START'),\n\n  mouseMove: actionCreator<MouseEvent>('MOUSE_MOVE'),\n  mouseUp: actionCreator<MouseEvent>('MOUSE_UP'),\n\n  updateCTMInv: actionCreator<CTMInv>('UPDATE_CTMINV'),\n};\n","const args = new URLSearchParams(window.location.hash.slice(1));\n\nexport default args;\n","import { reducerWithInitialState } from 'typescript-fsa-reducers';\n\nimport { editorActions } from '../actions/editor';\nimport { Glyph, parseGlyph } from '../kageUtils';\n\nimport args from '../args';\n\n\nconst performAreaSelect = (glyph: Glyph, x1: number, y1: number, x2: number, y2: number): number[] => {\n  // FIXME\n  return [];\n};\n\nconst moveSelected = (glyph: Glyph, selection: number[], dx: number, dy: number): Glyph => {\n  // FIXME\n  return glyph;\n};\n\n\nexport interface EditorState {\n  glyph: Glyph;\n  selection: number[];\n  areaSelectRect: [number, number, number, number] | null;\n  dragSelection: [number, number, number, number] | null;\n  ctmInv: ((x: number, y: number) => [number, number]) | null;\n}\n\nconst initialState: EditorState = {\n  glyph: parseGlyph(args.get('data') || ''),\n  selection: [],\n  areaSelectRect: null,\n  dragSelection: null,\n  ctmInv: null,\n};\n\nconst editor = reducerWithInitialState(initialState)\n  .case(editorActions.selectSingle, (state, index) => ({\n    ...state,\n    selection: [index],\n  }))\n  .case(editorActions.selectAddSingle, (state, index) => ({\n    ...state,\n    selection: state.selection.includes(index) ? state.selection : state.selection.concat([index]),\n  }))\n  .case(editorActions.selectRemoveSingle, (state, index) => ({\n    ...state,\n    selection: state.selection.filter((index2) => index !== index2),\n  }))\n  .case(editorActions.selectAll, (state) => ({\n    ...state,\n    selection: state.glyph.map((_gLine, index) => index),\n  }))\n  .case(editorActions.selectNone, (state) => ({\n    ...state,\n    selection: [],\n  }))\n  .case(editorActions.selectPrev, (state) => {\n    if (state.glyph.length === 0) {\n      return { ...state, selection: [] };\n    }\n    const firstSelected = state.selection.length === 0 ? 0 : Math.min(...state.selection);\n    return {\n      ...state,\n      selection: [(firstSelected - 1 + state.glyph.length) % state.glyph.length],\n    };\n  })\n  .case(editorActions.selectNext, (state) => {\n    if (state.glyph.length === 0) {\n      return { ...state, selection: [] };\n    }\n    const firstSelected = state.selection.length === 0 ? -1 : Math.max(...state.selection);\n    return {\n      ...state,\n      selection: [(firstSelected + 1 + state.glyph.length) % state.glyph.length],\n    };\n  })\n\n  .case(editorActions.startAreaSelect, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      areaSelectRect: [x1, y1, x1, y1],\n    };\n  })\n  .case(editorActions.startSelectionDrag, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      dragSelection: [x1, y1, x1, y1],\n    };\n  })\n\n  .case(editorActions.mouseMove, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    if (state.areaSelectRect) {\n      const [x1, y1] = state.areaSelectRect;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        areaSelectRect: [x1, y1, x2, y2],\n      };\n    }\n    if (state.dragSelection) {\n      const [x1, y1] = state.dragSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        dragSelection: [x1, y1, x2, y2],\n      };\n    }\n    return state;\n  })\n  .case(editorActions.mouseUp, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    if (state.areaSelectRect) {\n      const [x1, y1] = state.areaSelectRect;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      const intersections = performAreaSelect(state.glyph, x1, y1, x2, y2);\n\n      const newSelection = Array.from(new Set(state.selection.concat(intersections)));\n      return {\n        ...state,\n        selection: newSelection,\n        areaSelectRect: null,\n      };\n    }\n    if (state.dragSelection) {\n      const [x1, y1] = state.dragSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n\n      const newGlyph = moveSelected(state.glyph, state.selection, x2 - x1, y2 - y1);\n      return {\n        ...state,\n        glyph: newGlyph,\n        dragSelection: null,\n      };\n    }\n    return state;\n  })\n\n  .case(editorActions.updateCTMInv, (state, ctmInv) => ({\n    ...state,\n    ctmInv,\n  }));\n\nexport default editor;\n","import { combineReducers } from 'redux';\n\nimport editor, { EditorState } from './editor';\n\nexport type AppState = {\n  editor: EditorState;\n};\n\nexport default combineReducers<AppState>({\n  editor,\n});\n","import { Kage, Polygons } from '@kurgm/kage-engine';\nimport { Glyph, unparseGlyphLine } from './kageUtils';\n\nexport const kage = new Kage();\n\nlet cached: {\n  glyph: Glyph;\n  result: Polygons[];\n} | null = null;\n\nexport const makeGlyphSeparated = (glyph: Glyph): Polygons[] => {\n  if (glyph === cached?.glyph) {\n    return cached.result;\n  }\n  const data = glyph.map(unparseGlyphLine);\n  const result = kage.makeGlyphSeparated(data);\n  cached = { glyph, result };\n  return result;\n};\n","import React from 'react';\n\nimport { Polygons } from '@kurgm/kage-engine';\n\nexport interface StrokeComponentProps {\n  polygons: Polygons;\n}\n\nconst StrokeComponent = (props: StrokeComponentProps) => (\n  <>\n    {props.polygons.array.map((polygon, i) => (\n      <polygon key={i} points={polygon.array.map(({ x, y }) => `${x},${y} `).join(\"\")} />\n    ))}\n  </>\n);\n\nexport default StrokeComponent;\n","import React from 'react';\n\nimport { Glyph } from '../kageUtils';\nimport { makeGlyphSeparated } from '../kage';\nimport Stroke from './Stroke';\n\nimport './Glyph.css'\n\nexport interface GlyphComponentProps {\n  glyph: Glyph;\n  selection: number[];\n  handleMouseDownDeselectedStroke?: (evt: React.MouseEvent, index: number) => void;\n  handleMouseDownSelectedStroke?: (evt: React.MouseEvent, index: number) => void;\n}\n\nconst GlyphComponent = (props: GlyphComponentProps) => {\n  const polygonsSep = makeGlyphSeparated(props.glyph);\n\n  const { selection } = props;\n  const nonSelection = polygonsSep.map((_polygons, index) => index)\n    .filter((index) => !selection.includes(index));\n\n  return (\n    <>\n      <g className=\"strokes-deselected\">\n        {nonSelection.map((index) => (\n          <g key={index} onMouseDown={(evt) => props.handleMouseDownDeselectedStroke?.(evt, index)}>\n            <Stroke polygons={polygonsSep[index]} />\n          </g>\n        ))}\n      </g>\n      <g className=\"strokes-selected\">\n        {selection.map((index) => (\n          <g key={index} onMouseDown={(evt) => props.handleMouseDownSelectedStroke?.(evt, index)}>\n            <Stroke polygons={polygonsSep[index]} />\n          </g>\n        ))}\n      </g>\n    </>\n  );\n};\n\nexport default GlyphComponent;\n","import React, { useEffect } from 'react';\n\nimport { EditorState } from '../reducers/editor';\n\nimport Glyph from './Glyph';\n\nimport { GlyphAreaActions } from '../containers/GlyphArea';\nimport './GlyphArea.css';\n\ninterface OwnProps {\n}\n\ntype GlyphAreaProps = OwnProps & EditorState & GlyphAreaActions;\n\nconst GlyphArea = (props: GlyphAreaProps) => {\n  const { handleMouseMove, handleMouseUp } = props;\n  useEffect(() => {\n    document.addEventListener('mousemove', handleMouseMove)\n    document.addEventListener('mouseup', handleMouseUp);\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [handleMouseMove, handleMouseUp]);\n\n  return (\n    <div className=\"glyph-area\">\n      <svg\n        width=\"100%\" height=\"100%\" viewBox=\"-20 -20 500 240\"\n        onMouseDownCapture={props.handleMouseDownCapture}\n        onMouseDown={props.handleMouseDownBackground}\n      >\n        {/* TODO: grid */}\n        <rect x=\"0\" y=\"0\" width=\"200\" height=\"200\" className=\"glyph-boundary\" />\n        <rect x=\"12\" y=\"12\" width=\"176\" height=\"176\" className=\"glyph-guide\" />\n        <Glyph\n          glyph={props.glyph}\n          selection={props.selection}\n          handleMouseDownDeselectedStroke={props.handleMouseDownDeselectedStroke}\n          handleMouseDownSelectedStroke={props.handleMouseDownSelectedStroke}\n        />\n        {/* TODO: control points */}\n      </svg>\n    </div>\n  );\n};\n\nexport default GlyphArea;\n","import { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\n\nimport { editorActions, CTMInv } from '../actions/editor';\nimport GlyphArea from '../components/GlyphArea';\nimport { AppState } from '../reducers';\n\nexport interface GlyphAreaActions {\n  handleMouseDownCapture: (evt: React.MouseEvent) => void;\n\n  handleMouseDownBackground: (evt: React.MouseEvent) => void;\n  handleMouseDownDeselectedStroke: (evt: React.MouseEvent, index: number) => void;\n  handleMouseDownSelectedStroke: (evt: React.MouseEvent, index: number) => void;\n\n  handleMouseMove: (evt: MouseEvent) => void;\n  handleMouseUp: (evt: MouseEvent) => void;\n};\n\nconst mapStateToProps = (state: AppState) => ({ ...state.editor });\n\nconst mapDispatchToProps = (dispatch: Dispatch): GlyphAreaActions => ({\n  handleMouseDownCapture: (evt: React.MouseEvent) => {\n    if (!(evt.target instanceof SVGSVGElement)) {\n      return;\n    }\n    const ctm = evt.target.getScreenCTM();\n    if (!ctm) {\n      return;\n    }\n    const pt = evt.target.createSVGPoint();\n    const ctmInv: CTMInv = (evtx, evty) => {\n      pt.x = evtx;\n      pt.y = evty;\n      const { x, y } = pt.matrixTransform(ctm.inverse());\n      return [x, y];\n    };\n    dispatch(editorActions.updateCTMInv(ctmInv));\n  },\n\n  handleMouseDownBackground: (evt: React.MouseEvent) => {\n    if (!(evt.shiftKey || evt.ctrlKey)) {\n      dispatch(editorActions.selectNone());\n    }\n    dispatch(editorActions.startAreaSelect(evt));\n  },\n  handleMouseDownDeselectedStroke: (evt: React.MouseEvent, index: number) => {\n    if (evt.shiftKey || evt.ctrlKey) {\n      dispatch(editorActions.selectAddSingle(index));\n    } else {\n      dispatch(editorActions.selectSingle(index));\n    }\n    dispatch(editorActions.startSelectionDrag(evt));\n    evt.stopPropagation();\n  },\n  handleMouseDownSelectedStroke: (evt: React.MouseEvent, index: number) => {\n    if (evt.shiftKey || evt.ctrlKey) {\n      dispatch(editorActions.selectRemoveSingle(index));\n    }\n    dispatch(editorActions.startSelectionDrag(evt));\n    evt.stopPropagation();\n  },\n\n  handleMouseMove: (evt: MouseEvent) => {\n    dispatch(editorActions.mouseMove(evt));\n  },\n  handleMouseUp: (evt: MouseEvent) => {\n    dispatch(editorActions.mouseUp(evt));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GlyphArea);\n","import React from 'react';\nimport './App.css';\n\nimport GlyphArea from './containers/GlyphArea';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GlyphArea />\n      <div className=\"editor-controls\">\n      </div>\n      <div className=\"parts-list-area\" />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport jaTranslation from './locales/ja.json';\n\nimport args from \"./args\";\n\nconst resources = {\n  ja: {\n    translation: jaTranslation,\n  },\n};\n\nconst host = args.get('host');\nlet lng = 'ja';\nif (host) {\n  switch (host.split('.')[0]) {\n    case 'en':\n      lng = 'en';\n      break;\n    case 'ko':\n      lng = 'ko';\n      break;\n    case 'zhs':\n      lng = 'zh-Hans';\n      break;\n    case 'zht':\n      lng = 'zh-Hant';\n      break;\n  }\n}\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng,\n\n    returnObjects: true,\n    interpolation: {\n      escapeValue: false, // react already safes from xss\n    },\n  });\n\nexport default i18n;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from './reducers';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './i18n';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}