{"version":3,"sources":["actions/editor.ts","kageUtils/match.ts","kageUtils/glyph.ts","kageUtils/bbx.ts","kageUtils/connection.ts","kageUtils/transform.ts","callapi.ts","kage.ts","kageUtils/stretchparam.ts","kageUtils/decompose.ts","args.ts","reducers/editor.ts","reducers/index.ts","store.ts","components/Stroke.tsx","components/Glyph.tsx","components/AreaSelectRect.tsx","components/ControlPoint.tsx","components/SelectionControl.tsx","containers/SelectionInfo.ts","containers/SelectionControl.ts","components/GlyphArea.tsx","containers/GlyphArea.ts","components/SelectionInfo.tsx","components/EditorControls.tsx","containers/EditorControls.ts","App.tsx","serviceWorker.ts","i18n.ts","index.tsx"],"names":["RectPointPosition","MatchType","actionCreator","actionCreatorFactory","editorActions","selectSingle","selectAddSingle","selectRemoveSingle","selectNone","selectAll","selectDeselected","selectPrev","selectNext","startAreaSelect","startSelectionDrag","startPointDrag","startResize","mouseMove","mouseUp","updateCTMInv","loadedBuhin","loadedStretchParam","swapWithPrev","swapWithNext","undo","redo","paste","copy","cut","decomposeSelected","toggleFreehand","openOptionModal","closeOptionModal","getNumColumns","strokeType","unparseGlyphLine","glyphLine","values","value","slice","partName","join","parseGlyph","glyphStr","split","map","line","glyphLineStr","splitLine","numColumns","i","push","Math","floor","parseGlyphLine","filter","gLine","length","bbxOfPoints","points","xs","ys","min","max","getGlyphLineBBX","mergeBBX","x11","y11","x12","y12","x21","y21","x22","y22","getGlyphLinesBBX","memoizeOne","glyphLines","reduce","gLines1","gLines2","every","gLine1","index","connectablePairs","position","strokeTypes","shapeTypes","matchConnectablePoint","point","includes","shapeType","getConnectablePoints","result","coord","pointIndex","endPointIndex","listupConnectedPoints","glyph","sPoints","lineIndex","sPoint","forEach","dPoint","some","point2","point1","filter1","filter2","glyph1","points1","glyph2","points2","listupConnectedPointsOfSelection","selection","selectedDescs","applyGlyphLineOperation","tX","tY","applyGlyphPointOperation","pdescs","newGlyph","newValue","moveSelectedGlyphLines","dx","dy","targetDescs","x","round","y","moveSelectedPoint","selectedDesc","targetDesc","resizeSelectedGlyphLines","oldBBX","newBBX","resizeGlyphLine","callApi","path","a","fetch","response","ok","Error","URLSearchParams","text","getSource","name","encodeURIComponent","get","kage","Kage","waiting","Set","makeGlyphSeparated","data","kBuhin","search","has","add","then","source","stretchMatch","exec","params","store","dispatch","delete","catch","err","console","error","loadAbsentBuhin","getStretchPositions","normalizeStretchPositions","positions","sx","sy","tx","calcStretchScalar","param","x0","y0","x1","y1","k","ty","abs","decompose","buhinMap","buhinSource","failedBuhin","strokesArray","getEachStrokes","unparseGlyph","box","getBox","x2","y2","isStretchEnabled","oldGlyphLine","newGlyphLine","stretchedX","stretch","minX","maxX","stretchedY","minY","maxY","sx2","sy2","tx2","ty2","px1","py1","px2","py2","revX","revY","setStretchPositions","args","window","location","hash","resizeSelected","selectedGlyphLine","north","west","south","east","southeast","applyDraggingEffectToGlyph","state","dragSelection","dragPoint","resizeSelection","initialState","areaSelectRect","ctmInv","Map","stretchParamMap","freehandMode","showOptionModal","clipboard","editor","reducerWithInitialState","case","concat","index2","_gLine","firstSelected","evt","clientX","clientY","intersections","polygonsSep","gAreaPolygon","array","polygon","gPolygon","polygonInPolygon","polygonIntersectsPolygon","performAreaSelect","newSelection","Array","from","newMap","set","targetLines","newLines","subindex","combineReducers","createStore","reducer","StrokeComponent","props","polygons","key","GlyphComponent","nonSelection","_polygons","className","onMouseDown","handleMouseDownDeselectedStroke","Stroke","handleMouseDownSelectedStroke","AreaSelectRect","rect","temp","width","height","ControlPoint","handleMouseDown","SelectionControl","rectControl","coords","handleMouseDownRectControl","pointControl","handleMouseDownPointControl","SelectionInfoType","getMatchType","none","isOnline","match","online","mapStateToProps","createSelector","selectedStrokes","multiSelect","selectedStroke","matchType","connect","stopPropagation","GlyphArea","handleMouseMove","handleMouseUp","useEffect","document","addEventListener","removeEventListener","viewBox","onMouseDownCapture","handleMouseDownCapture","handleMouseDownBackground","ctm","currentTarget","getScreenCTM","pt","createSVGPoint","ictm","inverse","evtx","evty","matrixTransform","shiftKey","ctrlKey","SelectionInfo","t","useTranslation","infoType","stroke","part","entityName","entity","summary","stretchCoeff","type","disabled","swapPrevDisabled","onClick","selectPrevDisabled","selectIndexString","selectNextDisabled","swapNextDisabled","other","selectedIndexString","sort","b","generateSummary","undefined","aliasMatch","stretchParam","EditorControls","undoDisabled","redoDisabled","pasteDisabled","decomposeDisabled","options","finishEdit","App","Boolean","hostname","resources","ja","translation","host","lng","i18n","use","initReactI18next","init","returnObjects","interpolation","escapeValue","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.9404dcb9.chunk.js","sourcesContent":["import actionCreatorFactory from 'typescript-fsa';\n\nimport { StretchParam } from '../kageUtils/stretchparam';\n\nexport type CTMInv = (x: number, y: number) => [number, number];\nexport enum RectPointPosition {\n  north,\n  south,\n  east,\n  west,\n  southeast,\n}\n\nconst actionCreator = actionCreatorFactory('EDITOR');\n\nexport const editorActions = {\n  selectSingle: actionCreator<number>('SELECT_SINGLE'),\n  selectAddSingle: actionCreator<number>('SELECT_ADD_SINGLE'),\n  selectRemoveSingle: actionCreator<number>('SELECT_REMOVE_SINGLE'),\n  selectNone: actionCreator('SELECT_NONE'),\n  selectAll: actionCreator('SELECT_ALL'),\n  selectDeselected: actionCreator('SELECT_TOGGLE_ALL'),\n  selectPrev: actionCreator('SELECT_PREV'),\n  selectNext: actionCreator('SELECT_NEXT'),\n\n  startAreaSelect: actionCreator<React.MouseEvent>('AREA_SELECT_START'),\n  startSelectionDrag: actionCreator<React.MouseEvent>('SELECTION_DRAG_START'),\n  startPointDrag: actionCreator<[React.MouseEvent, number]>('MOVE_POINT_START'),\n  startResize: actionCreator<[React.MouseEvent, RectPointPosition]>('RESIZE_START'),\n\n  mouseMove: actionCreator<MouseEvent>('MOUSE_MOVE'),\n  mouseUp: actionCreator<MouseEvent>('MOUSE_UP'),\n\n  updateCTMInv: actionCreator<CTMInv>('UPDATE_CTMINV'),\n\n  loadedBuhin: actionCreator<[string, string]>('LOAD_BUHIN_DATA'),\n  loadedStretchParam: actionCreator<[string, StretchParam]>('LOAD_STRETCH_PARAM'),\n\n  swapWithPrev: actionCreator('SWAP_WITH_PREV'),\n  swapWithNext: actionCreator('SWAP_WITH_NEXT'),\n\n  undo: actionCreator('UNDO'),\n  redo: actionCreator('REDO'),\n\n  paste: actionCreator('PASTE'),\n  copy: actionCreator('COPY_SELECTION'),\n  cut: actionCreator('CUT_SELECTION'),\n  decomposeSelected: actionCreator('DECOMPOSE_SELECTION'),\n\n  toggleFreehand: actionCreator('TOGGLE_FREEHAND_MODE'),\n\n  openOptionModal: actionCreator('OPEN_OPTION_MODAL'),\n  closeOptionModal: actionCreator('CLOSE_OPTION_MODAL'),\n};\n","import { Glyph, PointDescriptor, getNumColumns } from './glyph';\n\nexport enum MatchType {\n  none,\n  online,\n  match,\n}\n\nexport const getMatchType = (glyph: Glyph, point: PointDescriptor): MatchType => {\n  const glyphLine = glyph[point.lineIndex];\n\n  const endPointIndex = (getNumColumns(glyphLine.value[0]) - 3) / 2 - 1;\n  if (point.pointIndex !== 0 && point.pointIndex !== endPointIndex) {\n    return MatchType.none;\n  }\n\n  const x = glyphLine.value[3 + point.pointIndex * 2];\n  const y = glyphLine.value[3 + point.pointIndex * 2 + 1];\n  const isOnline = (x1: number, y1: number, x2: number, y2: number): boolean => (\n    (\n      x1 === x2 && // 垂直\n      x1 === x && y1 <= y && y <= y2\n    ) || (\n      y1 === y2 && // 水平\n      y1 === y && x1 <= x && x <= x2\n    )\n  );\n\n  let result = MatchType.none;\n  for (let lineIndex = 0; lineIndex < glyph.length; lineIndex++) {\n    if (point.lineIndex === lineIndex) {\n      continue;\n    }\n    const glyphLine = glyph[lineIndex];\n    if ([0, 9, 99].includes(glyphLine.value[0])) {\n      continue;\n    }\n\n    if (glyphLine.value[3] === x && glyphLine.value[4] === y) {\n      return MatchType.match;\n    }\n    const endPointIndex = (getNumColumns(glyphLine.value[0]) - 3) / 2 - 1;\n    if (\n      glyphLine.value[3 + endPointIndex * 2] === x &&\n      glyphLine.value[3 + endPointIndex * 2 + 1] === y\n    ) {\n      return MatchType.match;\n    }\n\n    switch (glyphLine.value[0]) {\n      case 3:\n      case 4:\n        if (\n          isOnline(glyphLine.value[3], glyphLine.value[4], glyphLine.value[5], glyphLine.value[6]) ||\n          isOnline(glyphLine.value[5], glyphLine.value[6], glyphLine.value[7], glyphLine.value[8])\n        ) {\n          result = MatchType.online;\n        }\n        break;\n      case 1:\n      case 7:\n        if (isOnline(glyphLine.value[3], glyphLine.value[4], glyphLine.value[5], glyphLine.value[6])) {\n          result = MatchType.online;\n        }\n        break;\n    }\n  }\n  return result;\n};\n","export interface GlyphLine {\n  value: number[];\n  partName?: string;\n}\n\nexport const getNumColumns = (strokeType: number): number => {\n  switch (strokeType) {\n    case 0:\n    case 1:\n    case 9:\n      return 7;\n    case 2:\n    case 3:\n    case 4:\n      return 9;\n    case 6:\n    case 7:\n    case 99:\n      return 11;\n    default:\n      return 0;\n  }\n};\n\nexport const parseGlyphLine = (glyphLineStr: string): GlyphLine => {\n  const splitLine = glyphLineStr.split(':');\n  const strokeType = +splitLine[0];\n  const numColumns = getNumColumns(strokeType);\n  const value = [];\n  for (let i = 0; i < numColumns; i++) {\n    value.push(Math.floor(+splitLine[i] || 0));\n  }\n  if (value[0] === 99) {\n    const partName = splitLine[7] || '';\n    return { value, partName }\n  }\n  return { value };\n};\n\nexport const unparseGlyphLine = (glyphLine: GlyphLine): string => {\n  const values: (number | string)[] = glyphLine.value.slice();\n  if (values[0] === 99) {\n    values[7] = glyphLine.partName || '';\n  }\n  return values.join(':');\n};\n\nexport const isValidGlyphLine = (glyphLine: GlyphLine): boolean => (\n  glyphLine.value.length !== 0 &&\n  (\n    glyphLine.value[0] !== 0 ||\n    glyphLine.value[1] === 97 || glyphLine.value[1] === 98 || glyphLine.value[1] === 99\n  )\n);\n\n\nexport type Glyph = GlyphLine[];\n\nexport const parseGlyph = (glyphStr: string): Glyph => (\n  glyphStr.split(/[$\\r\\n]+/)\n    .map((line) => parseGlyphLine(line))\n    .filter((gLine) => isValidGlyphLine(gLine))\n);\n\nexport const unparseGlyph = (glyph: Glyph): string => (\n  glyph\n    .map((gLine) => unparseGlyphLine(gLine))\n    .join('$')\n);\n\n\nexport interface PointDescriptor {\n  lineIndex: number;\n  pointIndex: number;\n}\n","import memoizeOne from 'memoize-one';\n\nimport { GlyphLine } from './glyph';\n\nexport type BBX = [number, number, number, number];\n\nexport const bbxOfPoints = (points: [number, number][]): BBX => {\n  const xs = points.map(([x]) => x);\n  const ys = points.map(([, y]) => y);\n  return [\n    Math.min(...xs),\n    Math.min(...ys),\n    Math.max(...xs),\n    Math.max(...ys),\n  ];\n};\n\nexport const getGlyphLineBBX = (glyphLine: GlyphLine): BBX => {\n  switch (glyphLine.value[0]) {\n    case 99:\n      return bbxOfPoints([\n        [glyphLine.value[3], glyphLine.value[4]],\n        [glyphLine.value[5], glyphLine.value[6]],\n      ]);\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 6:\n    case 7:\n    case 9: {\n      const points: [number, number][] = [];\n      for (let i = 3; i + 2 <= glyphLine.value.length; i += 2) {\n        points.push([glyphLine.value[i], glyphLine.value[i + 1]]);\n      }\n      return bbxOfPoints(points);\n    }\n    default:\n      return bbxOfPoints([]);\n  }\n}\n\nexport const mergeBBX = ([x11, y11, x12, y12]: BBX, [x21, y21, x22, y22]: BBX): BBX => [\n  Math.min(x11, x21),\n  Math.min(y11, y21),\n  Math.max(x12, x22),\n  Math.max(y12, y22),\n];\n\nexport const getGlyphLinesBBX = memoizeOne((glyphLines: GlyphLine[]): BBX => {\n  return glyphLines.map(getGlyphLineBBX).reduce(mergeBBX, bbxOfPoints([]));\n}, ([gLines1], [gLines2]) => (\n  gLines1.length === gLines2.length &&\n  gLines1.every((gLine1, index) => gLine1 === gLines2[index])\n));\n","import memoizeOne from 'memoize-one';\n\nimport { GlyphLine, Glyph, PointDescriptor, getNumColumns } from './glyph';\n\ninterface ConnectablePoint {\n  position: 'start' | 'end';\n  strokeType: number;\n  shapeType: number;\n  coord: [number, number];\n  pointIndex: number;\n}\n\ninterface ConnectablePointFilter {\n  position: 'start' | 'end';\n  strokeTypes: number[];\n  shapeTypes: number[];\n}\n\nconst connectablePairs: [ConnectablePointFilter, ConnectablePointFilter][] = [\n  [\n    // 左上\n    {\n      position: 'start',\n      strokeTypes: [1],\n      shapeTypes: [2],\n    },\n    {\n      position: 'start',\n      strokeTypes: [1, 2, 3, 4, 6, 7],\n      shapeTypes: [12],\n    },\n  ],\n  [\n    // 左下\n    {\n      position: 'start',\n      strokeTypes: [1],\n      shapeTypes: [2],\n    },\n    {\n      position: 'end',\n      strokeTypes: [1],\n      shapeTypes: [13, 313, 413],\n    },\n  ],\n  [\n    // 右上\n    {\n      position: 'end',\n      strokeTypes: [1],\n      shapeTypes: [2],\n    },\n    {\n      position: 'start',\n      strokeTypes: [1, 2, 3, 4, 6, 7],\n      shapeTypes: [22],\n    },\n  ],\n  [\n    // 右下\n    {\n      position: 'end',\n      strokeTypes: [1],\n      shapeTypes: [2],\n    },\n    {\n      position: 'end',\n      strokeTypes: [1],\n      shapeTypes: [23, 24],\n    },\n  ],\n];\n\nconst matchConnectablePoint = (filter: ConnectablePointFilter, point: ConnectablePoint) => (\n  filter.position === point.position &&\n  filter.strokeTypes.includes(point.strokeType) &&\n  filter.shapeTypes.includes(point.shapeType)\n)\n\nconst isConnectable = (point1: ConnectablePoint, point2: ConnectablePoint) => (\n  point1.coord[0] === point2.coord[0] &&\n  point1.coord[1] === point2.coord[1] &&\n  connectablePairs.some(([filter1, filter2]) => (\n    (matchConnectablePoint(filter1, point1) && matchConnectablePoint(filter2, point2)) ||\n    (matchConnectablePoint(filter2, point1) && matchConnectablePoint(filter1, point2))\n  ))\n);\n\nconst getConnectablePoints = (glyphLine: GlyphLine): ConnectablePoint[] => {\n  const result: ConnectablePoint[] = [];\n  switch (glyphLine.value[0]) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 6:\n    case 7: {\n      result.push({\n        position: 'start',\n        strokeType: glyphLine.value[0],\n        shapeType: glyphLine.value[1],\n        coord: [\n          glyphLine.value[3],\n          glyphLine.value[4],\n        ],\n        pointIndex: 0,\n      });\n      const endPointIndex = (getNumColumns(glyphLine.value[0]) - 3) / 2 - 1;\n      result.push({\n        position: 'end',\n        strokeType: glyphLine.value[0],\n        shapeType: glyphLine.value[2],\n        coord: [\n          glyphLine.value[3 + endPointIndex * 2],\n          glyphLine.value[3 + endPointIndex * 2 + 1],\n        ],\n        pointIndex: endPointIndex,\n      });\n      break;\n    }\n  }\n  return result;\n};\n\nexport const listupConnectedPoints = memoizeOne((glyph: Glyph, points: PointDescriptor[]): PointDescriptor[] => {\n  const sPoints: ConnectablePoint[] = [];\n  for (const { lineIndex, pointIndex } of points) {\n    for (const sPoint of getConnectablePoints(glyph[lineIndex])) {\n      if (sPoint.pointIndex === pointIndex) {\n        sPoints.push(sPoint);\n      }\n    }\n  }\n  const result: PointDescriptor[] = [];\n  glyph.forEach((glyphLine, lineIndex) => {\n    for (const dPoint of getConnectablePoints(glyphLine)) {\n      if (sPoints.some((sPoint) => isConnectable(sPoint, dPoint))) {\n        result.push({\n          lineIndex,\n          pointIndex: dPoint.pointIndex,\n        });\n      }\n    }\n  });\n  return result;\n}, ([glyph1, points1], [glyph2, points2]) => (\n  glyph1 === glyph2 &&\n  points1.length === points2.length &&\n  points1.every((point1, index) => (\n    point1.lineIndex === points2[index].lineIndex &&\n    point1.pointIndex === points2[index].pointIndex\n  ))\n));\n\nexport const listupConnectedPointsOfSelection = memoizeOne((glyph: Glyph, selection: number[]): PointDescriptor[] => {\n  const selectedDescs: PointDescriptor[] = [];\n  for (const lineIndex of selection) {\n    const glyphLine = glyph[lineIndex];\n    selectedDescs.push({ lineIndex, pointIndex: 0 });\n    selectedDescs.push({ lineIndex, pointIndex: (getNumColumns(glyphLine.value[0]) - 3) / 2 - 1 });\n  }\n  return listupConnectedPoints(glyph, selectedDescs)\n    .filter(({ lineIndex }) => !selection.includes(lineIndex));\n});\n","import { GlyphLine, Glyph, PointDescriptor } from './glyph';\n\nimport { BBX } from './bbx';\nimport { listupConnectedPoints, listupConnectedPointsOfSelection } from './connection';\n\nexport const applyGlyphLineOperation = (glyphLine: GlyphLine, tX: (x: number) => number, tY: (y: number) => number): GlyphLine => {\n  switch (glyphLine.value[0]) {\n    case 99: {\n      const value = glyphLine.value.slice();\n      value[3] = tX(value[3]);\n      value[4] = tY(value[4]);\n      value[5] = tX(value[5]);\n      value[6] = tY(value[6]);\n      return { value, partName: glyphLine.partName };\n    }\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 6:\n    case 7:\n    case 9: {\n      const value = glyphLine.value.slice();\n      for (let i = 3; i + 2 <= value.length; i += 2) {\n        value[i] = tX(value[i]);\n        value[i + 1] = tY(value[i + 1]);\n      }\n      return { value };\n    }\n    default:\n      return glyphLine;\n  }\n}\n\nexport const applyGlyphPointOperation = (glyph: Glyph, pdescs: PointDescriptor[], tX: (x: number) => number, tY: (y: number) => number): Glyph => {\n  if (pdescs.length === 0) {\n    return glyph;\n  }\n  const newGlyph = glyph.slice();\n  for (const { lineIndex, pointIndex } of pdescs) {\n    const glyphLine = newGlyph[lineIndex];\n    const newValue = glyphLine.value.slice();\n    newValue[3 + pointIndex * 2] = tX(newValue[3 + pointIndex * 2]);\n    newValue[3 + pointIndex * 2 + 1] = tY(newValue[3 + pointIndex * 2 + 1]);\n    newGlyph[lineIndex] = {\n      ...glyphLine,\n      value: newValue,\n    };\n  }\n  return newGlyph;\n};\n\n\nexport const moveSelectedGlyphLines = (glyph: Glyph, selection: number[], dx: number, dy: number): Glyph => {\n  const targetDescs = listupConnectedPointsOfSelection(glyph, selection);\n\n  const tX = (x: number) => Math.round(x + dx);\n  const tY = (y: number) => Math.round(y + dy);\n  glyph = glyph.map((glyphLine, index) => selection.includes(index)\n    ? applyGlyphLineOperation(glyphLine, tX, tY)\n    : glyphLine\n  );\n  glyph = applyGlyphPointOperation(glyph, targetDescs, tX, tY);\n  return glyph;\n};\n\nexport const moveSelectedPoint = (glyph: Glyph, selection: number[], pointIndex: number, dx: number, dy: number): Glyph => {\n  if (selection.length === 0) {\n    return glyph;\n  }\n  const lineIndex = selection[0];\n  const selectedDesc: PointDescriptor = { lineIndex, pointIndex };\n  const targetDescs = listupConnectedPoints(glyph, [selectedDesc])\n    .filter((targetDesc) => targetDesc.lineIndex !== lineIndex);\n  targetDescs.push(selectedDesc);\n\n  const tX = (x: number) => Math.round(x + dx);\n  const tY = (y: number) => Math.round(y + dy);\n  glyph = applyGlyphPointOperation(glyph, targetDescs, tX, tY);\n  return glyph;\n};\n\nexport const resizeGlyphLine = (glyphLine: GlyphLine, oldBBX: BBX, newBBX: BBX): GlyphLine => {\n  const [x11, y11, x12, y12] = oldBBX;\n  const [x21, y21, x22, y22] = newBBX;\n  const tX = (x: number) => Math.round(x21 + (x - x11) * (x22 - x21) / (x12 - x11));\n  const tY = (y: number) => Math.round(y21 + (y - y11) * (y22 - y21) / (y12 - y11));\n  return applyGlyphLineOperation(glyphLine, tX, tY);\n};\n\nexport const resizeSelectedGlyphLines = (glyph: Glyph, selection: number[], oldBBX: BBX, newBBX: BBX): Glyph => {\n  return glyph.map((glyphLine, index) => selection.includes(index)\n    ? resizeGlyphLine(glyphLine, oldBBX, newBBX)\n    : glyphLine\n  );\n};\n","// The temporary reverse proxy which adds 'Access-Control-Allow-Origin: *' header.\n// This header is required for cross-origin requests.\nconst apiUrlPrefix = 'https://asia-northeast1-ku6goma.cloudfunctions.net/gwproxy';\n\nconst callApi = async (path: string) => {\n  const response = await fetch(apiUrlPrefix + path);\n  if (!response.ok) {\n    throw new Error('API error occurred');\n  }\n  return new URLSearchParams(await response.text());\n};\n\nexport const getSource = async (name: string) => {\n  const result = await callApi(`/get_source.cgi?name=${encodeURIComponent(name)}`);\n  return result.get('data');\n};\n\nexport const search = async (query: string) => {\n  const result = await callApi(`/search4ge.cgi?query=${encodeURIComponent(query)}`);\n  return result.get('data')!;\n};\n\nexport const getCandidate = async (name: string) => {\n  const result = await callApi(`/get_candidate.cgi?name=${encodeURIComponent(name)}`);\n  return result.get('data')!;\n};\n","import memoizeOne from 'memoize-one';\n\nimport { Kage, Polygons } from '@kurgm/kage-engine';\nimport { Glyph, unparseGlyphLine } from './kageUtils/glyph';\nimport { StretchParam } from './kageUtils/stretchparam';\n\nimport store from './store';\nimport { editorActions } from './actions/editor';\n\nimport { getSource } from './callapi';\n\nexport const kage = new Kage();\n\nlet waiting = new Set<string>();\nconst loadAbsentBuhin = (name: string) => {\n  if (waiting.has(name)) {\n    return;\n  }\n  waiting.add(name);\n  getSource(name)\n    .then((source) => {\n      if (typeof source !== 'string') {\n        throw new Error(`failed to get buhin source of ${name}`);\n      }\n      const stretchMatch = /^0:1:0:(-?\\d+):(-?\\d+):(-?\\d+):(-?\\d+)(?=$|\\$)/.exec(source);\n      if (stretchMatch) {\n        const params: StretchParam = [\n          +stretchMatch[1] || 0,\n          +stretchMatch[2] || 0,\n          +stretchMatch[3] || 0,\n          +stretchMatch[4] || 0,\n        ];\n        store.dispatch(editorActions.loadedStretchParam([name, params]));\n      }\n      store.dispatch(editorActions.loadedBuhin([name, source]));\n      waiting.delete(name);\n    })\n    .catch((err) => console.error(err));\n};\n\nexport const makeGlyphSeparated = memoizeOne((glyph: Glyph, map: Map<string, string>): Polygons[] => {\n  const data = glyph.map(unparseGlyphLine);\n  kage.kBuhin.search = (name) => {\n    const result = map.get(name);\n    if (typeof result === 'undefined') {\n      loadAbsentBuhin(name);\n      return '';\n    }\n    return result;\n  };\n  const result = kage.makeGlyphSeparated(data);\n  return result;\n});\n","import { GlyphLine } from './glyph';\n\nexport type StretchParam = [number, number, number, number];\nexport type StretchPositions = [number, number, number, number];\n\nexport const getStretchPositions = (glyphLine: GlyphLine): StretchPositions | null => {\n  if (glyphLine.value[0] !== 99) {\n    return null;\n  }\n  const sx = glyphLine.value[9];\n  const sy = glyphLine.value[10];\n  const tx = glyphLine.value[1];\n  const ty = glyphLine.value[2];\n  return [sx, sy, tx, ty];\n};\n\nexport const setStretchPositions = (glyphLine: GlyphLine, positions: StretchPositions): GlyphLine => {\n  if (glyphLine.value[0] !== 99) {\n    return glyphLine;\n  }\n  const [sx, sy, tx, ty] = positions;\n\n  const newValue = glyphLine.value.slice();\n  newValue[9] = sx;\n  newValue[10] = sy;\n  newValue[1] = tx;\n  newValue[2] = ty;\n  return { value: newValue, partName: glyphLine.partName };\n};\n\nexport const normalizeStretchPositions = (positions: StretchPositions): StretchPositions => {\n  let [sx, sy, tx, ty] = positions;\n  if (tx <= 100) {\n    tx += 200;\n    sx = sy = 0;\n  }\n  return [sx, sy, tx, ty];\n};\n\nexport const calcStretchPositions = (param: StretchParam, k: number): StretchPositions => {\n  const [x0, y0, x1, y1] = param;\n  return [\n    x0 - 100,\n    y0 - 100,\n    x0 + (x1 - x0) * k / 20 + 100,\n    y0 + (y1 - y0) * k / 20 - 100,\n  ];\n};\n\nconst clampStretchScalar = (k: number): number => Math.max(-10, Math.min(10, k));\n\nexport const calcStretchScalar = (param: StretchParam, positions: StretchPositions): number => {\n  const [x0, y0, x1, y1] = param;\n  if (x0 === x1 && y0 === y1) {\n    return 0;\n  }\n  const [sx, sy, tx, ty] = normalizeStretchPositions(positions);\n  if (sx === tx - 200 && sy === ty) {\n    return 0;\n  }\n  return clampStretchScalar(Math.round(\n    Math.abs(x0 - x1) > Math.abs(y0 - y1)\n      ? (tx - 100 - x0) / (x1 - x0) * 20\n      : (ty + 100 - y0) / (y1 - y0) * 20\n  )) || 0;\n}\n","import { kage } from '../kage';\n\nimport { GlyphLine, parseGlyph, unparseGlyph } from './glyph';\nimport { getStretchPositions, normalizeStretchPositions, setStretchPositions } from './stretchparam';\nimport { applyGlyphLineOperation } from './transform';\n\nexport const decompose = (glyphLine: GlyphLine, buhinMap: Map<string, string>): GlyphLine[] => {\n  if (glyphLine.value[0] !== 99) {\n    return [glyphLine];\n  }\n  const buhinSource = buhinMap.get(glyphLine.partName!);\n  if (!buhinSource) {\n    return [glyphLine];\n  }\n\n  let failedBuhin = false;\n  kage.kBuhin.search = (name: string) => {\n    const data = buhinMap.get(name);\n    if (typeof data !== 'string') {\n      failedBuhin = true;\n      return '';\n    }\n    return data;\n  };\n\n  const glyph = parseGlyph(buhinSource);\n\n  const strokesArray =\n    // @ts-ignore 2445\n    kage.getEachStrokes(\n      unparseGlyph(glyph)\n    );\n  const box =\n    // @ts-ignore 2445\n    kage.getBox(\n      strokesArray\n    );\n\n  if (failedBuhin) {\n    return [glyphLine];\n  }\n\n  const x1 = glyphLine.value[3];\n  const y1 = glyphLine.value[4];\n  const x2 = glyphLine.value[5];\n  const y2 = glyphLine.value[6];\n  const [sx, sy, tx, ty] = normalizeStretchPositions(getStretchPositions(glyphLine)!);\n  const isStretchEnabled = !(sx === tx - 200 && sy === ty);\n\n  return glyph.map((oldGlyphLine) => {\n    const tX = (x: number) => {\n      const stretchedX = isStretchEnabled\n        ? kage.stretch(tx - 200, sx, x, box.minX, box.maxX)\n        : x;\n      return Math.round(stretchedX / 200 * (x2 - x1) + x1);\n    };\n    const tY = (y: number) => {\n      const stretchedY = isStretchEnabled\n        ? kage.stretch(ty, sy, y, box.minY, box.maxY)\n        : y;\n      return Math.round(stretchedY / 200 * (y2 - y1) + y1);\n    };\n    const newGlyphLine = applyGlyphLineOperation(oldGlyphLine, tX, tY);\n\n    if (!(isStretchEnabled && newGlyphLine.value[0] === 99)) {\n      return newGlyphLine;\n    }\n\n    const [sx2, sy2, tx2, ty2] = normalizeStretchPositions(getStretchPositions(newGlyphLine)!);\n    if (!(sx2 === tx2 - 200 && sy2 === ty2)) {\n      // Cannot compose two stretches...\n      return newGlyphLine;\n    }\n\n    const px1 = newGlyphLine.value[3];\n    const py1 = newGlyphLine.value[4];\n    const px2 = newGlyphLine.value[5];\n    const py2 = newGlyphLine.value[6];\n\n    if (px1 === px2 || py1 === py2) {\n      return newGlyphLine;\n    }\n\n    const revX = (x: number) => (x - px1) / (px2 - px1) * 200;\n    const revY = (y: number) => (y - py1) / (py2 - py1) * 200;\n    return setStretchPositions(newGlyphLine, [\n      revX(sx2 + 100),\n      revY(sy2 + 100),\n      revX(tx2 - 100) + 100,\n      revY(ty2 + 100),\n    ]);\n  });\n};\n","const args = new URLSearchParams(window.location.hash.slice(1));\n\nexport default args;\n","import { reducerWithInitialState } from 'typescript-fsa-reducers';\n\n// @ts-ignore\nimport { polygonInPolygon, polygonIntersectsPolygon } from 'geometric';\n\nimport { editorActions, RectPointPosition } from '../actions/editor';\nimport { GlyphLine, Glyph, parseGlyph } from '../kageUtils/glyph';\nimport { getGlyphLinesBBX } from '../kageUtils/bbx';\nimport { moveSelectedGlyphLines, moveSelectedPoint, resizeSelectedGlyphLines, applyGlyphLineOperation } from '../kageUtils/transform';\nimport { StretchParam } from '../kageUtils/stretchparam';\nimport { decompose } from '../kageUtils/decompose';\nimport { makeGlyphSeparated } from '../kage';\n\nimport args from '../args';\n\n\nconst performAreaSelect = (glyph: Glyph, buhinMap: Map<string, string>, x1: number, y1: number, x2: number, y2: number): number[] => {\n  const polygonsSep = makeGlyphSeparated(glyph, buhinMap);\n  const result = [];\n\n  const gAreaPolygon: [number, number][] = [\n    [x1, y1],\n    [x1, y2],\n    [x2, y2],\n    [x2, y1],\n    [x1, y1],\n  ];\n\n  for (let index = 0; index < polygonsSep.length; index++) {\n    const polygons = polygonsSep[index];\n    if (polygons.array.some((polygon) => {\n      const gPolygon = polygon.array.map(({ x, y }) => [x, y]);\n      gPolygon.push(gPolygon[0]); // close polygon\n\n      return (\n        polygonInPolygon(gAreaPolygon, gPolygon) ||\n        polygonInPolygon(gPolygon, gAreaPolygon) ||\n        polygonIntersectsPolygon(gAreaPolygon, gPolygon)\n      ) as boolean;\n    })) {\n      result.push(index);\n    }\n  }\n  return result;\n};\n\nexport const resizeSelected = (glyph: Glyph, selection: number[], position: RectPointPosition, dx: number, dy: number): Glyph => {\n  if (selection.length === 1) {\n    const selectedGlyphLine = glyph[selection[0]];\n    switch (selectedGlyphLine.value[0]) {\n      case 0:\n      case 9:\n      case 99: {\n        const newValue = selectedGlyphLine.value.slice();\n        switch (position) {\n          case RectPointPosition.north:\n            newValue[4] += dy;\n            break;\n          case RectPointPosition.west:\n            newValue[3] += dx;\n            break;\n          case RectPointPosition.south:\n            newValue[6] += dy;\n            break;\n          case RectPointPosition.east:\n            newValue[5] += dx;\n            break;\n          case RectPointPosition.southeast:\n            newValue[5] += dx;\n            newValue[6] += dy;\n            break;\n          default:\n            // exhaustive?\n            ((_x: never) => { })(position);\n        }\n        const newGlyphLine: GlyphLine = selectedGlyphLine.value[0] === 99\n          ? { value: newValue, partName: selectedGlyphLine.partName }\n          : { value: newValue };\n        return glyph.map((glyphLine, index) => index === selection[0] ? newGlyphLine : glyphLine);\n      }\n    }\n  }\n  const minSize = 20;\n  const oldBBX = getGlyphLinesBBX(selection.map((index) => glyph[index]));\n  const newBBX = oldBBX.slice() as typeof oldBBX;\n  switch (position) {\n    case RectPointPosition.north:\n      newBBX[1] = Math.min(newBBX[1] + dy, newBBX[3] - minSize);\n      break;\n    case RectPointPosition.west:\n      newBBX[0] = Math.min(newBBX[0] + dx, newBBX[2] - minSize);\n      break;\n    case RectPointPosition.south:\n      newBBX[3] = Math.max(newBBX[3] + dy, newBBX[1] + minSize);\n      break;\n    case RectPointPosition.east:\n      newBBX[2] = Math.max(newBBX[2] + dx, newBBX[0] + minSize);\n      break;\n    case RectPointPosition.southeast:\n      newBBX[2] = Math.max(newBBX[2] + dx, newBBX[0] + minSize);\n      newBBX[3] = Math.max(newBBX[3] + dy, newBBX[1] + minSize);\n      break;\n    default:\n      // exhaustive?\n      ((_x: never) => { })(position);\n  }\n  return resizeSelectedGlyphLines(glyph, selection, oldBBX, newBBX);\n};\n\nexport const applyDraggingEffectToGlyph = (state: EditorState): Glyph => {\n  let glyph = state.glyph;\n  if (state.dragSelection) {\n    const [x1, y1, x2, y2] = state.dragSelection;\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    glyph = moveSelectedGlyphLines(state.glyph, state.selection, dx, dy);\n  } else if (state.dragPoint) {\n    const [pointIndex, [x1, y1, x2, y2]] = state.dragPoint;\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    glyph = moveSelectedPoint(state.glyph, state.selection, pointIndex, dx, dy);\n  } else if (state.resizeSelection) {\n    const [position, [x1, y1, x2, y2]] = state.resizeSelection;\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    glyph = resizeSelected(state.glyph, state.selection, position, dx, dy);\n  }\n  return glyph;\n}\n\n\nexport interface EditorState {\n  glyph: Glyph;\n  selection: number[];\n  areaSelectRect: [number, number, number, number] | null;\n  dragSelection: [number, number, number, number] | null;\n  dragPoint: [number, [number, number, number, number]] | null;\n  resizeSelection: [RectPointPosition, [number, number, number, number]] | null;\n  ctmInv: ((x: number, y: number) => [number, number]) | null;\n  buhinMap: Map<string, string>;\n  stretchParamMap: Map<string, StretchParam>;\n  freehandMode: boolean;\n  showOptionModal: boolean;\n  clipboard: GlyphLine[];\n}\n\nconst initialState: EditorState = {\n  glyph: parseGlyph(args.get('data') || ''),\n  selection: [],\n  areaSelectRect: null,\n  dragSelection: null,\n  dragPoint: null,\n  resizeSelection: null,\n  ctmInv: null,\n  buhinMap: new Map<string, string>(),\n  stretchParamMap: new Map<string, StretchParam>(),\n  freehandMode: false,\n  showOptionModal: false,\n  clipboard: [],\n};\n\nconst editor = reducerWithInitialState(initialState)\n  .case(editorActions.selectSingle, (state, index) => ({\n    ...state,\n    selection: [index],\n  }))\n  .case(editorActions.selectAddSingle, (state, index) => ({\n    ...state,\n    selection: state.selection.includes(index) ? state.selection : state.selection.concat([index]),\n  }))\n  .case(editorActions.selectRemoveSingle, (state, index) => ({\n    ...state,\n    selection: state.selection.filter((index2) => index !== index2),\n  }))\n  .case(editorActions.selectAll, (state) => ({\n    ...state,\n    selection: state.glyph.map((_gLine, index) => index),\n  }))\n  .case(editorActions.selectDeselected, (state) => ({\n    ...state,\n    selection: state.glyph.map((_gLine, index) => index).filter((index) => !state.selection.includes(index)),\n  }))\n  .case(editorActions.selectNone, (state) => ({\n    ...state,\n    selection: [],\n  }))\n  .case(editorActions.selectPrev, (state) => {\n    if (state.glyph.length === 0) {\n      return { ...state, selection: [] };\n    }\n    const firstSelected = state.selection.length === 0 ? 0 : Math.min(...state.selection);\n    return {\n      ...state,\n      selection: [(firstSelected - 1 + state.glyph.length) % state.glyph.length],\n    };\n  })\n  .case(editorActions.selectNext, (state) => {\n    if (state.glyph.length === 0) {\n      return { ...state, selection: [] };\n    }\n    const firstSelected = state.selection.length === 0 ? -1 : Math.max(...state.selection);\n    return {\n      ...state,\n      selection: [(firstSelected + 1 + state.glyph.length) % state.glyph.length],\n    };\n  })\n\n  .case(editorActions.startAreaSelect, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      areaSelectRect: [x1, y1, x1, y1],\n    };\n  })\n  .case(editorActions.startSelectionDrag, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      dragSelection: [x1, y1, x1, y1],\n    };\n  })\n  .case(editorActions.startPointDrag, (state, [evt, pointIndex]) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      dragPoint: [pointIndex, [x1, y1, x1, y1]],\n    };\n  })\n  .case(editorActions.startResize, (state, [evt, position]) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      resizeSelection: [position, [x1, y1, x1, y1]],\n    };\n  })\n\n  .case(editorActions.mouseMove, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    if (state.areaSelectRect) {\n      const [x1, y1] = state.areaSelectRect;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        areaSelectRect: [x1, y1, x2, y2],\n      };\n    }\n    if (state.dragSelection) {\n      const [x1, y1] = state.dragSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        dragSelection: [x1, y1, x2, y2],\n      };\n    }\n    if (state.dragPoint) {\n      const [pointIndex, [x1, y1]] = state.dragPoint;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        dragPoint: [pointIndex, [x1, y1, x2, y2]],\n      };\n    }\n    if (state.resizeSelection) {\n      const [position, [x1, y1]] = state.resizeSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        resizeSelection: [position, [x1, y1, x2, y2]],\n      };\n    }\n    return state;\n  })\n  .case(editorActions.mouseUp, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    if (state.areaSelectRect) {\n      const [x1, y1] = state.areaSelectRect;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      const intersections = performAreaSelect(state.glyph, state.buhinMap, x1, y1, x2, y2);\n\n      const newSelection = Array.from(new Set(state.selection.concat(intersections)));\n      return {\n        ...state,\n        selection: newSelection,\n        areaSelectRect: null,\n      };\n    }\n    if (state.dragSelection) {\n      const [x1, y1] = state.dragSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n\n      const newGlyph = moveSelectedGlyphLines(state.glyph, state.selection, x2 - x1, y2 - y1);\n      return {\n        ...state,\n        glyph: newGlyph,\n        dragSelection: null,\n      };\n    }\n    if (state.dragPoint) {\n      const [pointIndex, [x1, y1]] = state.dragPoint;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n\n      const newGlyph = moveSelectedPoint(state.glyph, state.selection, pointIndex, x2 - x1, y2 - y1);\n      return {\n        ...state,\n        glyph: newGlyph,\n        dragPoint: null,\n      };\n    }\n    if (state.resizeSelection) {\n      const [position, [x1, y1]] = state.resizeSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n\n      const newGlyph = resizeSelected(state.glyph, state.selection, position, x2 - x1, y2 - y1);\n      return {\n        ...state,\n        glyph: newGlyph,\n        resizeSelection: null,\n      };\n    }\n    return state;\n  })\n\n  .case(editorActions.updateCTMInv, (state, ctmInv) => ({\n    ...state,\n    ctmInv,\n  }))\n\n  .case(editorActions.loadedBuhin, (state, [name, data]) => {\n    const newMap = new Map(state.buhinMap);\n    newMap.set(name, data);\n    return {\n      ...state,\n      buhinMap: newMap,\n    };\n  })\n  .case(editorActions.loadedStretchParam, (state, [name, param]) => {\n    const newMap = new Map(state.stretchParamMap);\n    newMap.set(name, param);\n    return {\n      ...state,\n      stretchParamMap: newMap,\n    }\n  })\n\n  .case(editorActions.swapWithPrev, (state) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    if (lineIndex === 0) {\n      return state;\n    }\n    const newGlyph = state.glyph.slice();\n    newGlyph[lineIndex - 1] = state.glyph[lineIndex];\n    newGlyph[lineIndex] = state.glyph[lineIndex - 1];\n    return {\n      ...state,\n      glyph: newGlyph,\n      selection: [lineIndex - 1],\n    };\n  })\n  .case(editorActions.swapWithNext, (state) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    if (lineIndex === state.glyph.length - 1) {\n      return state;\n    }\n    const newGlyph = state.glyph.slice();\n    newGlyph[lineIndex + 1] = state.glyph[lineIndex];\n    newGlyph[lineIndex] = state.glyph[lineIndex + 1];\n    return {\n      ...state,\n      glyph: newGlyph,\n      selection: [lineIndex + 1],\n    };\n  })\n\n  .case(editorActions.undo, (state) => state) // TODO\n  .case(editorActions.redo, (state) => state) // TODO\n\n  .case(editorActions.paste, (state) => ({\n    ...state,\n    glyph: state.glyph.concat(state.clipboard),\n    selection: state.clipboard.map((_gLine, index) => state.glyph.length + index),\n  }))\n  .case(editorActions.copy, (state) => {\n    const targetLines = state.selection.map((index) => state.glyph[index]);\n    const [x1, y1] = getGlyphLinesBBX(targetLines);\n    const tX = (x: number) => 230 + x - x1;\n    const tY = (y: number) => 20 + y - y1;\n    return {\n      ...state,\n      clipboard: state.selection.map((index) => (\n        applyGlyphLineOperation(state.glyph[index], tX, tY)\n      )),\n    };\n  })\n  .case(editorActions.cut, (state) => ({\n    ...state,\n    glyph: state.glyph.filter((_gLine, index) => !state.selection.includes(index)),\n    clipboard: state.selection.map((index) => state.glyph[index]),\n    selection: [],\n  }))\n\n  .case(editorActions.decomposeSelected, (state) => {\n    let newGlyph: Glyph = [];\n    let newSelection: number[] = [];\n    state.glyph.forEach((gLine, index) => {\n      if (!state.selection.includes(index)) {\n        newGlyph.push(gLine);\n        return;\n      }\n      const newLines = decompose(gLine, state.buhinMap);\n      newSelection = newSelection.concat(\n        newLines.map((_gLine, subindex) => newGlyph.length + subindex)\n      );\n      newGlyph = newGlyph.concat(newLines);\n    });\n    return {\n      ...state,\n      glyph: newGlyph,\n      selection: newSelection,\n    };\n  })\n\n  .case(editorActions.toggleFreehand, (state) => ({\n    ...state,\n    selection: state.freehandMode ? state.selection : [],\n    freehandMode: !state.freehandMode,\n  }))\n\n  .case(editorActions.openOptionModal, (state) => ({\n    ...state,\n    showOptionModal: true,\n  }))\n  .case(editorActions.closeOptionModal, (state) => ({\n    ...state,\n    showOptionModal: false,\n  }));\n\nexport default editor;\n","import { combineReducers } from 'redux';\n\nimport editor, { EditorState } from './editor';\n\nexport type AppState = {\n  editor: EditorState;\n};\n\nexport default combineReducers<AppState>({\n  editor,\n});\n","import { createStore } from 'redux';\n\nimport reducer from './reducers';\n\nconst store = createStore(reducer);\n\nexport default store;\n","import React from 'react';\n\nimport { Polygons } from '@kurgm/kage-engine';\n\nexport interface StrokeComponentProps {\n  polygons: Polygons;\n}\n\nconst StrokeComponent = (props: StrokeComponentProps) => (\n  <>\n    {props.polygons.array.map((polygon, i) => (\n      <polygon key={i} points={polygon.array.map(({ x, y }) => `${x},${y} `).join(\"\")} />\n    ))}\n  </>\n);\n\nexport default StrokeComponent;\n","import React from 'react';\n\nimport { Glyph } from '../kageUtils/glyph';\nimport { makeGlyphSeparated } from '../kage';\nimport Stroke from './Stroke';\n\nimport './Glyph.css'\n\nexport interface GlyphComponentProps {\n  glyph: Glyph;\n  buhinMap: Map<string, string>;\n  selection: number[];\n  handleMouseDownDeselectedStroke?: (evt: React.MouseEvent, index: number) => void;\n  handleMouseDownSelectedStroke?: (evt: React.MouseEvent, index: number) => void;\n}\n\nconst GlyphComponent = (props: GlyphComponentProps) => {\n  const polygonsSep = makeGlyphSeparated(props.glyph, props.buhinMap);\n\n  const { selection } = props;\n  const nonSelection = polygonsSep.map((_polygons, index) => index)\n    .filter((index) => !selection.includes(index));\n\n  return (\n    <>\n      <g className=\"strokes-deselected\">\n        {nonSelection.map((index) => (\n          <g key={index} onMouseDown={(evt) => props.handleMouseDownDeselectedStroke?.(evt, index)}>\n            <Stroke polygons={polygonsSep[index]} />\n          </g>\n        ))}\n      </g>\n      <g className=\"strokes-selected\">\n        {selection.map((index) => (\n          <g key={index} onMouseDown={(evt) => props.handleMouseDownSelectedStroke?.(evt, index)}>\n            <Stroke polygons={polygonsSep[index]} />\n          </g>\n        ))}\n      </g>\n    </>\n  );\n};\n\nexport default GlyphComponent;\n","import React from 'react';\n\nimport './AreaSelectRect.css';\n\ninterface AreaSelectRectProps {\n  rect: [number, number, number, number] | null;\n}\n\nconst AreaSelectRect = (props: AreaSelectRectProps) => {\n  if (!props.rect) {\n    return null;\n  }\n  let [x1, y1, x2, y2] = props.rect;\n  if (x1 > x2) {\n    // swap\n    const temp = x1;\n    x1 = x2;\n    x2 = temp;\n  }\n  if (y1 > y2) {\n    // swap\n    const temp = y1;\n    y1 = y2;\n    y2 = temp;\n  }\n\n  return <rect className='areaselect-rect' x={x1} y={y1} width={x2 - x1} height={y2 - y1} />;\n};\n\nexport default AreaSelectRect;\n","import React from 'react';\n\nimport './ControlPoint.css';\n\ninterface ControlPointProps {\n  x: number;\n  y: number;\n  className?: string;\n  handleMouseDown: (evt: React.MouseEvent) => void;\n}\n\nconst ControlPoint = (props: ControlPointProps) => (\n  <rect\n    x={props.x - 4}\n    y={props.y - 4}\n    width={8} height={8}\n    className={`controlpoint-rect ${props.className || ''}`}\n    onMouseDown={props.handleMouseDown}\n  />\n);\n\nexport default ControlPoint;\n","import React from 'react';\n\nimport { RectPointPosition } from '../actions/editor';\nimport ControlPoint from './ControlPoint';\n\nimport { SelectionControlState, SelectionControlActions } from '../containers/SelectionControl';\n\nimport './SelectionControl.css';\n\ninterface OwnProps {\n}\n\ntype SelectionControlProps = OwnProps & SelectionControlState & SelectionControlActions;\n\nconst SelectionControl = (props: SelectionControlProps) => (\n  <>\n    {props.rectControl && <>\n      <rect\n        className='selection-rect'\n        x={props.rectControl.coords[0]}\n        y={props.rectControl.coords[1]}\n        width={props.rectControl.coords[2] - props.rectControl.coords[0]}\n        height={props.rectControl.coords[3] - props.rectControl.coords[1]}\n      />\n      <ControlPoint\n        x={(props.rectControl.coords[0] + props.rectControl.coords[2]) / 2}\n        y={props.rectControl.coords[1]}\n        className='north'\n        handleMouseDown={(evt) => props.handleMouseDownRectControl(evt, RectPointPosition.north)}\n      />\n      <ControlPoint\n        x={props.rectControl.coords[0]}\n        y={(props.rectControl.coords[1] + props.rectControl.coords[3]) / 2}\n        className='west'\n        handleMouseDown={(evt) => props.handleMouseDownRectControl(evt, RectPointPosition.west)}\n      />\n      <ControlPoint\n        x={(props.rectControl.coords[0] + props.rectControl.coords[2]) / 2}\n        y={props.rectControl.coords[3]}\n        className='south'\n        handleMouseDown={(evt) => props.handleMouseDownRectControl(evt, RectPointPosition.south)}\n      />\n      <ControlPoint\n        x={props.rectControl.coords[2]}\n        y={(props.rectControl.coords[1] + props.rectControl.coords[3]) / 2}\n        className='east'\n        handleMouseDown={(evt) => props.handleMouseDownRectControl(evt, RectPointPosition.east)}\n      />\n      <ControlPoint\n        x={props.rectControl.coords[2]}\n        y={props.rectControl.coords[3]}\n        className='southeast'\n        handleMouseDown={(evt) => props.handleMouseDownRectControl(evt, RectPointPosition.southeast)}\n      />\n    </>}\n    {props.pointControl.map(({ x, y, className }, index) => (\n      <ControlPoint\n        key={index}\n        x={x} y={y}\n        className={className}\n        handleMouseDown={(evt) => props.handleMouseDownPointControl(evt, index)}\n      />\n    ))}\n  </>\n);\n\nexport default SelectionControl;","import { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { createSelector } from 'reselect';\n\nimport { editorActions } from '../actions/editor';\nimport { AppState } from '../reducers';\nimport { GlyphLine } from '../kageUtils/glyph';\nimport { calcStretchScalar, getStretchPositions } from '../kageUtils/stretchparam';\n\nimport SelectionInfo from '../components/SelectionInfo';\n\nexport enum SelectionInfoType {\n  stroke,\n  part,\n  other,\n}\n\nexport interface SelectionInfoState {\n  infoType: SelectionInfoType;\n  selectedGlyphLine?: GlyphLine;\n  summary: string;\n  entityName?: string;\n  stretchCoeff?: number;\n  selectIndexString: string;\n  swapPrevDisabled: boolean;\n  swapNextDisabled: boolean;\n  selectPrevDisabled: boolean;\n  selectNextDisabled: boolean;\n}\n\nexport interface SelectionInfoActions {\n  selectPrev: () => void;\n  selectNext: () => void;\n  swapWithPrev: () => void;\n  swapWithNext: () => void;\n}\n\nconst mapStateToProps = createSelector(\n  [\n    (state: AppState) => state.editor.glyph,\n    (state: AppState) => state.editor.buhinMap,\n    (state: AppState) => state.editor.stretchParamMap,\n    (state: AppState) => state.editor.selection,\n  ],\n  (glyph, buhinMap, stretchParamMap, selection): SelectionInfoState => {\n    if (selection.length === 0) {\n      return {\n        infoType: SelectionInfoType.other,\n        summary: '',\n        selectIndexString: `- / ${glyph.length || '-'}`,\n        swapPrevDisabled: true,\n        swapNextDisabled: true,\n        selectPrevDisabled: glyph.length === 0,\n        selectNextDisabled: glyph.length === 0,\n      };\n    }\n    if (selection.length > 1) {\n      const selectedIndexString = selection\n        .map((index) => index + 1)\n        .sort((a, b) => a - b).join(',');\n\n      return {\n        infoType: SelectionInfoType.other,\n        summary: '', // FIXME: '複数選択中' (i18n...)\n        selectIndexString: `${selectedIndexString} / ${glyph.length || '-'}`,\n        swapPrevDisabled: true,\n        swapNextDisabled: true,\n        selectPrevDisabled: glyph.length === 0,\n        selectNextDisabled: glyph.length === 0,\n      };\n    }\n    const selectIndexString = `${selection[0] + 1} / ${glyph.length || '-'}`;\n    const swapPrevDisabled = selection[0] === 0;\n    const swapNextDisabled = selection[0] === glyph.length - 1;\n    const selectPrevDisabled = false;\n    const selectNextDisabled = false;\n\n    const selectedStroke = glyph[selection[0]];\n    const generateSummary = () => {\n      const points = [];\n      for (let i = 3; i + 2 <= selectedStroke.value.length; i += 2) {\n        points.push(`(${selectedStroke.value[i]},${selectedStroke.value[i + 1]})`);\n      }\n      return points.join(' → ');\n    };\n    switch (selectedStroke.value[0]) {\n      case 99: {\n        const buhinSource = buhinMap.get(selectedStroke.partName!);\n        let entityName: string | undefined = undefined;\n        if (buhinSource) {\n          const aliasMatch = /^(?:0:1:0:[^$]+\\$)?99:0:0:0:0:200:200:([^$]+)$/.exec(buhinSource);\n          if (aliasMatch) {\n            entityName = aliasMatch[1];\n          }\n        }\n        const stretchParam = stretchParamMap.get(selectedStroke.partName!);\n        const stretchCoeff = stretchParam\n          ? calcStretchScalar(stretchParam, getStretchPositions(selectedStroke)!)\n          : undefined;\n\n        return {\n          infoType: SelectionInfoType.part,\n          selectedGlyphLine: selectedStroke,\n          entityName,\n          stretchCoeff,\n          summary: `(${selectedStroke.value[3]},${selectedStroke.value[4]}) → (${selectedStroke.value[5]},${selectedStroke.value[6]})`,\n          selectIndexString,\n          swapPrevDisabled, swapNextDisabled,\n          selectPrevDisabled, selectNextDisabled,\n        };\n      }\n      case 1:\n      case 2:\n      case 3:\n      case 4:\n      case 6:\n      case 7:\n        return {\n          infoType: SelectionInfoType.stroke,\n          selectedGlyphLine: selectedStroke,\n          summary: generateSummary(),\n          selectIndexString,\n          swapPrevDisabled, swapNextDisabled,\n          selectPrevDisabled, selectNextDisabled,\n        };\n      case 0:\n      case 9:\n        return {\n          infoType: SelectionInfoType.other,\n          summary: generateSummary(),\n          selectIndexString,\n          swapPrevDisabled, swapNextDisabled,\n          selectPrevDisabled, selectNextDisabled,\n        };\n      default:\n        return {\n          infoType: SelectionInfoType.other,\n          summary: '',\n          selectIndexString,\n          swapPrevDisabled, swapNextDisabled,\n          selectPrevDisabled, selectNextDisabled,\n        };\n    }\n  }\n);\n\nconst mapDispatchToProps = (dispatch: Dispatch): SelectionInfoActions => ({\n  selectPrev: () => {\n    dispatch(editorActions.selectPrev());\n  },\n  selectNext: () => {\n    dispatch(editorActions.selectNext());\n  },\n  swapWithPrev: () => {\n    dispatch(editorActions.swapWithPrev());\n  },\n  swapWithNext: () => {\n    dispatch(editorActions.swapWithNext());\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectionInfo);\n","import { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { createSelector } from 'reselect';\n\nimport { editorActions, RectPointPosition } from '../actions/editor';\nimport SelectionControl from '../components/SelectionControl';\nimport { AppState } from '../reducers';\nimport { getGlyphLinesBBX } from '../kageUtils/bbx';\nimport { applyDraggingEffectToGlyph } from '../reducers/editor';\nimport { getMatchType, MatchType } from '../kageUtils/match';\n\nexport interface RectControl {\n  multiSelect: boolean;\n  coords: [number, number, number, number];\n}\nexport interface ControlPoint {\n  x: number;\n  y: number;\n  className: string;\n}\n\nexport interface SelectionControlState {\n  rectControl: RectControl | null;\n  pointControl: ControlPoint[];\n}\n\nexport interface SelectionControlActions {\n  handleMouseDownRectControl: (evt: React.MouseEvent, position: RectPointPosition) => void;\n  handleMouseDownPointControl: (evt: React.MouseEvent, pointIndex: number) => void;\n}\n\nconst mapStateToProps = createSelector(\n  [\n    (state: AppState) => applyDraggingEffectToGlyph(state.editor),\n    (state: AppState) => state.editor.selection,\n  ],\n  (glyph, selection): SelectionControlState => {\n    if (selection.length === 0) {\n      return { rectControl: null, pointControl: [] };\n    }\n    if (selection.length > 1) {\n      const selectedStrokes = selection.map((index) => glyph[index]);\n      const bbx = getGlyphLinesBBX(selectedStrokes);\n      return {\n        rectControl: {\n          multiSelect: true,\n          coords: bbx,\n        },\n        pointControl: [],\n      };\n    }\n    const selectedStroke = glyph[selection[0]];\n    switch (selectedStroke.value[0]) {\n      case 0:\n      case 9:\n      case 99:\n        return {\n          rectControl: {\n            multiSelect: false,\n            coords: [\n              selectedStroke.value[3],\n              selectedStroke.value[4],\n              selectedStroke.value[5],\n              selectedStroke.value[6],\n            ],\n          },\n          pointControl: [],\n        };\n      case 1:\n      case 2:\n      case 3:\n      case 4:\n      case 6:\n      case 7: {\n        const pointControl: ControlPoint[] = [];\n        for (let i = 3; i + 2 <= selectedStroke.value.length; i += 2) {\n          const matchType = getMatchType(glyph, {\n            lineIndex: selection[0],\n            pointIndex: (i - 3) / 2,\n          });\n          let className = '';\n          if (matchType === MatchType.match) {\n              className = 'match';\n          } else if (matchType === MatchType.online) {\n              className = 'online';\n          }\n\n          pointControl.push({\n            x: selectedStroke.value[i],\n            y: selectedStroke.value[i + 1],\n            className,\n          });\n        }\n        return { rectControl: null, pointControl };\n      }\n      default:\n        return { rectControl: null, pointControl: [] };\n    }\n  }\n);\n\nconst mapDispatchToProps = (dispatch: Dispatch): SelectionControlActions => ({\n  handleMouseDownRectControl: (evt: React.MouseEvent, position: RectPointPosition) => {\n    dispatch(editorActions.startResize([evt, position]));\n    evt.stopPropagation();\n  },\n  handleMouseDownPointControl: (evt: React.MouseEvent, pointIndex: number) => {\n    dispatch(editorActions.startPointDrag([evt, pointIndex]));\n    evt.stopPropagation();\n  },\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectionControl);\n","import React, { useEffect } from 'react';\n\nimport { EditorState } from '../reducers/editor';\n\nimport Glyph from './Glyph';\nimport AreaSelectRect from './AreaSelectRect';\nimport SelectionControl from '../containers/SelectionControl';\n\nimport { GlyphAreaActions } from '../containers/GlyphArea';\nimport './GlyphArea.css';\n\ninterface OwnProps {\n}\n\ntype GlyphAreaProps = OwnProps & EditorState & GlyphAreaActions;\n\nconst GlyphArea = (props: GlyphAreaProps) => {\n  const { handleMouseMove, handleMouseUp } = props;\n  useEffect(() => {\n    document.addEventListener('mousemove', handleMouseMove)\n    document.addEventListener('mouseup', handleMouseUp);\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [handleMouseMove, handleMouseUp]);\n\n  return (\n    <div className=\"glyph-area\">\n      <svg\n        width=\"100%\" height=\"100%\" viewBox=\"-20 -20 500 240\"\n        onMouseDownCapture={props.handleMouseDownCapture}\n        onMouseDown={props.handleMouseDownBackground}\n      >\n        {/* TODO: grid */}\n        <rect x=\"0\" y=\"0\" width=\"200\" height=\"200\" className=\"glyph-boundary\" />\n        <rect x=\"12\" y=\"12\" width=\"176\" height=\"176\" className=\"glyph-guide\" />\n        <Glyph\n          glyph={props.glyph}\n          buhinMap={props.buhinMap}\n          selection={props.selection}\n          handleMouseDownDeselectedStroke={props.handleMouseDownDeselectedStroke}\n          handleMouseDownSelectedStroke={props.handleMouseDownSelectedStroke}\n        />\n        <SelectionControl />\n        <AreaSelectRect rect={props.areaSelectRect} />\n      </svg>\n    </div>\n  );\n};\n\nexport default GlyphArea;\n","import { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\n\nimport { editorActions, CTMInv } from '../actions/editor';\nimport GlyphArea from '../components/GlyphArea';\nimport { AppState } from '../reducers';\nimport { applyDraggingEffectToGlyph } from '../reducers/editor';\n\nexport interface GlyphAreaActions {\n  handleMouseDownCapture: (evt: React.MouseEvent<SVGSVGElement>) => void;\n\n  handleMouseDownBackground: (evt: React.MouseEvent) => void;\n  handleMouseDownDeselectedStroke: (evt: React.MouseEvent, index: number) => void;\n  handleMouseDownSelectedStroke: (evt: React.MouseEvent, index: number) => void;\n\n  handleMouseMove: (evt: MouseEvent) => void;\n  handleMouseUp: (evt: MouseEvent) => void;\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  ...state.editor,\n  glyph: applyDraggingEffectToGlyph(state.editor),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): GlyphAreaActions => ({\n  handleMouseDownCapture: (evt: React.MouseEvent<SVGSVGElement>) => {\n    const ctm = evt.currentTarget.getScreenCTM();\n    if (!ctm) {\n      return;\n    }\n    const pt = evt.currentTarget.createSVGPoint();\n    const ictm = ctm.inverse();\n    const ctmInv: CTMInv = (evtx, evty) => {\n      pt.x = evtx;\n      pt.y = evty;\n      const { x, y } = pt.matrixTransform(ictm);\n      return [x, y];\n    };\n    dispatch(editorActions.updateCTMInv(ctmInv));\n  },\n\n  handleMouseDownBackground: (evt: React.MouseEvent) => {\n    if (!(evt.shiftKey || evt.ctrlKey)) {\n      dispatch(editorActions.selectNone());\n    }\n    dispatch(editorActions.startAreaSelect(evt));\n  },\n  handleMouseDownDeselectedStroke: (evt: React.MouseEvent, index: number) => {\n    if (evt.shiftKey || evt.ctrlKey) {\n      dispatch(editorActions.selectAddSingle(index));\n    } else {\n      dispatch(editorActions.selectSingle(index));\n    }\n    dispatch(editorActions.startSelectionDrag(evt));\n    evt.stopPropagation();\n  },\n  handleMouseDownSelectedStroke: (evt: React.MouseEvent, index: number) => {\n    if (evt.shiftKey || evt.ctrlKey) {\n      dispatch(editorActions.selectRemoveSingle(index));\n    }\n    dispatch(editorActions.startSelectionDrag(evt));\n    evt.stopPropagation();\n  },\n\n  handleMouseMove: (evt: MouseEvent) => {\n    dispatch(editorActions.mouseMove(evt));\n  },\n  handleMouseUp: (evt: MouseEvent) => {\n    dispatch(editorActions.mouseUp(evt));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GlyphArea);\n","import React from 'react';\n\nimport { useTranslation } from 'react-i18next';\n\nimport { SelectionInfoType, SelectionInfoState, SelectionInfoActions } from \"../containers/SelectionInfo\";\nimport './SelectionInfo.css'\n\ninterface OwnProps {\n}\n\ntype SelectionInfoProps = OwnProps & SelectionInfoState & SelectionInfoActions;\n\nconst SelectionInfo = (props: SelectionInfoProps) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"select-control\">\n      <div className=\"selected-info\">\n        {props.infoType === SelectionInfoType.stroke && (\n          <div>\n            {t('stroke type')}\n            <select value={props.selectedGlyphLine!.value[0]}>\n              {[1, 2, 3, 4, 6, 7].map((strokeType) => (\n                <option key={strokeType} value={strokeType}>{t(`stroke type ${strokeType}`)}</option>\n              ))}\n            </select>\n            {/* TODO: 頭形状，尾形状 */}\n          </div>\n        )}\n        {props.infoType === SelectionInfoType.part && (\n          <div>\n            {t('part')}\n            {' '}\n            <strong>{props.selectedGlyphLine!.partName!}</strong>\n            {' '}\n            {props.entityName && t('alias of', { entity: props.entityName })}\n          </div>\n        )}\n        <div>{props.summary}</div>\n        {props.infoType === SelectionInfoType.part && typeof props.stretchCoeff === 'number' && (\n          <div>\n            {t('stretch')}\n            {' '}\n            <input type=\"range\" min={-10} max={10} value={props.stretchCoeff} />\n            {' '}\n            {props.stretchCoeff}\n          </div>\n        )}\n      </div>\n      <div className=\"selection-control\">\n        <button\n          disabled={props.swapPrevDisabled}\n          onClick={props.swapWithPrev}\n        >\n          {t('swap with prev')}\n        </button>\n        <button\n          className=\"select-prevnext-button\"\n          disabled={props.selectPrevDisabled}\n          onClick={props.selectPrev}\n        >\n          {t('select prev')}\n        </button>\n        <div className=\"selection-num\">\n          {props.selectIndexString}\n        </div>\n        <button\n          className=\"select-prevnext-button\"\n          disabled={props.selectNextDisabled}\n          onClick={props.selectNext}\n        >\n          {t('select next')}\n        </button>\n        <button\n          disabled={props.swapNextDisabled}\n          onClick={props.swapWithNext}\n        >\n          {t('swap with next')}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default SelectionInfo;\n","import React from 'react';\n\nimport { useTranslation } from 'react-i18next';\n\nimport SelectionInfo from '../containers/SelectionInfo';\n\nimport { EditorControlsStateProps, EditorControlsActions } from '../containers/EditorControls';\nimport './EditorControls.css';\n\ninterface OwnProps {\n}\n\ntype EditorControlsProps = OwnProps & EditorControlsStateProps & EditorControlsActions;\n\nconst EditorControls = (props: EditorControlsProps) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"editor-controls\">\n      <SelectionInfo />\n      <div className=\"control-buttons\">\n        <button\n          disabled={props.undoDisabled}\n          onClick={props.undo}\n        >\n          {t('undo')}\n        </button>\n        <button\n          disabled={props.redoDisabled}\n          onClick={props.redo}\n        >\n          {t('redo')}\n        </button>\n        <button\n          disabled={props.freehandMode || props.glyph.length === 0}\n          onClick={props.selectAll}\n        >\n          {t('select all')}\n        </button>\n        <button\n          disabled={props.freehandMode || props.glyph.length === 0}\n          onClick={props.selectDeselected}\n        >\n          {t('invert selection')}\n        </button>\n        <button\n          disabled={props.selection.length === 0}\n          onClick={props.copy}\n        >\n          {t('copy')}\n        </button>\n        <button\n          disabled={props.pasteDisabled}\n          onClick={props.paste}\n        >\n          {t('paste')}\n        </button>\n        <button\n          disabled={props.selection.length === 0}\n          onClick={props.cut}\n        >\n          {t('cut')}\n        </button>\n        <button\n          disabled\n          onClick={props.toggleFreehand}\n        >\n          {props.freehandMode ? t('end freehand') : t('start freehand')}\n        </button>\n        <button\n          disabled={props.decomposeDisabled}\n          onClick={props.decompose}\n        >\n          {t('decompose')}\n        </button>\n        <button\n          disabled\n          onClick={props.options}\n        >\n          {t('options')}\n        </button>\n      </div>\n      <div className=\"preview\">\n        <svg className=\"preview-thumbnail\" viewBox=\"0 0 200 200\" width=\"50\" height=\"50\"></svg>\n        <button\n          disabled\n          onClick={props.finishEdit}\n        >\n          {t('finish edit')}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default EditorControls;\n","import { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { createSelector } from 'reselect';\n\nimport { editorActions } from '../actions/editor';\nimport { AppState } from '../reducers';\nimport { Glyph } from '../kageUtils/glyph';\n\nimport EditorControls from '../components/EditorControls';\n\nexport interface EditorControlsStateProps {\n  glyph: Glyph;\n  buhinMap: Map<string, string>;\n  selection: number[];\n\n  undoDisabled: boolean;\n  redoDisabled: boolean;\n  pasteDisabled: boolean;\n  decomposeDisabled: boolean;\n\n  freehandMode: boolean;\n};\n\nexport interface EditorControlsActions {\n  undo: () => void;\n  redo: () => void;\n  selectAll: () => void;\n  selectDeselected: () => void;\n  copy: () => void;\n  paste: () => void;\n  cut: () => void;\n  toggleFreehand: () => void;\n  decompose: () => void;\n  options: () => void;\n  finishEdit: () => void;\n};\n\nconst mapStateToProps = createSelector([\n  (state: AppState) => state.editor.glyph,\n  (state: AppState) => state.editor.buhinMap,\n  (state: AppState) => state.editor.selection,\n  (state: AppState) => state.editor.clipboard,\n  (state: AppState) => state.editor.freehandMode,\n], (glyph, buhinMap, selection, clipboard, freehandMode): EditorControlsStateProps => ({\n  glyph,\n  buhinMap,\n  selection,\n\n  undoDisabled: true,\n  redoDisabled: true,\n  pasteDisabled: clipboard.length === 0,\n  decomposeDisabled: !selection.some((index) => glyph[index].value[0] === 99),\n\n  freehandMode,\n}));\n\nconst mapDispatchToProps = (dispatch: Dispatch): EditorControlsActions => ({\n  undo: () => {\n    dispatch(editorActions.undo());\n  },\n  redo: () => {\n    dispatch(editorActions.redo());\n  },\n  selectAll: () => {\n    dispatch(editorActions.selectAll());\n  },\n  selectDeselected: () => {\n    dispatch(editorActions.selectDeselected());\n  },\n  copy: () => {\n    dispatch(editorActions.copy());\n  },\n  paste: () => {\n    dispatch(editorActions.paste());\n  },\n  cut: () => {\n    dispatch(editorActions.cut());\n  },\n  toggleFreehand: () => {\n    dispatch(editorActions.toggleFreehand());\n  },\n  decompose: () => {\n    dispatch(editorActions.decomposeSelected());\n  },\n  options: () => {\n    dispatch(editorActions.openOptionModal());\n  },\n  finishEdit: () => {\n    // FIXME\n    // location.href = ...\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditorControls);\n","import React from 'react';\nimport './App.css';\n\nimport GlyphArea from './containers/GlyphArea';\nimport EditorControls from './containers/EditorControls';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GlyphArea />\n      <EditorControls />\n      <div className=\"parts-list-area\" />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport jaTranslation from './locales/ja.json';\n\nimport args from \"./args\";\n\nconst resources = {\n  ja: {\n    translation: jaTranslation,\n  },\n};\n\nconst host = args.get('host');\nlet lng = 'ja';\nif (host) {\n  switch (host.split('.')[0]) {\n    case 'en':\n      lng = 'en';\n      break;\n    case 'ko':\n      lng = 'ko';\n      break;\n    case 'zhs':\n      lng = 'zh-Hans';\n      break;\n    case 'zht':\n      lng = 'zh-Hant';\n      break;\n  }\n}\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng,\n\n    returnObjects: true,\n    interpolation: {\n      escapeValue: false, // react already safes from xss\n    },\n  });\n\nexport default i18n;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\n\nimport store from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './i18n';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}