{"version":3,"sources":["kageUtils/glyph.ts","args.ts","actions/drag.ts","actions/select.ts","kageUtils/freehand.ts","kageUtils/match.ts","kageUtils/connection.ts","kageUtils/transform.ts","actions/editor.ts","callapi.ts","kage.ts","kageUtils/bbx.ts","selectors/draggedGlyph.ts","kageUtils/stretchparam.ts","kageUtils/decompose.ts","kageUtils/stroketype.ts","reducers/editor.ts","actions/display.ts","actions/undo.ts","reducers/index.ts","reducers/undo.ts","reducers/select.ts","reducers/drag.ts","reducers/display.ts","store.ts","components/Grid.tsx","components/Stroke.tsx","components/Glyph.tsx","components/StrokeCenterLine.tsx","components/ControlPoint.tsx","components/SelectionControl.tsx","components/AreaSelectRect.tsx","components/GlyphArea.tsx","components/SelectionInfo.tsx","selectors/submitGlyph.ts","components/SubmitPreview.tsx","components/EditorControls.tsx","components/PartsList.tsx","components/PartsSearch.tsx","components/SubmitForm.tsx","components/OptionModal.tsx","App.tsx","shortcuts.ts","serviceWorker.ts","i18n.ts","index.tsx"],"names":["getNumColumns","strokeType","unparseGlyphLine","glyphLine","values","value","slice","partName","join","parseGlyph","glyphStr","split","map","line","glyphLineStr","splitLine","numColumns","i","push","Math","floor","parseGlyphLine","filter","gLine","length","unparseGlyph","glyph","args","URLSearchParams","window","location","hash","host","get","ssl","name","related","edittime","data","summary","gwHosts","document","referrer","referrerUrl","URL","includes","protocol","e","RectPointPosition","actionCreator","actionCreatorFactory","selectActions","selectSingle","selectAddSingle","selectRemoveSingle","selectNone","selectAll","selectDeselected","selectPrev","selectNext","snapped","MatchType","dragActions","startBackgroundDrag","startSelectionDrag","startPointDrag","startResize","mouseMove","mouseUp","updateCTMInv","connectablePairs","position","strokeTypes","shapeTypes","matchConnectablePoint","point","shapeType","getConnectablePoints","result","coord","pointIndex","endPointIndex","listupConnectedPoints","memoizeOne","points","sPoints","lineIndex","sPoint","forEach","dPoint","some","point2","point1","filter1","filter2","glyph1","points1","glyph2","points2","every","index","listupConnectedPointsOfSelection","selection","selectedDescs","applyGlyphLineOperation","tX","tY","applyGlyphPointOperation","pdescs","newGlyph","newValue","moveSelectedGlyphLines","dx","dy","targetDescs","x","round","y","moveSelectedPoint","selectedDesc","targetDesc","resizeSelectedGlyphLines","oldBBX","newBBX","x11","y11","x12","y12","x21","y21","x22","y22","resizeGlyphLine","avg","nums","reduce","a","b","sum","lerp","x1","x2","k","norm2","drawFreehand","startX","startY","endX","endY","lastStroke","newLastStroke","concat","centroidX","centroidY","midX","midY","dis","sqrt","abs","correctStroke","mid1X","mid1Y","mid2X","mid2Y","startType","endType","ev","undefined","minVal","Infinity","datum","val","minBy","leftBottomX","leftBottomY","dx1","dy1","dx2","dy2","cosAngle","min","newStroke","snapStrokeStart","snapStrokeEnd","snapStrokeTilt","snapToNewStroke","setGlyphValue","column","newGLine","snapVerticalStroke","vertStroke","leftType","middleType","rightType","ti","xi","yi","nx","ny","minX","maxX","minY","maxY","horiStroke","y1","y2","snapHorizontalStroke","snapStrokeSegmentTilt","point1Index","x1i","y1i","x2i","y2i","sx1","sy1","sx2","sy2","editorActions","loadedBuhin","loadedStretchParam","changeStrokeType","changeHeadShapeType","changeTailShapeType","changeStretchCoeff","swapWithPrev","swapWithNext","insertPart","paste","copy","cut","delete","decomposeSelected","moveSelected","toggleFreehand","escape","finishEdit","callApi","path","fetch","response","ok","Error","text","getSource","encodeURIComponent","search","query","kage_","Kage","getKage","buhinMap","fallback","shotai","kBuhin","kShotai","waiting","Set","loadAbsentBuhin","has","add","then","source","stretchMatch","exec","params","store","dispatch","catch","err","console","error","filteredGlyphIsEqual","gLine1","makeGlyphSeparated_","makeGlyphSeparated","map1","shotai1","map2","shotai2","makeGlyphSeparatedFactory","isEqual","makeGlyphSeparatedForSubmit","bbxOfPoints","xs","ys","max","getGlyphLineBBX","mergeBBX","getGlyphLinesBBX","glyphLines","gLines1","gLines2","resizeSelected","selectedGlyphLine","north","west","south","east","southeast","newGlyphLine","draggedGlyphSelector","createSelector","state","dragSelection","dragPoint","resizeSelection","freehandStroke","getStretchPositions","setStretchPositions","positions","sx","sy","tx","ty","normalizeStretchPositions","calcStretchScalar","param","x0","y0","decomposeDeepGlyph","getEachStrokes","stroke","columns","a1","a2_100","kirikuchiAdjustment","tateAdjustment","a3_100","opt3","mageAdjustment","x3","y3","x4","y4","decomposeDeep","headShapeTypes","1","2","3","4","6","7","tailShapeTypes","validStrokeShapeTypes","isValidStrokeShapeTypes","s0","s1","s2","setGlyphLine","displayActions","openOptionModal","closeOptionModal","setGridDisplay","setGridOriginX","setGridOriginY","setGridSpacingX","setGridSpacingY","setShotai","setStrokeCenterLineDisplay","undoActions","undo","redo","initialState","areaSelectRect","ctmInv","freehandMode","Map","stretchParamMap","clipboard","undoStacks","exitEvent","showOptionModal","grid","display","originX","originY","spacingX","spacingY","showStrokeCenterLine","reducer","type","reducerWithInitialState","case","default","oldState","action","newState","glyphLine1","glyphLine2","value1","pushUndo","undoable","withHandling","builder","index2","_gLine","firstSelected","evt","clientX","clientY","lastX","lastY","splice","intersections","polygonsSep","gAreaPolygon","array","polygon","gPolygon","polygonInPolygon","polygonIntersectsPolygon","performAreaSelect","newSelection","Array","from","newMap","set","newType","oldType","oldNumPoints","newNumPoints","xm","ym","xm1","ym1","xm2","ym2","selectedLine","stretchParam","calcStretchPositions","targetLines","newLines","buhinSource","failedBuhin","kage","strokesArray","box","getBox","isStretchEnabled","oldGlyphLine","stretchedX","stretch","stretchedY","tx2","ty2","px1","py1","px2","py2","revX","revY","decompose","subindex","createStore","Grid","useSelector","className","key","d","StrokeComponent","props","polygons","GlyphComponent","nonSelection","_polygons","onMouseDown","handleMouseDownDeselectedStroke","Stroke","handleMouseDownSelectedStroke","StrokeCenterLine","strokes","v","getMatchType","none","isOnline","match","online","ControlPoint","width","height","handleMouseDown","selectionControlSelector","rectControl","pointControl","selectedStrokes","multiSelect","coords","selectedStroke","matchType","SelectionControl","useDispatch","handleMouseDownRectControl","useCallback","stopPropagation","handleMouseDownNorthPoint","handleMouseDownWestPoint","handleMouseDownSouthPoint","handleMouseDownEastPoint","handleMouseDownSoutheastPoint","handleMouseDownPointControls","useMemo","_control","AreaSelectRect","rect","temp","GlyphArea","svgClassName","handleMouseDownCapture","ctm","currentTarget","getScreenCTM","pt","createSVGPoint","ictm","inverse","evtx","evty","matrixTransform","handleMouseDownBackground","shiftKey","ctrlKey","useEffect","handleMouseMove","handleMouseUp","addEventListener","removeEventListener","viewBox","onMouseDownCapture","selectedGlyphLineSelector","draggedGlyph","strokeInfoSelector","headShapeType","tailShapeType","validTypes","coordString","partInfoSelector","entityName","aliasMatch","stretchCoeff","otherInfoSelector","selectedStroke_","isMultiple","selectIndexStringSelector","glyphLength","selectedIndexString","sort","buttonsDisabledSelector","swapPrevDisabled","swapNextDisabled","selectPrevDisabled","selectNextDisabled","SelectionInfo","strokeInfo","partInfo","otherInfo","selectIndexString","shallowEqual","t","useTranslation","onChange","entity","disabled","onClick","submitGlyphSelector","SubmitPreview","submitGlyph","EditorControls","undoDisabled","redoDisabled","pasteDisabled","decomposeDisabled","options","nativeEvent","getImageURL","PartsList","handleItemClick","handleItemMouseEnter","handleImageClick","dataset","handleImageMouseEnter","names","alt","title","data-name","src","onMouseEnter","searchSuggestions","initialQuery","QueryTooShortError","initialSearchState","PartsSearch","queryInputRef","useRef","useState","searchState","setSearchState","startSearch","reason","newSearchState","currentSearchState","handleSearch","current","handleFormSubmit","preventDefault","hoverNameRef","textContent","onSubmit","defaultValue","list","ref","id","suggestion","message","glyphName","formAction","formStyle","visibility","SubmitForm","formRef","submit","style","method","ReactModal","setAppElement","OptionModal","handleRequestClose","handleGridDisplayChange","checked","handleGridOriginXChange","valueAsNumber","handleGridOriginYChange","handleGridSpacingXChange","handleGridSpacingYChange","handleShotaiChange","handleStrokeCenterLineChange","i18n","handleLanguageChange","changeLanguage","isOpen","onRequestClose","shouldCloseOnEsc","language","App","useHotkeys","useShortcuts","Boolean","hostname","resources","ja","translation","en","lng","use","initReactI18next","init","fallbackLng","returnObjects","interpolation","escapeValue","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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AG,KACP,CAAC,EAAG,EAAG,IACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,KACR,CAAC,EAAG,GAAI,KACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,KACR,CAAC,EAAG,GAAI,KACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,KACR,CAAC,EAAG,GAAI,KACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,EA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","file":"static/js/main.f625b5b1.chunk.js","sourcesContent":["export interface GlyphLine {\n  value: number[];\n  partName?: string;\n}\n\nexport const getNumColumns = (strokeType: number): number => {\n  switch (strokeType) {\n    case 0:\n    case 1:\n    case 9:\n      return 7;\n    case 2:\n    case 3:\n    case 4:\n      return 9;\n    case 6:\n    case 7:\n    case 99:\n      return 11;\n    default:\n      return 0;\n  }\n};\n\nexport const parseGlyphLine = (glyphLineStr: string): GlyphLine => {\n  const splitLine = glyphLineStr.split(':');\n  const strokeType = +splitLine[0];\n  const numColumns = getNumColumns(strokeType);\n  const value = [];\n  for (let i = 0; i < numColumns; i++) {\n    value.push(Math.floor(+splitLine[i] || 0));\n  }\n  if (value[0] === 99) {\n    const partName = splitLine[7] || '';\n    return { value, partName }\n  }\n  return { value };\n};\n\nexport const unparseGlyphLine = (glyphLine: GlyphLine): string => {\n  const values: (number | string)[] = glyphLine.value.slice();\n  if (values[0] === 99) {\n    values[7] = glyphLine.partName || '';\n  }\n  return values.join(':');\n};\n\nexport const isValidGlyphLine = (glyphLine: GlyphLine): boolean => (\n  glyphLine.value.length !== 0 &&\n  (\n    glyphLine.value[0] !== 0 ||\n    glyphLine.value[1] === 97 || glyphLine.value[1] === 98 || glyphLine.value[1] === 99\n  )\n);\n\n\nexport type Glyph = GlyphLine[];\n\nexport const parseGlyph = (glyphStr: string): Glyph => (\n  glyphStr.split(/[$\\r\\n]+/)\n    .map((line) => parseGlyphLine(line))\n    .filter((gLine) => isValidGlyphLine(gLine))\n);\n\nexport const unparseGlyph = (glyph: Glyph): string => (\n  glyph\n    .map((gLine) => unparseGlyphLine(gLine))\n    .join('$')\n);\n\nexport const isGlyphDeepEqual = (glyph1: Glyph, glyph2: Glyph) => (\n  glyph1 === glyph2 || (\n    glyph1.length === glyph2.length &&\n    glyph1.every((glyphLine1, index) => {\n      const glyphLine2 = glyph2[index];\n      return glyphLine1 === glyphLine2 || (\n        glyphLine1.partName === glyphLine2.partName &&\n        glyphLine1.value.length === glyphLine2.value.length &&\n        glyphLine1.value.every((value1, index) => value1 === glyphLine2.value[index])\n      );\n    })\n  )\n);\n\n\nexport interface PointDescriptor {\n  lineIndex: number;\n  pointIndex: number;\n}\n","const args = new URLSearchParams(window.location.hash.slice(1));\n\nlet host = args.get('host');\nlet ssl = args.get('ssl') !== 'false';\nconst name = args.get('name');\nconst related = args.get('related') || 'u3013';\nconst edittime = args.get('edittime');\nconst data = args.get('data') || '';\nconst summary = args.get('summary') || '';\n\nconst gwHosts = [\n  'glyphwiki.org',\n  'en.glyphwiki.org',\n  'ko.glyphwiki.org',\n  'zhs.glyphwiki.org',\n  'zht.glyphwiki.org',\n];\n\nif (!host && document.referrer) {\n  try {\n    const referrerUrl = new URL(document.referrer);\n    if (gwHosts.includes(referrerUrl.host)) {\n      host = referrerUrl.host;\n      ssl = referrerUrl.protocol === 'https:';\n    }\n  } catch (e) {\n  }\n}\n\nif (!host || !gwHosts.includes(host)) {\n  host = 'glyphwiki.org';\n}\n\nexport default {\n  host,\n  ssl,\n  name,\n  related,\n  edittime,\n  data,\n  summary,\n};\n","import actionCreatorFactory from 'typescript-fsa';\n\nexport type CTMInv = (x: number, y: number) => [number, number];\nexport enum RectPointPosition {\n  north,\n  south,\n  east,\n  west,\n  southeast,\n}\n\nconst actionCreator = actionCreatorFactory('EDITOR');\n\nexport const dragActions = {\n  startBackgroundDrag: actionCreator<React.MouseEvent>('BACKGROUND_DRAG_START'),\n  startSelectionDrag: actionCreator<React.MouseEvent>('SELECTION_DRAG_START'),\n  startPointDrag: actionCreator<[React.MouseEvent, number]>('MOVE_POINT_START'),\n  startResize: actionCreator<[React.MouseEvent, RectPointPosition]>('RESIZE_START'),\n\n  mouseMove: actionCreator<MouseEvent>('MOUSE_MOVE'),\n  mouseUp: actionCreator<MouseEvent>('MOUSE_UP'),\n\n  updateCTMInv: actionCreator<CTMInv>('UPDATE_CTMINV'),\n}\n","import actionCreatorFactory from 'typescript-fsa';\n\nconst actionCreator = actionCreatorFactory('SELECT');\n\nexport const selectActions = {\n  selectSingle: actionCreator<number>('SELECT_SINGLE'),\n  selectAddSingle: actionCreator<number>('SELECT_ADD_SINGLE'),\n  selectRemoveSingle: actionCreator<number>('SELECT_REMOVE_SINGLE'),\n  selectNone: actionCreator('SELECT_NONE'),\n  selectAll: actionCreator('SELECT_ALL'),\n  selectDeselected: actionCreator('SELECT_TOGGLE_ALL'),\n  selectPrev: actionCreator('SELECT_PREV'),\n  selectNext: actionCreator('SELECT_NEXT'),\n};\n","import { Glyph, GlyphLine } from './glyph';\nimport { applyGlyphLineOperation } from './transform';\n\nconst sum = (nums: number[]) => nums.reduce((a, b) => a + b, 0);\nconst avg = (nums: number[]) => sum(nums) / nums.length;\nconst min: {\n  (data: number[]): number;\n  <T>(data: T[], ev: (val: T) => number): number;\n} = (data: any[], ev?: (val: any) => number) => {\n  let result = Infinity;\n  for (const datum of data) {\n    const val = ev ? ev(datum) : datum as number;\n    if (val < result) {\n      result = val;\n    }\n  }\n  return result;\n};\nconst minBy = <T>(data: T[], ev: (val: T) => number): T | undefined => {\n  let result: T | undefined = undefined;\n  let minVal = Infinity;\n  for (const datum of data) {\n    const val = ev(datum);\n    if (val < minVal) {\n      result = datum;\n      minVal = val;\n    }\n  }\n  return result;\n};\n\nconst lerp = (x1: number, x2: number, k: number) => x1 * (1 - k) + x2 * k;\nconst norm2 = (dx: number, dy: number) => dx * dx + dy * dy;\n\nexport const drawFreehand = (glyph: Glyph, points: [number, number][]): Glyph => {\n  const [startX, startY] = points[0];\n  const [endX, endY] = points[points.length - 1];\n  const dx = endX - startX;\n  const dy = endY - startY;\n\n  if (glyph.length > 0 && norm2(dx, dy) < 25 ** 2) {\n    const lastStroke = glyph[glyph.length - 1];\n    // ハネ部分かどうか？\n    if (\n      [1, 2, 3, 4, 6].includes(lastStroke.value[0]) &&\n      norm2(\n        startX - lastStroke.value[lastStroke.value.length - 2],\n        startY - lastStroke.value[lastStroke.value.length - 1]\n      ) < 10 ** 2\n    ) {\n      if ([1, 2, 6].includes(lastStroke.value[0]) && dx < 0) { // 左ハネに変更\n        const newLastStroke: GlyphLine = {\n          value: lastStroke.value.slice(),\n        };\n        newLastStroke.value[2] = 4;\n        return glyph.slice(0, -1).concat([newLastStroke]);\n      }\n      if ([2, 6].includes(lastStroke.value[0]) && dx >= 0 && dy < 0) { // 右ハネに変更\n        const newLastStroke: GlyphLine = {\n          value: lastStroke.value.slice(),\n        };\n        newLastStroke.value[2] = 5;\n        if (newLastStroke.value[1] === 7) {\n          newLastStroke.value[1] = 0;\n        }\n        return glyph.slice(0, -1).concat([newLastStroke]);\n      }\n      if ([3, 4].includes(lastStroke.value[0]) && dy < 0) { // 上ハネに変更\n        const newLastStroke: GlyphLine = {\n          value: lastStroke.value.slice(),\n        };\n        newLastStroke.value[2] = 5;\n        return glyph.slice(0, -1).concat([newLastStroke]);\n      }\n    }\n  }\n\n  const centroidX = avg(points.map(([x]) => x));\n  const centroidY = avg(points.map(([_x, y]) => y));\n\n  const midLerpRate = 3;\n  const midX = lerp((startX + endX) / 2, centroidX, midLerpRate);\n  const midY = lerp((startY + endY) / 2, centroidY, midLerpRate);\n\n  const dis = (dx * midY - dy * midX + startX * endY - startY * endX) / Math.sqrt(norm2(dx, dy));\n  if (\n    Math.abs(dis) <= 5 && // 曲がっていない\n    (\n      (dx > 0 && Math.abs(dy) <= dx * 0.5) || // 横\n      (dy > 0 && -dy <= dx && dx <= dy * 0.5) // 縦\n    )\n  ) { // 直線\n    const newStroke: GlyphLine = {\n      value: [1, 0, 0, startX, startY, endX, endY],\n    };\n    return correctStroke(glyph, newStroke);\n  }\n  if (dx < 0 && dy >= 50 && dis < 0 && dx * -3 < dy) { // 縦払い\n    const mid1X = startX;\n    const mid1Y = lerp(startY, endY, 1 / 3);\n    const mid2X = startX;\n    const mid2Y = lerp(startY, endY, 2 / 3);\n    const newStroke: GlyphLine = {\n      value: [7, 0, 7, startX, startY, mid1X, mid1Y, mid2X, mid2Y, endX, endY],\n    };\n    return correctStroke(glyph, newStroke);\n  }\n  // 曲線\n  let startType = 0;\n  let endType = 7;\n  if (dx > 0 && dy > 0 && dis > 0) { // 右払い or 折れ\n    const [leftBottomX, leftBottomY] = minBy(points, ([x, y]) => x - y)!;\n    const dx1 = startX - leftBottomX;\n    const dy1 = startY - leftBottomY;\n    const dx2 = endX - leftBottomX;\n    const dy2 = endY - leftBottomY;\n    const cosAngle = (dx1 * dx2 + dy1 * dy2) / Math.sqrt(norm2(dx1, dy1) * norm2(dx2, dy2));\n    if (dx1 < 50 && dx2 > 30 && -20 <= dy2 && dy2 <= 20 && cosAngle > -0.15) {\n      // 折れ\n      const midX = min(points, ([x]) => x);\n      const midY = endY;\n      const newStroke: GlyphLine = {\n        value: [3, 0, 0, startX, startY, midX, midY, endX, endY],\n      };\n      return correctStroke(glyph, newStroke);\n    }\n    startType = 7;\n    endType = 0;\n  } else if (dx > 0 && dy > 0 && dis < 0) { // 止め\n    startType = 7;\n    endType = 8;\n  }\n  const newStroke: GlyphLine = {\n    value: [2, startType, endType, startX, startY, midX, midY, endX, endY],\n  };\n  return correctStroke(glyph, newStroke);\n};\n\nconst round = (x: number) => Math.round(x);\n\nlet snapped: boolean[];\n\nconst correctStroke = (glyph: Glyph, newStroke: GlyphLine): Glyph => {\n  snapped = newStroke.value.map(() => false);\n  glyph = snapStrokeStart(glyph, newStroke);\n  glyph = snapStrokeEnd(glyph, newStroke);\n  snapStrokeTilt(newStroke);\n  newStroke = applyGlyphLineOperation(newStroke, round, round)\n  glyph = snapToNewStroke(glyph, newStroke);\n  return glyph.concat([newStroke]);\n};\n\nconst setGlyphValue = (glyph: Glyph, lineIndex: number, column: number, value: number): Glyph => {\n  if (glyph[lineIndex].value[column] === value) {\n    return glyph;\n  }\n  return glyph.map((gLine, index) => {\n    if (index !== lineIndex) {\n      return gLine;\n    }\n    const newGLine = {\n      ...gLine,\n      value: gLine.value.slice(),\n    };\n    newGLine.value[column] = value;\n    return newGLine;\n  });\n};\n\nconst snapVerticalStroke = (\n  glyph: Glyph, vertStroke: GlyphLine, position: 'start' | 'end',\n  leftType: number, middleType: number, rightType: number\n): Glyph => {\n  const ti = position === 'start' ? 1 : 2;\n  const xi = position === 'start' ? 3 : vertStroke.value.length - 2;\n  const yi = xi + 1;\n  const nx = vertStroke.value[xi];\n  const ny = vertStroke.value[yi];\n  const minX = nx - 10;\n  const maxX = nx + 10;\n  const minY = ny - 10;\n  const maxY = ny + 10;\n  for (let lineIndex = glyph.length - 1; lineIndex >= 0; lineIndex--) {\n    const horiStroke = glyph[lineIndex];\n    if (horiStroke.value[0] !== 1) {\n      continue;\n    }\n    const x1 = horiStroke.value[3];\n    const y1 = horiStroke.value[4];\n    const x2 = horiStroke.value[5];\n    const y2 = horiStroke.value[6];\n    if (x2 - x1 < Math.abs(y2 - y1)) {\n      continue;\n    }\n    if (\n      [0, 2].includes(horiStroke.value[1]) &&\n      minX <= x1 && x1 <= maxX &&\n      minY <= y1 && y1 <= maxY\n    ) {\n      vertStroke.value[xi] = x1;\n      vertStroke.value[yi] = y1;\n      snapped[xi] = snapped[yi] = true;\n      vertStroke.value[ti] = leftType;\n      return setGlyphValue(glyph, lineIndex, 1, 2); // 接続(横)\n    }\n    if (\n      [0, 2].includes(horiStroke.value[2]) &&\n      minX <= x2 && x2 <= maxX &&\n      minY <= y2 && y2 <= maxY\n    ) {\n      vertStroke.value[xi] = x2;\n      vertStroke.value[yi] = y2;\n      snapped[xi] = snapped[yi] = true;\n      vertStroke.value[ti] = rightType;\n      return setGlyphValue(glyph, lineIndex, 2, 2); // 接続(横)\n    }\n    if (y1 === y2 && minY <= y1 && y1 <= maxY && x1 <= nx && nx <= x2) {\n      vertStroke.value[yi] = y1;\n      snapped[yi] = true;\n      vertStroke.value[ti] = middleType;\n      return glyph;\n    }\n  }\n  return glyph;\n};\n\nconst snapHorizontalStroke = (glyph: Glyph, horiStroke: GlyphLine, position: 'start' | 'end'): Glyph => {\n  const ti = position === 'start' ? 1 : 2;\n  const xi = position === 'start' ? 3 : 5;\n  const yi = xi + 1;\n  const nx = horiStroke.value[xi];\n  const ny = horiStroke.value[yi];\n  const minX = nx - 10;\n  const maxX = nx + 10;\n  const minY = ny - 10;\n  const maxY = ny + 10;\n  for (let lineIndex = glyph.length - 1; lineIndex >= 0; lineIndex--) {\n    const vertStroke = glyph[lineIndex];\n    if (![1, 2, 3, 4, 6, 7].includes(vertStroke.value[0])) {\n      continue;\n    }\n    const x1 = vertStroke.value[3];\n    const y1 = vertStroke.value[4];\n    const x2 = vertStroke.value[5];\n    const y2 = vertStroke.value[6];\n    if (vertStroke.value[0] === 1 && x2 - x1 > Math.abs(y2 - y1)) {\n      continue;\n    }\n    if (position === 'start') {\n      if (\n        [0, 12].includes(vertStroke.value[1]) &&\n        minX <= x1 && x1 <= maxX &&\n        minY <= y1 && y1 <= maxY\n      ) {\n        horiStroke.value[xi] = x1;\n        horiStroke.value[yi] = y1;\n        snapped[xi] = snapped[yi] = true;\n        horiStroke.value[ti] = 2;\n        return setGlyphValue(glyph, lineIndex, 1, 12); // 左上カド\n      }\n      if (\n        vertStroke.value[0] === 1 &&\n        [0, 13, 313, 413].includes(vertStroke.value[2]) &&\n        minX <= x2 && x2 <= maxX &&\n        minY <= y2 && y2 <= maxY\n      ) {\n        horiStroke.value[xi] = x2;\n        horiStroke.value[yi] = y2;\n        snapped[xi] = snapped[yi] = true;\n        horiStroke.value[ti] = 2;\n        return vertStroke.value[2] === 0\n          ? setGlyphValue(glyph, lineIndex, 2, 13) // 左下カド\n          : glyph;\n      }\n    } else {\n      if (\n        [0, 22].includes(vertStroke.value[1]) &&\n        minX <= x1 && x1 <= maxX &&\n        minY <= y1 && y1 <= maxY\n      ) {\n        horiStroke.value[xi] = x1;\n        horiStroke.value[yi] = y1;\n        snapped[xi] = snapped[yi] = true;\n        horiStroke.value[ti] = 2;\n        return setGlyphValue(glyph, lineIndex, 1, 22); // 右上カド\n      }\n      if (\n        vertStroke.value[0] === 1 &&\n        [0, 23, 24].includes(vertStroke.value[2]) &&\n        minX <= x2 && x2 <= maxX &&\n        minY <= y2 && y2 <= maxY\n      ) {\n        horiStroke.value[xi] = x2;\n        horiStroke.value[yi] = y2;\n        snapped[xi] = snapped[yi] = true;\n        horiStroke.value[ti] = 2;\n        return vertStroke.value[2] === 0\n          ? setGlyphValue(glyph, lineIndex, 2, 23) // 右下カド\n          : glyph;\n      }\n    }\n    if (x1 === x2 && minX <= x1 && x1 <= maxX && y1 <= ny && ny <= y2) {\n      horiStroke.value[xi] = x1;\n      snapped[xi] = true;\n      horiStroke.value[ti] = 2;\n      return glyph;\n    }\n  }\n  return glyph;\n};\n\nconst snapStrokeStart = (glyph: Glyph, newStroke: GlyphLine): Glyph => {\n  if (newStroke.value[0] !== 1) {\n    const y1 = newStroke.value[4];\n    const y2 = newStroke.value[6];\n    if (y1 > y2) {\n      return glyph;\n    }\n    return snapVerticalStroke(glyph, newStroke, 'start', 12, 32, 22);\n  }\n  const x1 = newStroke.value[3];\n  const y1 = newStroke.value[4];\n  const x2 = newStroke.value[5];\n  const y2 = newStroke.value[6];\n  if (x2 - x1 > Math.abs(y2 - y1)) {\n    return snapHorizontalStroke(glyph, newStroke, 'start');\n  }\n  if (y2 - y1 > 0) {\n    return snapVerticalStroke(glyph, newStroke, 'start', 12, 32, 22);\n  }\n  return glyph;\n};\nconst snapStrokeSegmentTilt = (newStroke: GlyphLine, point1Index: number) => {\n  const x1i = 3 + point1Index * 2;\n  const y1i = x1i + 1;\n  const x2i = x1i + 2;\n  const y2i = x1i + 3;\n\n  const x1 = newStroke.value[x1i];\n  const y1 = newStroke.value[y1i];\n  const x2 = newStroke.value[x2i];\n  const y2 = newStroke.value[y2i];\n\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n\n  if (Math.abs(dx) > Math.abs(dy) * 20) {\n    if (!snapped[y2i]) {\n      newStroke.value[y2i] = y1;\n      return;\n    }\n    if (!snapped[y1i]) {\n      newStroke.value[y1i] = y2;\n      return;\n    }\n  }\n  if (Math.abs(dy) > Math.abs(dx) * 20) {\n    if (!snapped[x2i]) {\n      newStroke.value[x2i] = x1;\n      return;\n    }\n    if (!snapped[x1i]) {\n      newStroke.value[x1i] = x2;\n      return;\n    }\n  }\n};\nconst snapStrokeTilt = (newStroke: GlyphLine) => {\n  switch (newStroke.value[0]) {\n    case 1:\n      snapStrokeSegmentTilt(newStroke, 0);\n      return;\n    case 3:\n      snapStrokeSegmentTilt(newStroke, 0);\n      snapStrokeSegmentTilt(newStroke, 1);\n      return;\n    case 4:\n      snapStrokeSegmentTilt(newStroke, 1);\n      return;\n    case 7:\n      newStroke.value[5] = newStroke.value[7] = newStroke.value[3];\n  }\n};\nconst snapStrokeEnd = (glyph: Glyph, newStroke: GlyphLine): Glyph => {\n  if (newStroke.value[0] !== 1) {\n    return glyph;\n  }\n  const x1 = newStroke.value[3];\n  const y1 = newStroke.value[4];\n  const x2 = newStroke.value[5];\n  const y2 = newStroke.value[6];\n  if (x2 - x1 > Math.abs(y2 - y1)) {\n    return snapHorizontalStroke(glyph, newStroke, 'end');\n  }\n  if (y2 - y1 > 0) {\n    return snapVerticalStroke(glyph, newStroke, 'end', 13, 32, 23);\n  }\n  return glyph;\n};\nconst snapToNewStroke = (glyph: Glyph, newStroke: GlyphLine): Glyph => {\n  if (newStroke.value[0] !== 1) {\n    return glyph;\n  }\n  const x1 = newStroke.value[3];\n  const y1 = newStroke.value[4];\n  const x2 = newStroke.value[5];\n  const y2 = newStroke.value[6];\n  if (y1 !== y2) {\n    return glyph;\n  }\n  const minY = y1 - 10;\n  const maxY = y1 + 10;\n  glyph.forEach((gLine, lineIndex) => {\n    if (gLine.value[0] !== 1 || gLine.value[2] !== 0) {\n      return;\n    }\n    const sx1 = gLine.value[3];\n    const sy1 = gLine.value[4];\n    const sx2 = gLine.value[5];\n    const sy2 = gLine.value[6];\n    if (sx2 - sx1 > Math.abs(sy2 - sy1)) {\n      return;\n    }\n    if (minY <= sy2 && sy2 <= maxY && x1 <= sx2 && sx2 <= x2) {\n      glyph = setGlyphValue(glyph, lineIndex, 2, 32);\n      glyph = setGlyphValue(glyph, lineIndex, 6, y1);\n    }\n  });\n  return glyph;\n};\n","import { Glyph, PointDescriptor, getNumColumns } from './glyph';\n\nexport enum MatchType {\n  none,\n  online,\n  match,\n}\n\nexport const getMatchType = (glyph: Glyph, point: PointDescriptor): MatchType => {\n  const glyphLine = glyph[point.lineIndex];\n\n  const endPointIndex = (getNumColumns(glyphLine.value[0]) - 3) / 2 - 1;\n  if (point.pointIndex !== 0 && point.pointIndex !== endPointIndex) {\n    return MatchType.none;\n  }\n\n  const x = glyphLine.value[3 + point.pointIndex * 2];\n  const y = glyphLine.value[3 + point.pointIndex * 2 + 1];\n  const isOnline = (x1: number, y1: number, x2: number, y2: number): boolean => (\n    (\n      x1 === x2 && // 垂直\n      x1 === x && y1 <= y && y <= y2\n    ) || (\n      y1 === y2 && // 水平\n      y1 === y && x1 <= x && x <= x2\n    )\n  );\n\n  let result = MatchType.none;\n  for (let lineIndex = 0; lineIndex < glyph.length; lineIndex++) {\n    if (point.lineIndex === lineIndex) {\n      continue;\n    }\n    const glyphLine = glyph[lineIndex];\n    if ([0, 9, 99].includes(glyphLine.value[0])) {\n      continue;\n    }\n\n    if (glyphLine.value[3] === x && glyphLine.value[4] === y) {\n      return MatchType.match;\n    }\n    const endPointIndex = (getNumColumns(glyphLine.value[0]) - 3) / 2 - 1;\n    if (\n      glyphLine.value[3 + endPointIndex * 2] === x &&\n      glyphLine.value[3 + endPointIndex * 2 + 1] === y\n    ) {\n      return MatchType.match;\n    }\n\n    switch (glyphLine.value[0]) {\n      case 3:\n      case 4:\n        if (\n          isOnline(glyphLine.value[3], glyphLine.value[4], glyphLine.value[5], glyphLine.value[6]) ||\n          isOnline(glyphLine.value[5], glyphLine.value[6], glyphLine.value[7], glyphLine.value[8])\n        ) {\n          result = MatchType.online;\n        }\n        break;\n      case 1:\n      case 7:\n        if (isOnline(glyphLine.value[3], glyphLine.value[4], glyphLine.value[5], glyphLine.value[6])) {\n          result = MatchType.online;\n        }\n        break;\n    }\n  }\n  return result;\n};\n","import memoizeOne from 'memoize-one';\n\nimport { GlyphLine, Glyph, PointDescriptor, getNumColumns } from './glyph';\n\ninterface ConnectablePoint {\n  position: 'start' | 'end';\n  strokeType: number;\n  shapeType: number;\n  coord: [number, number];\n  pointIndex: number;\n}\n\ninterface ConnectablePointFilter {\n  position: 'start' | 'end';\n  strokeTypes: number[];\n  shapeTypes: number[];\n}\n\nconst connectablePairs: [ConnectablePointFilter, ConnectablePointFilter][] = [\n  [\n    // 左上\n    {\n      position: 'start',\n      strokeTypes: [1],\n      shapeTypes: [2],\n    },\n    {\n      position: 'start',\n      strokeTypes: [1, 2, 3, 4, 6, 7],\n      shapeTypes: [12],\n    },\n  ],\n  [\n    // 左下\n    {\n      position: 'start',\n      strokeTypes: [1],\n      shapeTypes: [2],\n    },\n    {\n      position: 'end',\n      strokeTypes: [1],\n      shapeTypes: [13, 313, 413],\n    },\n  ],\n  [\n    // 右上\n    {\n      position: 'end',\n      strokeTypes: [1],\n      shapeTypes: [2],\n    },\n    {\n      position: 'start',\n      strokeTypes: [1, 2, 3, 4, 6, 7],\n      shapeTypes: [22],\n    },\n  ],\n  [\n    // 右下\n    {\n      position: 'end',\n      strokeTypes: [1],\n      shapeTypes: [2],\n    },\n    {\n      position: 'end',\n      strokeTypes: [1],\n      shapeTypes: [23, 24],\n    },\n  ],\n];\n\nconst matchConnectablePoint = (filter: ConnectablePointFilter, point: ConnectablePoint) => (\n  filter.position === point.position &&\n  filter.strokeTypes.includes(point.strokeType) &&\n  filter.shapeTypes.includes(point.shapeType)\n)\n\nconst isConnectable = (point1: ConnectablePoint, point2: ConnectablePoint) => (\n  point1.coord[0] === point2.coord[0] &&\n  point1.coord[1] === point2.coord[1] &&\n  connectablePairs.some(([filter1, filter2]) => (\n    (matchConnectablePoint(filter1, point1) && matchConnectablePoint(filter2, point2)) ||\n    (matchConnectablePoint(filter2, point1) && matchConnectablePoint(filter1, point2))\n  ))\n);\n\nconst getConnectablePoints = (glyphLine: GlyphLine): ConnectablePoint[] => {\n  const result: ConnectablePoint[] = [];\n  switch (glyphLine.value[0]) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 6:\n    case 7: {\n      result.push({\n        position: 'start',\n        strokeType: glyphLine.value[0],\n        shapeType: glyphLine.value[1],\n        coord: [\n          glyphLine.value[3],\n          glyphLine.value[4],\n        ],\n        pointIndex: 0,\n      });\n      const endPointIndex = (getNumColumns(glyphLine.value[0]) - 3) / 2 - 1;\n      result.push({\n        position: 'end',\n        strokeType: glyphLine.value[0],\n        shapeType: glyphLine.value[2],\n        coord: [\n          glyphLine.value[3 + endPointIndex * 2],\n          glyphLine.value[3 + endPointIndex * 2 + 1],\n        ],\n        pointIndex: endPointIndex,\n      });\n      break;\n    }\n  }\n  return result;\n};\n\nexport const listupConnectedPoints = memoizeOne((glyph: Glyph, points: PointDescriptor[]): PointDescriptor[] => {\n  const sPoints: ConnectablePoint[] = [];\n  for (const { lineIndex, pointIndex } of points) {\n    for (const sPoint of getConnectablePoints(glyph[lineIndex])) {\n      if (sPoint.pointIndex === pointIndex) {\n        sPoints.push(sPoint);\n      }\n    }\n  }\n  const result: PointDescriptor[] = [];\n  glyph.forEach((glyphLine, lineIndex) => {\n    for (const dPoint of getConnectablePoints(glyphLine)) {\n      if (sPoints.some((sPoint) => isConnectable(sPoint, dPoint))) {\n        result.push({\n          lineIndex,\n          pointIndex: dPoint.pointIndex,\n        });\n      }\n    }\n  });\n  return result;\n}, ([glyph1, points1], [glyph2, points2]) => (\n  glyph1 === glyph2 &&\n  points1.length === points2.length &&\n  points1.every((point1, index) => (\n    point1.lineIndex === points2[index].lineIndex &&\n    point1.pointIndex === points2[index].pointIndex\n  ))\n));\n\nexport const listupConnectedPointsOfSelection = memoizeOne((glyph: Glyph, selection: number[]): PointDescriptor[] => {\n  const selectedDescs: PointDescriptor[] = [];\n  for (const lineIndex of selection) {\n    const glyphLine = glyph[lineIndex];\n    selectedDescs.push({ lineIndex, pointIndex: 0 });\n    selectedDescs.push({ lineIndex, pointIndex: (getNumColumns(glyphLine.value[0]) - 3) / 2 - 1 });\n  }\n  return listupConnectedPoints(glyph, selectedDescs)\n    .filter(({ lineIndex }) => !selection.includes(lineIndex));\n});\n","import { GlyphLine, Glyph, PointDescriptor } from './glyph';\n\nimport { BBX } from './bbx';\nimport { listupConnectedPoints, listupConnectedPointsOfSelection } from './connection';\n\nexport const applyGlyphLineOperation = (glyphLine: GlyphLine, tX: (x: number) => number, tY: (y: number) => number): GlyphLine => {\n  switch (glyphLine.value[0]) {\n    case 99: {\n      const value = glyphLine.value.slice();\n      value[3] = tX(value[3]);\n      value[4] = tY(value[4]);\n      value[5] = tX(value[5]);\n      value[6] = tY(value[6]);\n      return { value, partName: glyphLine.partName };\n    }\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 6:\n    case 7:\n    case 9: {\n      const value = glyphLine.value.slice();\n      for (let i = 3; i + 2 <= value.length; i += 2) {\n        value[i] = tX(value[i]);\n        value[i + 1] = tY(value[i + 1]);\n      }\n      return { value };\n    }\n    default:\n      return glyphLine;\n  }\n}\n\nexport const applyGlyphPointOperation = (glyph: Glyph, pdescs: PointDescriptor[], tX: (x: number) => number, tY: (y: number) => number): Glyph => {\n  if (pdescs.length === 0) {\n    return glyph;\n  }\n  const newGlyph = glyph.slice();\n  for (const { lineIndex, pointIndex } of pdescs) {\n    const glyphLine = newGlyph[lineIndex];\n    const newValue = glyphLine.value.slice();\n    newValue[3 + pointIndex * 2] = tX(newValue[3 + pointIndex * 2]);\n    newValue[3 + pointIndex * 2 + 1] = tY(newValue[3 + pointIndex * 2 + 1]);\n    newGlyph[lineIndex] = {\n      ...glyphLine,\n      value: newValue,\n    };\n  }\n  return newGlyph;\n};\n\n\nexport const moveSelectedGlyphLines = (glyph: Glyph, selection: number[], dx: number, dy: number): Glyph => {\n  if (selection.length === 0) {\n    return glyph;\n  }\n  const targetDescs = listupConnectedPointsOfSelection(glyph, selection);\n\n  const tX = (x: number) => Math.round(x + dx);\n  const tY = (y: number) => Math.round(y + dy);\n  glyph = glyph.map((glyphLine, index) => selection.includes(index)\n    ? applyGlyphLineOperation(glyphLine, tX, tY)\n    : glyphLine\n  );\n  glyph = applyGlyphPointOperation(glyph, targetDescs, tX, tY);\n  return glyph;\n};\n\nexport const moveSelectedPoint = (glyph: Glyph, selection: number[], pointIndex: number, dx: number, dy: number): Glyph => {\n  if (selection.length === 0) {\n    return glyph;\n  }\n  const lineIndex = selection[0];\n  const selectedDesc: PointDescriptor = { lineIndex, pointIndex };\n  const targetDescs = listupConnectedPoints(glyph, [selectedDesc])\n    .filter((targetDesc) => targetDesc.lineIndex !== lineIndex);\n  targetDescs.push(selectedDesc);\n\n  const tX = (x: number) => Math.round(x + dx);\n  const tY = (y: number) => Math.round(y + dy);\n  glyph = applyGlyphPointOperation(glyph, targetDescs, tX, tY);\n  return glyph;\n};\n\nexport const resizeGlyphLine = (glyphLine: GlyphLine, oldBBX: BBX, newBBX: BBX): GlyphLine => {\n  const [x11, y11, x12, y12] = oldBBX;\n  const [x21, y21, x22, y22] = newBBX;\n  const tX = (x: number) => Math.round(x21 + (x - x11) * (x22 - x21) / (x12 - x11));\n  const tY = (y: number) => Math.round(y21 + (y - y11) * (y22 - y21) / (y12 - y11));\n  return applyGlyphLineOperation(glyphLine, tX, tY);\n};\n\nexport const resizeSelectedGlyphLines = (glyph: Glyph, selection: number[], oldBBX: BBX, newBBX: BBX): Glyph => {\n  return glyph.map((glyphLine, index) => selection.includes(index)\n    ? resizeGlyphLine(glyphLine, oldBBX, newBBX)\n    : glyphLine\n  );\n};\n","import actionCreatorFactory from 'typescript-fsa';\n\nimport { StretchParam } from '../kageUtils/stretchparam';\n\nconst actionCreator = actionCreatorFactory('EDITOR');\n\nexport const editorActions = {\n  loadedBuhin: actionCreator<[string, string]>('LOAD_BUHIN_DATA'),\n  loadedStretchParam: actionCreator<[string, StretchParam]>('LOAD_STRETCH_PARAM'),\n\n  changeStrokeType: actionCreator<number>('CHANGE_STROKE_TYPE'),\n  changeHeadShapeType: actionCreator<number>('CHANGE_HEAD_SHAPE_TYPE'),\n  changeTailShapeType: actionCreator<number>('CHANGE_TAIL_SHAPE_TYPE'),\n  changeStretchCoeff: actionCreator<number>('CHANGE_STRETCH_COEFF'),\n\n  swapWithPrev: actionCreator('SWAP_WITH_PREV'),\n  swapWithNext: actionCreator('SWAP_WITH_NEXT'),\n\n  insertPart: actionCreator<string>('ADD_PART'),\n\n  paste: actionCreator('PASTE'),\n  copy: actionCreator('COPY_SELECTION'),\n  cut: actionCreator('CUT_SELECTION'),\n  delete: actionCreator('DELETE_SELECTION'),\n  decomposeSelected: actionCreator('DECOMPOSE_SELECTION'),\n  moveSelected: actionCreator<[number, number]>('MOVE_SELECTED'),\n\n  toggleFreehand: actionCreator('TOGGLE_FREEHAND_MODE'),\n\n  escape: actionCreator('PRESS_ESC_KEY'),\n\n  finishEdit: actionCreator<Event>('FINISH_EDIT'),\n};\n","// The temporary reverse proxy which adds 'Access-Control-Allow-Origin: *' header.\n// This header is required for cross-origin requests.\nconst apiUrlPrefix = 'https://asia-northeast1-ku6goma.cloudfunctions.net/gwproxy';\n\nconst callApi = async (path: string) => {\n  const response = await fetch(apiUrlPrefix + path);\n  if (!response.ok) {\n    throw new Error('API error occurred');\n  }\n  return new URLSearchParams(await response.text());\n};\n\nexport const getSource = async (name: string) => {\n  const result = await callApi(`/get_source.cgi?name=${encodeURIComponent(name)}`);\n  return result.get('data');\n};\n\nexport const search = async (query: string) => {\n  const result = await callApi(`/search4ge.cgi?query=${encodeURIComponent(query)}`);\n  return result.get('data')!;\n};\n\nexport const getCandidate = async (name: string) => {\n  const result = await callApi(`/get_candidate.cgi?name=${encodeURIComponent(name)}`);\n  return result.get('data')!;\n};\n","import memoizeOne from 'memoize-one';\n\nimport { Kage, Polygons } from '@kurgm/kage-engine';\nimport { Glyph, unparseGlyphLine } from './kageUtils/glyph';\nimport { StretchParam } from './kageUtils/stretchparam';\n\nimport store from './store';\nimport { editorActions } from './actions/editor';\n\nimport { getSource } from './callapi';\n\nexport type KShotai = Kage[\"kShotai\"];\n\nconst kage_ = new Kage();\n\nexport const getKage = (buhinMap: Map<string, string>, fallback?: (name: string) => string | undefined | void, shotai?: KShotai): Kage => {\n  kage_.kBuhin.search = (name) => {\n    let result = buhinMap.get(name);\n    if (typeof result === 'undefined') {\n      result = fallback?.(name) || '';\n    }\n    return result;\n  };\n  if (typeof shotai !== 'undefined') {\n    kage_.kShotai = shotai;\n  }\n  return kage_;\n};\n\nlet waiting = new Set<string>();\nconst loadAbsentBuhin = (name: string) => {\n  if (waiting.has(name)) {\n    return;\n  }\n  waiting.add(name);\n  getSource(name)\n    .then((source) => {\n      if (typeof source !== 'string') {\n        throw new Error(`failed to get buhin source of ${name}`);\n      }\n      const stretchMatch = /^0:1:0:(-?\\d+):(-?\\d+):(-?\\d+):(-?\\d+)(?=$|\\$)/.exec(source);\n      if (stretchMatch) {\n        const params: StretchParam = [\n          +stretchMatch[1] || 0,\n          +stretchMatch[2] || 0,\n          +stretchMatch[3] || 0,\n          +stretchMatch[4] || 0,\n        ];\n        store.dispatch(editorActions.loadedStretchParam([name, params]));\n      }\n      store.dispatch(editorActions.loadedBuhin([name, source]));\n      waiting.delete(name);\n    })\n    .catch((err) => console.error(err));\n};\n\nconst filteredGlyphIsEqual = (glyph1: Glyph, glyph2: Glyph) => (\n  glyph1.length === glyph2.length &&\n  glyph1.every((gLine1, index) => (\n    gLine1 === glyph2[index]\n  ))\n);\n\nconst makeGlyphSeparated_ = memoizeOne((glyph: Glyph, map: Map<string, string>, shotai: KShotai): Polygons[] => {\n  const data = glyph.map(unparseGlyphLine);\n  const result = getKage(map, loadAbsentBuhin, shotai).makeGlyphSeparated(data);\n  return result;\n}, ([glyph1, map1, shotai1], [glyph2, map2, shotai2]) => (\n  map1 === map2 &&\n  shotai1 === shotai2 &&\n  filteredGlyphIsEqual(glyph1, glyph2)\n));\n\nconst makeGlyphSeparatedFactory = (\n  isEqual?: (newArgs: Parameters<typeof makeGlyphSeparated_>, lastArgs: Parameters<typeof makeGlyphSeparated_>) => boolean\n) => memoizeOne((glyph: Glyph, map: Map<string, string>, shotai: KShotai): Polygons[] => {\n  return makeGlyphSeparated_(glyph, map, shotai);\n}, isEqual);\n\nexport const makeGlyphSeparated = makeGlyphSeparatedFactory();\nexport const makeGlyphSeparatedForSubmit = makeGlyphSeparatedFactory(\n  ([glyph1, map1, shotai1], [glyph2, map2, shotai2]) => (\n    map1 === map2 &&\n    shotai1 === shotai2 &&\n    filteredGlyphIsEqual(glyph1, glyph2)\n  )\n);\n","import memoizeOne from 'memoize-one';\n\nimport { GlyphLine } from './glyph';\n\nexport type BBX = [number, number, number, number];\n\nexport const bbxOfPoints = (points: [number, number][]): BBX => {\n  const xs = points.map(([x]) => x);\n  const ys = points.map(([, y]) => y);\n  return [\n    Math.min(...xs),\n    Math.min(...ys),\n    Math.max(...xs),\n    Math.max(...ys),\n  ];\n};\n\nexport const getGlyphLineBBX = (glyphLine: GlyphLine): BBX => {\n  switch (glyphLine.value[0]) {\n    case 99:\n      return bbxOfPoints([\n        [glyphLine.value[3], glyphLine.value[4]],\n        [glyphLine.value[5], glyphLine.value[6]],\n      ]);\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 6:\n    case 7:\n    case 9: {\n      const points: [number, number][] = [];\n      for (let i = 3; i + 2 <= glyphLine.value.length; i += 2) {\n        points.push([glyphLine.value[i], glyphLine.value[i + 1]]);\n      }\n      return bbxOfPoints(points);\n    }\n    default:\n      return bbxOfPoints([]);\n  }\n}\n\nexport const mergeBBX = ([x11, y11, x12, y12]: BBX, [x21, y21, x22, y22]: BBX): BBX => [\n  Math.min(x11, x21),\n  Math.min(y11, y21),\n  Math.max(x12, x22),\n  Math.max(y12, y22),\n];\n\nexport const getGlyphLinesBBX = memoizeOne((glyphLines: GlyphLine[]): BBX => {\n  return glyphLines.map(getGlyphLineBBX).reduce(mergeBBX, bbxOfPoints([]));\n}, ([gLines1], [gLines2]) => (\n  gLines1.length === gLines2.length &&\n  gLines1.every((gLine1, index) => gLine1 === gLines2[index])\n));\n","import { createSelector } from 'reselect';\n\nimport { RectPointPosition } from '../actions/drag';\n\nimport { AppState } from '../reducers';\n\nimport { Glyph, GlyphLine } from '../kageUtils/glyph';\nimport { getGlyphLinesBBX } from '../kageUtils/bbx';\nimport { moveSelectedGlyphLines, moveSelectedPoint, resizeSelectedGlyphLines } from '../kageUtils/transform';\nimport { drawFreehand } from '../kageUtils/freehand';\n\nexport const resizeSelected = (glyph: Glyph, selection: number[], position: RectPointPosition, dx: number, dy: number): Glyph => {\n  if (selection.length === 1) {\n    const selectedGlyphLine = glyph[selection[0]];\n    switch (selectedGlyphLine.value[0]) {\n      case 0:\n      case 9:\n      case 99: {\n        const newValue = selectedGlyphLine.value.slice();\n        switch (position) {\n          case RectPointPosition.north:\n            newValue[4] += dy;\n            break;\n          case RectPointPosition.west:\n            newValue[3] += dx;\n            break;\n          case RectPointPosition.south:\n            newValue[6] += dy;\n            break;\n          case RectPointPosition.east:\n            newValue[5] += dx;\n            break;\n          case RectPointPosition.southeast:\n            newValue[5] += dx;\n            newValue[6] += dy;\n            break;\n          default:\n            // exhaustive?\n            ((_x: never) => { })(position);\n        }\n        const newGlyphLine: GlyphLine = selectedGlyphLine.value[0] === 99\n          ? { value: newValue, partName: selectedGlyphLine.partName }\n          : { value: newValue };\n        return glyph.map((glyphLine, index) => index === selection[0] ? newGlyphLine : glyphLine);\n      }\n    }\n  }\n  const minSize = 20;\n  const oldBBX = getGlyphLinesBBX(selection.map((index) => glyph[index]));\n  const newBBX = oldBBX.slice() as typeof oldBBX;\n  switch (position) {\n    case RectPointPosition.north:\n      newBBX[1] = Math.min(newBBX[1] + dy, newBBX[3] - minSize);\n      break;\n    case RectPointPosition.west:\n      newBBX[0] = Math.min(newBBX[0] + dx, newBBX[2] - minSize);\n      break;\n    case RectPointPosition.south:\n      newBBX[3] = Math.max(newBBX[3] + dy, newBBX[1] + minSize);\n      break;\n    case RectPointPosition.east:\n      newBBX[2] = Math.max(newBBX[2] + dx, newBBX[0] + minSize);\n      break;\n    case RectPointPosition.southeast:\n      newBBX[2] = Math.max(newBBX[2] + dx, newBBX[0] + minSize);\n      newBBX[3] = Math.max(newBBX[3] + dy, newBBX[1] + minSize);\n      break;\n    default:\n      // exhaustive?\n      ((_x: never) => { })(position);\n  }\n  return resizeSelectedGlyphLines(glyph, selection, oldBBX, newBBX);\n};\n\nexport const draggedGlyphSelector = createSelector([\n  (state: AppState) => state.glyph,\n  (state: AppState) => state.selection,\n  (state: AppState) => state.dragSelection,\n  (state: AppState) => state.dragPoint,\n  (state: AppState) => state.resizeSelection,\n  (state: AppState) => state.freehandStroke,\n], (glyph, selection, dragSelection, dragPoint, resizeSelection, freehandStroke) => {\n  if (dragSelection) {\n    const [x1, y1, x2, y2] = dragSelection;\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    glyph = moveSelectedGlyphLines(glyph, selection, dx, dy);\n  } else if (dragPoint) {\n    const [pointIndex, [x1, y1, x2, y2]] = dragPoint;\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    glyph = moveSelectedPoint(glyph, selection, pointIndex, dx, dy);\n  } else if (resizeSelection) {\n    const [position, [x1, y1, x2, y2]] = resizeSelection;\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    glyph = resizeSelected(glyph, selection, position, dx, dy);\n  } else if (freehandStroke) {\n    glyph = drawFreehand(glyph, freehandStroke);\n  }\n  return glyph;\n});\n","import { GlyphLine } from './glyph';\n\nexport type StretchParam = [number, number, number, number];\nexport type StretchPositions = [number, number, number, number];\n\nexport const getStretchPositions = (glyphLine: GlyphLine): StretchPositions | null => {\n  if (glyphLine.value[0] !== 99) {\n    return null;\n  }\n  const sx = glyphLine.value[9];\n  const sy = glyphLine.value[10];\n  const tx = glyphLine.value[1];\n  const ty = glyphLine.value[2];\n  return [sx, sy, tx, ty];\n};\n\nexport const setStretchPositions = (glyphLine: GlyphLine, positions: StretchPositions): GlyphLine => {\n  if (glyphLine.value[0] !== 99) {\n    return glyphLine;\n  }\n  const [sx, sy, tx, ty] = positions;\n\n  const newValue = glyphLine.value.slice();\n  newValue[9] = sx;\n  newValue[10] = sy;\n  newValue[1] = tx;\n  newValue[2] = ty;\n  return { value: newValue, partName: glyphLine.partName };\n};\n\nexport const normalizeStretchPositions = (positions: StretchPositions): StretchPositions => {\n  let [sx, sy, tx, ty] = positions;\n  if (tx <= 100) {\n    tx += 200;\n    sx = sy = 0;\n  }\n  return [sx, sy, tx, ty];\n};\n\nexport const calcStretchPositions = (param: StretchParam, k: number): StretchPositions => {\n  const [x0, y0, x1, y1] = param;\n  return [\n    x0 - 100,\n    y0 - 100,\n    x0 + (x1 - x0) * k / 20 + 100,\n    y0 + (y1 - y0) * k / 20 - 100,\n  ];\n};\n\nconst clampStretchScalar = (k: number): number => Math.max(-10, Math.min(10, k));\n\nexport const calcStretchScalar = (param: StretchParam, positions: StretchPositions): number => {\n  const [x0, y0, x1, y1] = param;\n  if (x0 === x1 && y0 === y1) {\n    return 0;\n  }\n  const [sx, sy, tx, ty] = normalizeStretchPositions(positions);\n  if (sx === tx - 200 && sy === ty) {\n    return 0;\n  }\n  return clampStretchScalar(Math.round(\n    Math.abs(x0 - x1) > Math.abs(y0 - y1)\n      ? (tx - 100 - x0) / (x1 - x0) * 20\n      : (ty + 100 - y0) / (y1 - y0) * 20\n  )) || 0;\n}\n","import { getKage } from '../kage';\n\nimport { GlyphLine, parseGlyph, unparseGlyph, unparseGlyphLine, getNumColumns, Glyph } from './glyph';\nimport { getStretchPositions, normalizeStretchPositions, setStretchPositions } from './stretchparam';\nimport { applyGlyphLineOperation } from './transform';\n\nexport const decompose = (glyphLine: GlyphLine, buhinMap: Map<string, string>): GlyphLine[] => {\n  if (glyphLine.value[0] !== 99) {\n    return [glyphLine];\n  }\n  const buhinSource = buhinMap.get(glyphLine.partName!);\n  if (!buhinSource) {\n    return [glyphLine];\n  }\n\n  let failedBuhin = false;\n  const kage = getKage(buhinMap, () => {\n    failedBuhin = true;\n  });\n\n  const glyph = parseGlyph(buhinSource);\n\n  const strokesArray =\n    // @ts-ignore 2445\n    kage.getEachStrokes(\n      unparseGlyph(glyph)\n    );\n  const box =\n    // @ts-ignore 2445\n    kage.getBox(\n      strokesArray\n    );\n\n  const x1 = glyphLine.value[3];\n  const y1 = glyphLine.value[4];\n  const x2 = glyphLine.value[5];\n  const y2 = glyphLine.value[6];\n  const [sx, sy, tx, ty] = normalizeStretchPositions(getStretchPositions(glyphLine)!);\n  const isStretchEnabled = !(sx === tx - 200 && sy === ty);\n\n  if (isStretchEnabled && failedBuhin) {\n    // box may be incorrect\n    return [glyphLine];\n  }\n\n  return glyph.map((oldGlyphLine) => {\n    const tX = (x: number) => {\n      const stretchedX = isStretchEnabled\n        ? kage.stretch(tx - 200, sx, x, box.minX, box.maxX)\n        : x;\n      return Math.round(stretchedX / 200 * (x2 - x1) + x1);\n    };\n    const tY = (y: number) => {\n      const stretchedY = isStretchEnabled\n        ? kage.stretch(ty, sy, y, box.minY, box.maxY)\n        : y;\n      return Math.round(stretchedY / 200 * (y2 - y1) + y1);\n    };\n    const newGlyphLine = applyGlyphLineOperation(oldGlyphLine, tX, tY);\n\n    if (!(isStretchEnabled && newGlyphLine.value[0] === 99)) {\n      return newGlyphLine;\n    }\n\n    const [sx2, sy2, tx2, ty2] = normalizeStretchPositions(getStretchPositions(newGlyphLine)!);\n    if (!(sx2 === tx2 - 200 && sy2 === ty2)) {\n      // Cannot compose two stretches...\n      return newGlyphLine;\n    }\n\n    const px1 = newGlyphLine.value[3];\n    const py1 = newGlyphLine.value[4];\n    const px2 = newGlyphLine.value[5];\n    const py2 = newGlyphLine.value[6];\n\n    if (px1 === px2 || py1 === py2) {\n      return newGlyphLine;\n    }\n\n    const revX = (x: number) => (x - px1) / (px2 - px1) * 200;\n    const revY = (y: number) => (y - py1) / (py2 - py1) * 200;\n    return setStretchPositions(newGlyphLine, [\n      revX(sx2 + 100),\n      revY(sy2 + 100),\n      revX(tx2 - 100) + 100,\n      revY(ty2 + 100),\n    ]);\n  });\n};\n\nexport const decomposeDeep = (glyphLine: GlyphLine, buhinMap: Map<string, string>): GlyphLine[] => {\n  const kage = getKage(buhinMap);\n  const strokesArray =\n    // @ts-ignore 2445\n    kage.getEachStrokes(\n      unparseGlyphLine(glyphLine)\n    );\n  return strokesArray.map((stroke): GlyphLine => {\n    const columns = getNumColumns(stroke.a1);\n    return {\n      value: [\n        stroke.a1,\n        stroke.a2_100 + stroke.kirikuchiAdjustment * 100 + stroke.tateAdjustment * 1000,\n        stroke.a3_100 + stroke.opt3 * 100 + stroke.mageAdjustment * 1000,\n        stroke.x1,\n        stroke.y1,\n        stroke.x2,\n        stroke.y2,\n        stroke.x3,\n        stroke.y3,\n        stroke.x4,\n        stroke.y4,\n      ].slice(0, columns),\n    };\n  });\n};\n\nexport const decomposeDeepGlyph = (glyph: Glyph, buhinMap: Map<string, string>): GlyphLine[] => {\n  return glyph.map((glyphLine) => decomposeDeep(glyphLine, buhinMap)).reduce((a, b) => a.concat(b), []);\n};\n","import memoizeOne from 'memoize-one';\n\nimport { GlyphLine, getNumColumns } from './glyph';\n\nexport const strokeTypes = [1, 2, 3, 4, 6, 7];\n\nexport const headShapeTypes: Record<number, number[]> = {\n  1: [0, 2, 32, 12, 22],\n  2: [0, 32, 12, 22, 7],\n  3: [0, 32, 12, 22],\n  4: [0, 22],\n  6: [0, 32, 12, 22, 7],\n  7: [0, 32, 12, 22],\n};\n\nexport const tailShapeTypes: Record<number, number[]> = {\n  1: [0, 2, 32, 13, 23, 4, 313, 413, 24],\n  2: [7, 0, 8, 4, 5],\n  3: [0, 5],\n  4: [0, 5],\n  6: [7, 0, 8, 4, 5],\n  7: [7],\n};\n\nexport const changeStrokeType = (glyphLine: GlyphLine, newType: number): GlyphLine => {\n  const oldType = glyphLine.value[0];\n  if (!strokeTypes.includes(oldType) || !strokeTypes.includes(newType)) {\n    return glyphLine;\n  }\n  const newGlyphLine = {\n    value: glyphLine.value.slice(),\n  };\n\n  newGlyphLine.value[0] = newType;\n\n  if (!headShapeTypes[newType].includes(newGlyphLine.value[1])) {\n    newGlyphLine.value[1] = headShapeTypes[newType][0];\n  }\n  if (!tailShapeTypes[newType].includes(newGlyphLine.value[2])) {\n    newGlyphLine.value[2] = tailShapeTypes[newType][0];\n  }\n\n  const oldNumPoints = (getNumColumns(oldType) - 3) / 2;\n  const newNumPoints = (getNumColumns(newType) - 3) / 2;\n  if (oldNumPoints === newNumPoints) {\n    return newGlyphLine;\n  }\n  if (oldNumPoints === 2 && newNumPoints === 3) {\n    const x1 = newGlyphLine.value[3];\n    const y1 = newGlyphLine.value[4];\n    const x3 = newGlyphLine.value[5];\n    const y3 = newGlyphLine.value[6];\n\n    const x2 = Math.round((x1 + x3) / 2);\n    const y2 = Math.round((y1 + y3) / 2);\n    newGlyphLine.value = newGlyphLine.value.slice(0, 3).concat(\n      [x1, y1, x2, y2, x3, y3]\n    );\n    return newGlyphLine;\n  }\n  if (oldNumPoints === 2 && newNumPoints === 4) {\n    const x1 = newGlyphLine.value[3];\n    const y1 = newGlyphLine.value[4];\n    const x4 = newGlyphLine.value[5];\n    const y4 = newGlyphLine.value[6];\n\n    const x2 = Math.round((2 * x1 + x4) / 3);\n    const y2 = Math.round((2 * y1 + y4) / 3);\n    const x3 = Math.round((x1 + 2 * x4) / 3);\n    const y3 = Math.round((y1 + 2 * y4) / 3);\n    newGlyphLine.value = newGlyphLine.value.slice(0, 3).concat(\n      [x1, y1, x2, y2, x3, y3, x4, y4]\n    );\n    return newGlyphLine;\n  }\n  if (oldNumPoints === 3 && newNumPoints === 2) {\n    const x1 = newGlyphLine.value[3];\n    const y1 = newGlyphLine.value[4];\n    const x2 = newGlyphLine.value[7];\n    const y2 = newGlyphLine.value[8];\n    newGlyphLine.value = newGlyphLine.value.slice(0, 3).concat(\n      [x1, y1, x2, y2]\n    );\n    return newGlyphLine;\n  }\n  if (oldNumPoints === 3 && newNumPoints === 4) {\n    const x1 = newGlyphLine.value[3];\n    const y1 = newGlyphLine.value[4];\n    const xm = newGlyphLine.value[5];\n    const ym = newGlyphLine.value[6];\n    const x4 = newGlyphLine.value[7];\n    const y4 = newGlyphLine.value[8];\n\n    const x2 = Math.round((x1 + 2 * xm) / 3);\n    const y2 = Math.round((y1 + 2 * ym) / 3);\n    const x3 = Math.round((x4 + 2 * xm) / 3);\n    const y3 = Math.round((y4 + 2 * ym) / 3);\n    newGlyphLine.value = newGlyphLine.value.slice(0, 3).concat(\n      [x1, y1, x2, y2, x3, y3, x4, y4]\n    );\n    return newGlyphLine;\n  }\n  if (oldNumPoints === 4 && newNumPoints === 2) {\n    const x1 = newGlyphLine.value[3];\n    const y1 = newGlyphLine.value[4];\n    const x2 = newGlyphLine.value[9];\n    const y2 = newGlyphLine.value[10];\n    newGlyphLine.value = newGlyphLine.value.slice(0, 3).concat(\n      [x1, y1, x2, y2]\n    );\n    return newGlyphLine;\n  }\n  if (oldNumPoints === 4 && newNumPoints === 3) {\n    const x1 = newGlyphLine.value[3];\n    const y1 = newGlyphLine.value[4];\n    const xm1 = newGlyphLine.value[5];\n    const ym1 = newGlyphLine.value[6];\n    const xm2 = newGlyphLine.value[7];\n    const ym2 = newGlyphLine.value[8];\n    const x3 = newGlyphLine.value[9];\n    const y3 = newGlyphLine.value[10];\n\n    const x2 = Math.round((xm1 + xm2) / 2);\n    const y2 = Math.round((ym1 + ym2) / 2);\n    newGlyphLine.value = newGlyphLine.value.slice(0, 3).concat(\n      [x1, y1, x2, y2, x3, y3]\n    );\n    return newGlyphLine;\n  }\n  return newGlyphLine;\n};\n\nconst validStrokeShapeTypes: [number, number, number][] = [\n  [1, 0, 0],\n  [1, 0, 2],\n  [1, 0, 32],\n  [1, 0, 13],\n  [1, 0, 23],\n  [1, 0, 4],\n  [1, 0, 313],\n  [1, 0, 413],\n  [1, 0, 24],\n  [1, 2, 0],\n  [1, 2, 2],\n  [1, 32, 0],\n  [1, 32, 32],\n  [1, 32, 13],\n  [1, 32, 23],\n  [1, 32, 4],\n  [1, 32, 313],\n  [1, 32, 413],\n  [1, 32, 24],\n  [1, 12, 0],\n  [1, 12, 32],\n  [1, 12, 13],\n  [1, 12, 23],\n  [1, 12, 313],\n  [1, 12, 413],\n  [1, 12, 24],\n  [1, 22, 0],\n  [1, 22, 32],\n  [1, 22, 13],\n  [1, 22, 23],\n  [1, 22, 4],\n  [1, 22, 313],\n  [1, 22, 413],\n  [1, 22, 24],\n  [2, 0, 7],\n  [2, 0, 5],\n  [2, 32, 7],\n  [2, 32, 4],\n  [2, 32, 5],\n  [2, 12, 7],\n  [2, 22, 7],\n  [2, 22, 4],\n  [2, 22, 5],\n  [2, 7, 0],\n  [2, 7, 8],\n  [2, 7, 4],\n  [3, 0, 0],\n  [3, 0, 5],\n  [3, 32, 0],\n  [3, 32, 5],\n  [3, 12, 0],\n  [3, 12, 5],\n  [3, 22, 0],\n  [3, 22, 5],\n  [4, 0, 0],\n  [4, 0, 5],\n  [4, 22, 0],\n  [4, 22, 5],\n  [6, 0, 7],\n  [6, 0, 5],\n  [6, 32, 7],\n  [6, 32, 4],\n  [6, 32, 5],\n  [6, 12, 7],\n  [6, 22, 7],\n  [6, 22, 4],\n  [6, 22, 5],\n  [6, 7, 0],\n  [6, 7, 8],\n  [6, 7, 4],\n  [7, 0, 7],\n  [7, 32, 7],\n  [7, 12, 7],\n  [7, 22, 7],\n];\n\nexport const isValidStrokeShapeTypes = memoizeOne((stroke: GlyphLine) => {\n  if (!strokeTypes.includes(stroke.value[0])) {\n    return true;\n  }\n\n  return validStrokeShapeTypes.some(([s0, s1, s2]) => (\n    s0 === stroke.value[0] &&\n    s1 === stroke.value[1] &&\n    s2 === stroke.value[2]\n  ));\n});\n","import { ReducerBuilder } from 'typescript-fsa-reducers';\n\nimport { editorActions } from '../actions/editor';\n\nimport { Glyph, GlyphLine } from '../kageUtils/glyph';\nimport { getGlyphLinesBBX } from '../kageUtils/bbx';\nimport { decompose } from '../kageUtils/decompose';\nimport { calcStretchPositions, setStretchPositions } from '../kageUtils/stretchparam';\nimport { changeStrokeType } from '../kageUtils/stroketype';\nimport { applyGlyphLineOperation, moveSelectedGlyphLines } from '../kageUtils/transform';\n\nimport { AppState } from '.';\n\nconst setGlyphLine = (glyph: Glyph, index: number, glyphLine: GlyphLine): Glyph => {\n  const newGlyph = glyph.slice();\n  newGlyph[index] = glyphLine;\n  return newGlyph;\n};\n\nexport default (builder: ReducerBuilder<AppState>) => builder\n  .case(editorActions.loadedBuhin, (state, [name, data]) => {\n    const newMap = new Map(state.buhinMap);\n    newMap.set(name, data);\n    return {\n      ...state,\n      buhinMap: newMap,\n    };\n  })\n  .case(editorActions.loadedStretchParam, (state, [name, param]) => {\n    const newMap = new Map(state.stretchParamMap);\n    newMap.set(name, param);\n    return {\n      ...state,\n      stretchParamMap: newMap,\n    };\n  })\n\n  .case(editorActions.changeStrokeType, (state, newType) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    const newGLine = changeStrokeType(state.glyph[lineIndex], newType);\n    return {\n      ...state,\n      glyph: setGlyphLine(state.glyph, lineIndex, newGLine),\n    };\n  })\n  .case(editorActions.changeHeadShapeType, (state, newType) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    const newGLine = {\n      ...state.glyph[lineIndex],\n      value: state.glyph[lineIndex].value.slice(),\n    };\n    newGLine.value[1] = newType;\n    return {\n      ...state,\n      glyph: setGlyphLine(state.glyph, lineIndex, newGLine),\n    };\n  })\n  .case(editorActions.changeTailShapeType, (state, newType) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    const newGLine = {\n      ...state.glyph[lineIndex],\n      value: state.glyph[lineIndex].value.slice(),\n    };\n    newGLine.value[2] = newType;\n    return {\n      ...state,\n      glyph: setGlyphLine(state.glyph, lineIndex, newGLine),\n    };\n  })\n  .case(editorActions.changeStretchCoeff, (state, value) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    const selectedLine = state.glyph[lineIndex];\n    if (!selectedLine.partName) {\n      return state;\n    }\n    const stretchParam = state.stretchParamMap.get(selectedLine.partName);\n    if (!stretchParam) {\n      return state;\n    }\n    const newGLine = setStretchPositions(\n      state.glyph[lineIndex],\n      calcStretchPositions(stretchParam, value)\n    );\n    return {\n      ...state,\n      glyph: setGlyphLine(state.glyph, lineIndex, newGLine),\n    };\n  })\n\n  .case(editorActions.swapWithPrev, (state) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    if (lineIndex === 0) {\n      return state;\n    }\n    const newGlyph = state.glyph.slice();\n    newGlyph[lineIndex - 1] = state.glyph[lineIndex];\n    newGlyph[lineIndex] = state.glyph[lineIndex - 1];\n    return {\n      ...state,\n      glyph: newGlyph,\n      selection: [lineIndex - 1],\n    };\n  })\n  .case(editorActions.swapWithNext, (state) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    if (lineIndex === state.glyph.length - 1) {\n      return state;\n    }\n    const newGlyph = state.glyph.slice();\n    newGlyph[lineIndex + 1] = state.glyph[lineIndex];\n    newGlyph[lineIndex] = state.glyph[lineIndex + 1];\n    return {\n      ...state,\n      glyph: newGlyph,\n      selection: [lineIndex + 1],\n    };\n  })\n\n  .case(editorActions.insertPart, (state, partName) => ({\n    ...state,\n    glyph: state.glyph.concat([{\n      value: [99, 0, 0, 0, 0, 200, 200, 0, 0, 0],\n      partName,\n    }]),\n    selection: [state.glyph.length],\n  }))\n\n  .case(editorActions.paste, (state) => ({\n    ...state,\n    glyph: state.glyph.concat(state.clipboard),\n    selection: state.clipboard.map((_gLine, index) => state.glyph.length + index),\n  }))\n  .case(editorActions.copy, (state) => {\n    const targetLines = state.selection.map((index) => state.glyph[index]);\n    const [x1, y1] = getGlyphLinesBBX(targetLines);\n    const tX = (x: number) => 230 + x - x1;\n    const tY = (y: number) => 20 + y - y1;\n    return {\n      ...state,\n      clipboard: state.selection.map((index) => (\n        applyGlyphLineOperation(state.glyph[index], tX, tY)\n      )),\n    };\n  })\n  .case(editorActions.cut, (state) => ({\n    ...state,\n    glyph: state.glyph.filter((_gLine, index) => !state.selection.includes(index)),\n    clipboard: state.selection.map((index) => state.glyph[index]),\n    selection: [],\n  }))\n  .case(editorActions.delete, (state) => ({\n    ...state,\n    glyph: state.glyph.filter((_gLine, index) => !state.selection.includes(index)),\n    selection: [],\n  }))\n\n  .case(editorActions.decomposeSelected, (state) => {\n    let newGlyph: Glyph = [];\n    let newSelection: number[] = [];\n    state.glyph.forEach((gLine, index) => {\n      if (!state.selection.includes(index)) {\n        newGlyph.push(gLine);\n        return;\n      }\n      const newLines = decompose(gLine, state.buhinMap);\n      newSelection = newSelection.concat(\n        newLines.map((_gLine, subindex) => newGlyph.length + subindex)\n      );\n      newGlyph = newGlyph.concat(newLines);\n    });\n    return {\n      ...state,\n      glyph: newGlyph,\n      selection: newSelection,\n    };\n  })\n  .case(editorActions.moveSelected, (state, [dx, dy]) => ({\n    ...state,\n    glyph: moveSelectedGlyphLines(state.glyph, state.selection, dx, dy),\n  }))\n\n  .case(editorActions.toggleFreehand, (state) => ({\n    ...state,\n    selection: state.freehandMode ? state.selection : [],\n    freehandMode: !state.freehandMode,\n  }))\n\n  .case(editorActions.escape, (state) => {\n    if (state.showOptionModal) {\n      return {\n        ...state,\n        showOptionModal: false,\n      }\n    }\n    if (state.freehandMode) {\n      return {\n        ...state,\n        freehandMode: false,\n      };\n    }\n    if (state.selection.length) {\n      return {\n        ...state,\n        selection: [],\n      };\n    }\n    return state;\n  })\n\n  .case(editorActions.finishEdit, (state, evt) => ({\n    ...state,\n    exitEvent: evt,\n  }));\n","import actionCreatorFactory from 'typescript-fsa';\n\nimport { KShotai } from '../kage';\n\nconst actionCreator = actionCreatorFactory('DISPLAY');\n\nexport const displayActions = {\n  openOptionModal: actionCreator('OPEN_OPTION_MODAL'),\n  closeOptionModal: actionCreator('CLOSE_OPTION_MODAL'),\n\n  setGridDisplay: actionCreator<boolean>('SET_GRID_DISPLAY'),\n  setGridOriginX: actionCreator<number>('SET_GRID_ORIGIN_X'),\n  setGridOriginY: actionCreator<number>('SET_GRID_ORIGIN_Y'),\n  setGridSpacingX: actionCreator<number>('SET_GRID_SPACING_X'),\n  setGridSpacingY: actionCreator<number>('SET_GRID_SPACING_Y'),\n\n  setShotai: actionCreator<KShotai>('SET_SHOTAI'),\n  setStrokeCenterLineDisplay: actionCreator<boolean>('SET_STROKE_CENTER_LINE_DISPLAY'),\n};\n","import actionCreatorFactory from 'typescript-fsa';\n\nconst actionCreator = actionCreatorFactory('UNDO');\n\nexport const undoActions = {\n  undo: actionCreator('UNDO'),\n  redo: actionCreator('REDO'),\n};\n","import { reducerWithInitialState } from 'typescript-fsa-reducers';\n\nimport { RectPointPosition, CTMInv } from '../actions/drag';\n\nimport { GlyphLine, Glyph, parseGlyph } from '../kageUtils/glyph';\nimport { StretchParam } from '../kageUtils/stretchparam';\nimport args from '../args';\nimport { KShotai } from '../kage';\n\nimport select from './select';\nimport drag from './drag';\nimport editor from './editor';\nimport display, { GridState } from './display';\n\nimport { undoable } from './undo';\n\nexport interface AppState {\n  glyph: Glyph;\n  selection: number[];\n\n  areaSelectRect: [number, number, number, number] | null;\n  dragSelection: [number, number, number, number] | null;\n  dragPoint: [number, [number, number, number, number]] | null;\n  resizeSelection: [RectPointPosition, [number, number, number, number]] | null;\n  freehandStroke: [number, number][] | null;\n  ctmInv: CTMInv | null;\n  freehandMode: boolean;\n\n  buhinMap: Map<string, string>;\n  stretchParamMap: Map<string, StretchParam>;\n  clipboard: GlyphLine[];\n  undoStacks: {\n    undo: Glyph[];\n    redo: Glyph[];\n  };\n  exitEvent: Event | null;\n\n  showOptionModal: boolean;\n  grid: GridState;\n  showStrokeCenterLine: boolean;\n  shotai: KShotai;\n}\n\nconst initialState: AppState = {\n  glyph: parseGlyph(args.data),\n  selection: [],\n\n  areaSelectRect: null,\n  dragSelection: null,\n  dragPoint: null,\n  resizeSelection: null,\n  freehandStroke: null,\n  ctmInv: null,\n  freehandMode: false,\n\n  buhinMap: new Map<string, string>(),\n  stretchParamMap: new Map<string, StretchParam>(),\n  clipboard: [],\n  undoStacks: { undo: [], redo: [] },\n  exitEvent: null,\n\n  showOptionModal: false,\n  grid: {\n    display: true,\n    originX: 0,\n    originY: 0,\n    spacingX: 20,\n    spacingY: 20,\n  },\n  showStrokeCenterLine: false,\n  shotai: 0, // kMincho\n};\n\nconst reducer = undoable(\n  reducerWithInitialState(initialState)\n    .withHandling(select)\n    .withHandling(drag)\n    .withHandling(editor)\n    .withHandling(display)\n);\n\nexport default reducer;\n","import { Reducer } from 'redux';\nimport { reducerWithInitialState } from 'typescript-fsa-reducers';\n\nimport { isGlyphDeepEqual } from '../kageUtils/glyph';\n\nimport { undoActions } from '../actions/undo';\n\nimport { AppState } from '.';\n\nconst UNDO_MAX_TIMES = 30;\n\nconst pushUndo = (oldState: AppState, newState: AppState): AppState => {\n  if (isGlyphDeepEqual(oldState.glyph, newState.glyph)) {\n    return newState;\n  }\n  return {\n    ...newState,\n    undoStacks: {\n      undo: oldState.undoStacks.undo.concat([oldState.glyph]).slice(-UNDO_MAX_TIMES),\n      redo: [],\n    },\n  };\n};\n\nexport const undoable = (reducer: Reducer<AppState>): Reducer<AppState> => {\n  const initialState = reducer(undefined, { type: '_INIT' });\n  return reducerWithInitialState(initialState)\n    .case(undoActions.undo, (state) => {\n      if (state.undoStacks.undo.length === 0) {\n        return state;\n      }\n      return {\n        ...state,\n        glyph: state.undoStacks.undo[state.undoStacks.undo.length - 1],\n        selection: [], // TODO: select changed lines?\n        undoStacks: {\n          undo: state.undoStacks.undo.slice(0, -1),\n          redo: state.undoStacks.redo.concat([state.glyph]),\n        },\n      };\n    })\n    .case(undoActions.redo, (state) => {\n      if (state.undoStacks.redo.length === 0) {\n        return state;\n      }\n      return {\n        ...state,\n        glyph: state.undoStacks.redo[state.undoStacks.redo.length - 1],\n        selection: [], // TODO: select changed lines?\n        undoStacks: {\n          undo: state.undoStacks.undo.concat([state.glyph]),\n          redo: state.undoStacks.redo.slice(0, -1),\n        },\n      };\n    })\n    .default((oldState, action) => {\n      const newState = reducer(oldState, action);\n      if (!oldState) {\n        return newState;\n      }\n      return pushUndo(oldState, newState);\n    });\n};\n","import { ReducerBuilder } from 'typescript-fsa-reducers';\n\nimport { selectActions } from '../actions/select';\n\nimport { AppState } from '.';\n\nexport default (builder: ReducerBuilder<AppState>) => builder\n  .case(selectActions.selectSingle, (state, index) => ({\n    ...state,\n    selection: [index],\n  }))\n  .case(selectActions.selectAddSingle, (state, index) => ({\n    ...state,\n    selection: state.selection.includes(index) ? state.selection : state.selection.concat([index]),\n  }))\n  .case(selectActions.selectRemoveSingle, (state, index) => ({\n    ...state,\n    selection: state.selection.filter((index2) => index !== index2),\n  }))\n  .case(selectActions.selectAll, (state) => ({\n    ...state,\n    selection: state.glyph.map((_gLine, index) => index),\n  }))\n  .case(selectActions.selectDeselected, (state) => ({\n    ...state,\n    selection: state.glyph.map((_gLine, index) => index).filter((index) => !state.selection.includes(index)),\n  }))\n  .case(selectActions.selectNone, (state) => ({\n    ...state,\n    selection: [],\n  }))\n  .case(selectActions.selectPrev, (state) => {\n    if (state.glyph.length === 0) {\n      return { ...state, selection: [] };\n    }\n    const firstSelected = state.selection.length === 0 ? 0 : Math.min(...state.selection);\n    return {\n      ...state,\n      selection: [(firstSelected - 1 + state.glyph.length) % state.glyph.length],\n    };\n  })\n  .case(selectActions.selectNext, (state) => {\n    if (state.glyph.length === 0) {\n      return { ...state, selection: [] };\n    }\n    const firstSelected = state.selection.length === 0 ? -1 : Math.max(...state.selection);\n    return {\n      ...state,\n      selection: [(firstSelected + 1 + state.glyph.length) % state.glyph.length],\n    };\n  });\n","import { ReducerBuilder } from 'typescript-fsa-reducers';\n\n// @ts-ignore\nimport { polygonInPolygon, polygonIntersectsPolygon } from 'geometric';\n\nimport { dragActions } from '../actions/drag';\n\nimport { Glyph } from '../kageUtils/glyph';\nimport { moveSelectedGlyphLines, moveSelectedPoint } from '../kageUtils/transform';\nimport { drawFreehand } from '../kageUtils/freehand';\nimport { makeGlyphSeparated, KShotai } from '../kage';\n\nimport { AppState } from '.';\nimport { resizeSelected } from '../selectors/draggedGlyph';\n\nconst performAreaSelect = (glyph: Glyph, buhinMap: Map<string, string>, shotai: KShotai, x1: number, y1: number, x2: number, y2: number): number[] => {\n  const polygonsSep = makeGlyphSeparated(glyph, buhinMap, shotai);\n  const result = [];\n\n  const gAreaPolygon: [number, number][] = [\n    [x1, y1],\n    [x1, y2],\n    [x2, y2],\n    [x2, y1],\n    [x1, y1],\n  ];\n\n  for (let index = 0; index < polygonsSep.length; index++) {\n    const polygons = polygonsSep[index];\n    if (polygons.array.some((polygon) => {\n      const gPolygon = polygon.array.map(({ x, y }) => [x, y]);\n      gPolygon.push(gPolygon[0]); // close polygon\n\n      return (\n        polygonInPolygon(gAreaPolygon, gPolygon) ||\n        polygonInPolygon(gPolygon, gAreaPolygon) ||\n        polygonIntersectsPolygon(gAreaPolygon, gPolygon)\n      ) as boolean;\n    })) {\n      result.push(index);\n    }\n  }\n  return result;\n};\n\nexport default (builder: ReducerBuilder<AppState>) => builder\n  .case(dragActions.startBackgroundDrag, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    if (state.freehandMode) {\n      return {\n        ...state,\n        freehandStroke: [[x1, y1]],\n      };\n    }\n    return {\n      ...state,\n      areaSelectRect: [x1, y1, x1, y1],\n    };\n  })\n  .case(dragActions.startSelectionDrag, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      dragSelection: [x1, y1, x1, y1],\n    };\n  })\n  .case(dragActions.startPointDrag, (state, [evt, pointIndex]) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      dragPoint: [pointIndex, [x1, y1, x1, y1]],\n    };\n  })\n  .case(dragActions.startResize, (state, [evt, position]) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      resizeSelection: [position, [x1, y1, x1, y1]],\n    };\n  })\n\n  .case(dragActions.mouseMove, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    if (state.areaSelectRect) {\n      const [x1, y1] = state.areaSelectRect;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        areaSelectRect: [x1, y1, x2, y2],\n      };\n    }\n    if (state.dragSelection) {\n      const [x1, y1] = state.dragSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        dragSelection: [x1, y1, x2, y2],\n      };\n    }\n    if (state.dragPoint) {\n      const [pointIndex, [x1, y1]] = state.dragPoint;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        dragPoint: [pointIndex, [x1, y1, x2, y2]],\n      };\n    }\n    if (state.resizeSelection) {\n      const [position, [x1, y1]] = state.resizeSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        resizeSelection: [position, [x1, y1, x2, y2]],\n      };\n    }\n    if (state.freehandStroke) {\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      let freehandStroke = state.freehandStroke.concat([[x2, y2]]);\n      if (freehandStroke.length >= 3) {\n        const [lastX, lastY] = freehandStroke[freehandStroke.length - 2];\n        if (Math.abs(x2 - lastX) < 2 && Math.abs(y2 - lastY) < 2) {\n          freehandStroke.splice(freehandStroke.length - 2, 1);\n        }\n      }\n      return {\n        ...state,\n        freehandStroke,\n      };\n    }\n    return state;\n  })\n  .case(dragActions.mouseUp, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    if (state.areaSelectRect) {\n      const [x1, y1] = state.areaSelectRect;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      const intersections = performAreaSelect(state.glyph, state.buhinMap, state.shotai, x1, y1, x2, y2);\n\n      const newSelection = Array.from(new Set(state.selection.concat(intersections)));\n      return {\n        ...state,\n        selection: newSelection,\n        areaSelectRect: null,\n      };\n    }\n    if (state.dragSelection) {\n      const [x1, y1] = state.dragSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n\n      const newGlyph = moveSelectedGlyphLines(state.glyph, state.selection, x2 - x1, y2 - y1);\n      return {\n        ...state,\n        glyph: newGlyph,\n        dragSelection: null,\n      };\n    }\n    if (state.dragPoint) {\n      const [pointIndex, [x1, y1]] = state.dragPoint;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n\n      const newGlyph = moveSelectedPoint(state.glyph, state.selection, pointIndex, x2 - x1, y2 - y1);\n      return {\n        ...state,\n        glyph: newGlyph,\n        dragPoint: null,\n      };\n    }\n    if (state.resizeSelection) {\n      const [position, [x1, y1]] = state.resizeSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n\n      const newGlyph = resizeSelected(state.glyph, state.selection, position, x2 - x1, y2 - y1);\n      return {\n        ...state,\n        glyph: newGlyph,\n        resizeSelection: null,\n      };\n    }\n    if (state.freehandStroke) {\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      const freehandStroke = state.freehandStroke.concat([[x2, y2]]);\n\n      const newGlyph = drawFreehand(state.glyph, freehandStroke);\n      return {\n        ...state,\n        glyph: newGlyph,\n        freehandStroke: null,\n      };\n    }\n    return state;\n  })\n\n  .case(dragActions.updateCTMInv, (state, ctmInv) => ({\n    ...state,\n    ctmInv,\n  }));\n","import { ReducerBuilder } from 'typescript-fsa-reducers';\n\nimport { displayActions } from '../actions/display';\n\nimport { AppState } from '.';\n\nexport interface GridState {\n  display: boolean;\n  originX: number;\n  originY: number;\n  spacingX: number;\n  spacingY: number;\n}\n\nexport default (builder: ReducerBuilder<AppState>) => builder\n  .case(displayActions.openOptionModal, (state) => ({\n    ...state,\n    showOptionModal: true,\n  }))\n  .case(displayActions.closeOptionModal, (state) => ({\n    ...state,\n    showOptionModal: false,\n  }))\n\n  .case(displayActions.setGridDisplay, (state, value) => ({\n    ...state,\n    grid: {\n      ...state.grid,\n      display: value,\n    },\n  }))\n  .case(displayActions.setGridOriginX, (state, value) => ({\n    ...state,\n    grid: {\n      ...state.grid,\n      originX: value,\n    },\n  }))\n  .case(displayActions.setGridOriginY, (state, value) => ({\n    ...state,\n    grid: {\n      ...state.grid,\n      originY: value,\n    },\n  }))\n  .case(displayActions.setGridSpacingX, (state, value) => ({\n    ...state,\n    grid: {\n      ...state.grid,\n      spacingX: value,\n    },\n  }))\n  .case(displayActions.setGridSpacingY, (state, value) => ({\n    ...state,\n    grid: {\n      ...state.grid,\n      spacingY: value,\n    },\n  }))\n\n  .case(displayActions.setStrokeCenterLineDisplay, (state, value) => ({\n    ...state,\n    showStrokeCenterLine: value,\n  }))\n  .case(displayActions.setShotai, (state, shotai) => ({\n    ...state,\n    shotai,\n  }));\n","import { createStore } from 'redux';\n\nimport reducer from './reducers';\n\nconst store = createStore(reducer);\n\nexport default store;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { AppState } from '../reducers';\n\nimport './Grid.css';\n\nconst Grid = () => {\n  const grid = useSelector((state: AppState) => state.grid);\n  if (!grid.display) {\n    return <></>;\n  }\n  const xs = [];\n  for (let x = grid.originX; x < 200; x += grid.spacingX) {\n    xs.push(x);\n  }\n  const ys = [];\n  for (let y = grid.originY; y < 200; y += grid.spacingY) {\n    ys.push(y);\n  }\n  return (\n    <g className=\"grid-lines\">\n      {xs.map((x) => (\n        <path\n          key={x}\n          d={`M ${x} 0 V 200`}\n        />\n      ))}\n      {ys.map((y) => (\n        <path\n          key={y}\n          d={`M 0 ${y} H 200`}\n        />\n      ))}\n    </g>\n  );\n};\n\nexport default Grid;","import React from 'react';\n\nimport { Polygons } from '@kurgm/kage-engine';\n\nexport interface StrokeComponentProps {\n  polygons: Polygons;\n}\n\nconst StrokeComponent = (props: StrokeComponentProps) => (\n  <>\n    {props.polygons.array.map((polygon, i) => (\n      <polygon key={i} points={polygon.array.map(({ x, y }) => `${x},${y} `).join(\"\")} />\n    ))}\n  </>\n);\n\nexport default StrokeComponent;\n","import React from 'react';\n\nimport { Glyph } from '../kageUtils/glyph';\nimport { makeGlyphSeparated, KShotai } from '../kage';\n\nimport Stroke from './Stroke';\n\nimport './Glyph.css'\n\nexport interface GlyphComponentProps {\n  glyph: Glyph;\n  buhinMap: Map<string, string>;\n  selection: number[];\n  shotai: KShotai;\n  handleMouseDownDeselectedStroke?: (evt: React.MouseEvent, index: number) => void;\n  handleMouseDownSelectedStroke?: (evt: React.MouseEvent, index: number) => void;\n  makeGlyphSeparated?: typeof makeGlyphSeparated;\n}\n\nconst GlyphComponent = (props: GlyphComponentProps) => {\n  const polygonsSep = (props.makeGlyphSeparated || makeGlyphSeparated)(props.glyph, props.buhinMap, props.shotai);\n\n  const { selection } = props;\n  const nonSelection = polygonsSep.map((_polygons, index) => index)\n    .filter((index) => !selection.includes(index));\n\n  return (\n    <>\n      <g className=\"strokes-deselected\">\n        {nonSelection.map((index) => (\n          <g key={index} onMouseDown={(evt) => props.handleMouseDownDeselectedStroke?.(evt, index)}>\n            <Stroke polygons={polygonsSep[index]} />\n          </g>\n        ))}\n      </g>\n      <g className=\"strokes-selected\">\n        {selection.map((index) => (\n          <g key={index} onMouseDown={(evt) => props.handleMouseDownSelectedStroke?.(evt, index)}>\n            <Stroke polygons={polygonsSep[index]} />\n          </g>\n        ))}\n      </g>\n    </>\n  );\n};\n\nexport default GlyphComponent;\n","import React from 'react';\n\nimport { decomposeDeepGlyph } from '../kageUtils/decompose';\nimport { Glyph } from '../kageUtils/glyph';\n\nimport './StrokeCenterLine.css';\n\nexport interface StrokeCenterLineProps {\n  glyph: Glyph;\n  buhinMap: Map<string, string>;\n}\n\nconst StrokeCenterLine = (props: StrokeCenterLineProps) => {\n  const strokes = decomposeDeepGlyph(props.glyph, props.buhinMap);\n  return (\n    <g className=\"stroke-center-line\">\n      {strokes.map((stroke, index) => {\n        const v = stroke.value;\n        switch (v[0]) {\n          case 1:\n            return <path key={index} d={`M ${v[3]} ${v[4]} ${v[5]} ${v[6]}`} />\n          case 2:\n            return <path key={index} d={`M ${v[3]} ${v[4]} Q ${v[5]} ${v[6]} ${v[7]} ${v[8]}`} />\n          case 3:\n          case 4:\n            return <path key={index} d={`M ${v[3]} ${v[4]} ${v[5]} ${v[6]} ${v[7]} ${v[8]}`} />\n          case 6:\n            return <path key={index} d={`M ${v[3]} ${v[4]} C ${v[5]} ${v[6]} ${v[7]} ${v[8]} ${v[9]} ${v[10]}`} />\n          case 7:\n            return <path key={index} d={`M ${v[3]} ${v[4]} ${v[5]} ${v[6]} Q ${v[7]} ${v[8]} ${v[9]} ${v[10]}`} />\n          default:\n            return null;\n        }\n      })}\n    </g>\n  )\n}\n\nexport default StrokeCenterLine;\n","import React from 'react';\n\nimport './ControlPoint.css';\n\ninterface ControlPointProps {\n  x: number;\n  y: number;\n  className?: string;\n  handleMouseDown: (evt: React.MouseEvent) => void;\n}\n\nconst ControlPoint = (props: ControlPointProps) => (\n  <rect\n    x={props.x - 4}\n    y={props.y - 4}\n    width={8} height={8}\n    className={`controlpoint-rect ${props.className || ''}`}\n    onMouseDown={props.handleMouseDown}\n  />\n);\n\nexport default ControlPoint;\n","import React, { useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { createSelector } from 'reselect';\n\nimport { dragActions, RectPointPosition } from '../actions/drag';\nimport { AppState } from '../reducers';\nimport { draggedGlyphSelector } from '../selectors/draggedGlyph';\nimport { getGlyphLinesBBX } from '../kageUtils/bbx';\nimport { getMatchType, MatchType } from '../kageUtils/match';\n\nimport ControlPoint from './ControlPoint';\n\nimport './SelectionControl.css';\n\ninterface RectControl {\n  multiSelect: boolean;\n  coords: [number, number, number, number];\n}\ninterface ControlPoint {\n  x: number;\n  y: number;\n  className: string;\n}\n\ninterface SelectionControlSpec {\n  rectControl: RectControl | null;\n  pointControl: ControlPoint[];\n}\n\nconst selectionControlSelector = createSelector(\n  [\n    draggedGlyphSelector,\n    (state: AppState) => state.selection,\n  ],\n  (glyph, selection): SelectionControlSpec => {\n    if (selection.length === 0) {\n      return { rectControl: null, pointControl: [] };\n    }\n    if (selection.length > 1) {\n      const selectedStrokes = selection.map((index) => glyph[index]);\n      const bbx = getGlyphLinesBBX(selectedStrokes);\n      return {\n        rectControl: {\n          multiSelect: true,\n          coords: bbx,\n        },\n        pointControl: [],\n      };\n    }\n    const selectedStroke = glyph[selection[0]];\n    switch (selectedStroke.value[0]) {\n      case 0:\n      case 9:\n      case 99:\n        return {\n          rectControl: {\n            multiSelect: false,\n            coords: [\n              selectedStroke.value[3],\n              selectedStroke.value[4],\n              selectedStroke.value[5],\n              selectedStroke.value[6],\n            ],\n          },\n          pointControl: [],\n        };\n      case 1:\n      case 2:\n      case 3:\n      case 4:\n      case 6:\n      case 7: {\n        const pointControl: ControlPoint[] = [];\n        for (let i = 3; i + 2 <= selectedStroke.value.length; i += 2) {\n          const matchType = getMatchType(glyph, {\n            lineIndex: selection[0],\n            pointIndex: (i - 3) / 2,\n          });\n          let className = '';\n          if (matchType === MatchType.match) {\n              className = 'match';\n          } else if (matchType === MatchType.online) {\n              className = 'online';\n          }\n\n          pointControl.push({\n            x: selectedStroke.value[i],\n            y: selectedStroke.value[i + 1],\n            className,\n          });\n        }\n        return { rectControl: null, pointControl };\n      }\n      default:\n        return { rectControl: null, pointControl: [] };\n    }\n  }\n);\n\nconst SelectionControl = () => {\n  const { rectControl, pointControl } = useSelector(selectionControlSelector);\n\n  const dispatch = useDispatch();\n  const handleMouseDownRectControl = useCallback((evt: React.MouseEvent, position: RectPointPosition) => {\n    dispatch(dragActions.startResize([evt, position]));\n    evt.stopPropagation();\n  }, [dispatch]);\n\n  const handleMouseDownNorthPoint = useCallback(\n    (evt: React.MouseEvent) => handleMouseDownRectControl(evt, RectPointPosition.north),\n    [handleMouseDownRectControl]\n  );\n  const handleMouseDownWestPoint = useCallback(\n    (evt: React.MouseEvent) => handleMouseDownRectControl(evt, RectPointPosition.west),\n    [handleMouseDownRectControl]\n  );\n  const handleMouseDownSouthPoint = useCallback(\n    (evt: React.MouseEvent) => handleMouseDownRectControl(evt, RectPointPosition.south),\n    [handleMouseDownRectControl]\n  );\n  const handleMouseDownEastPoint = useCallback(\n    (evt: React.MouseEvent) => handleMouseDownRectControl(evt, RectPointPosition.east),\n    [handleMouseDownRectControl]\n  );\n  const handleMouseDownSoutheastPoint = useCallback(\n    (evt: React.MouseEvent) => handleMouseDownRectControl(evt, RectPointPosition.southeast),\n    [handleMouseDownRectControl]\n  );\n\n  const handleMouseDownPointControls = useMemo(() => {\n    return pointControl.map((_control, pointIndex) => (evt: React.MouseEvent) => {\n      dispatch(dragActions.startPointDrag([evt, pointIndex]));\n      evt.stopPropagation();\n    });\n  }, [dispatch, pointControl]);\n\n  return <>\n    {rectControl && <>\n      <rect\n        className='selection-rect'\n        x={rectControl.coords[0]}\n        y={rectControl.coords[1]}\n        width={rectControl.coords[2] - rectControl.coords[0]}\n        height={rectControl.coords[3] - rectControl.coords[1]}\n      />\n      <ControlPoint\n        x={(rectControl.coords[0] + rectControl.coords[2]) / 2}\n        y={rectControl.coords[1]}\n        className='north'\n        handleMouseDown={handleMouseDownNorthPoint}\n      />\n      <ControlPoint\n        x={rectControl.coords[0]}\n        y={(rectControl.coords[1] + rectControl.coords[3]) / 2}\n        className='west'\n        handleMouseDown={handleMouseDownWestPoint}\n      />\n      <ControlPoint\n        x={(rectControl.coords[0] + rectControl.coords[2]) / 2}\n        y={rectControl.coords[3]}\n        className='south'\n        handleMouseDown={handleMouseDownSouthPoint}\n      />\n      <ControlPoint\n        x={rectControl.coords[2]}\n        y={(rectControl.coords[1] + rectControl.coords[3]) / 2}\n        className='east'\n        handleMouseDown={handleMouseDownEastPoint}\n      />\n      <ControlPoint\n        x={rectControl.coords[2]}\n        y={rectControl.coords[3]}\n        className='southeast'\n        handleMouseDown={handleMouseDownSoutheastPoint}\n      />\n    </>}\n    {pointControl.map(({ x, y, className }, index) => (\n      <ControlPoint\n        key={index}\n        x={x} y={y}\n        className={className}\n        handleMouseDown={handleMouseDownPointControls[index]}\n      />\n    ))}\n  </>;\n};\n\nexport default SelectionControl;","import React from 'react';\n\nimport './AreaSelectRect.css';\n\ninterface AreaSelectRectProps {\n  rect: [number, number, number, number] | null;\n}\n\nconst AreaSelectRect = (props: AreaSelectRectProps) => {\n  if (!props.rect) {\n    return null;\n  }\n  let [x1, y1, x2, y2] = props.rect;\n  if (x1 > x2) {\n    // swap\n    const temp = x1;\n    x1 = x2;\n    x2 = temp;\n  }\n  if (y1 > y2) {\n    // swap\n    const temp = y1;\n    y1 = y2;\n    y2 = temp;\n  }\n\n  return <rect className='areaselect-rect' x={x1} y={y1} width={x2 - x1} height={y2 - y1} />;\n};\n\nexport default AreaSelectRect;\n","import React, { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { AppState } from '../reducers';\n\nimport { selectActions } from '../actions/select';\nimport { dragActions, CTMInv } from '../actions/drag';\nimport { draggedGlyphSelector } from '../selectors/draggedGlyph';\n\nimport Grid from './Grid';\nimport Glyph from './Glyph';\nimport StrokeCenterLine from './StrokeCenterLine';\nimport SelectionControl from './SelectionControl';\nimport AreaSelectRect from './AreaSelectRect';\n\nimport './GlyphArea.css';\n\nconst GlyphArea = () => {\n  const glyph = useSelector(draggedGlyphSelector);\n  const buhinMap = useSelector((state: AppState) => state.buhinMap);\n  const shotai = useSelector((state: AppState) => state.shotai);\n  const selection = useSelector((state: AppState) => state.selection);\n  const areaSelectRect = useSelector((state: AppState) => state.areaSelectRect);\n  const freehandMode = useSelector((state: AppState) => state.freehandMode);\n  const showStrokeCenterLine = useSelector((state: AppState) => state.showStrokeCenterLine);\n\n  const svgClassName = freehandMode ? 'freehand' : '';\n\n  const dispatch = useDispatch();\n  const handleMouseDownCapture = useCallback((evt: React.MouseEvent<SVGSVGElement>) => {\n    const ctm = evt.currentTarget.getScreenCTM();\n    if (!ctm) {\n      return;\n    }\n    const pt = evt.currentTarget.createSVGPoint();\n    const ictm = ctm.inverse();\n    const ctmInv: CTMInv = (evtx, evty) => {\n      pt.x = evtx;\n      pt.y = evty;\n      const { x, y } = pt.matrixTransform(ictm);\n      return [x, y];\n    };\n    dispatch(dragActions.updateCTMInv(ctmInv));\n  }, [dispatch]);\n\n  const handleMouseDownBackground = useCallback((evt: React.MouseEvent) => {\n    if (!(evt.shiftKey || evt.ctrlKey)) {\n      dispatch(selectActions.selectNone());\n    }\n    dispatch(dragActions.startBackgroundDrag(evt));\n  }, [dispatch]);\n  const handleMouseDownDeselectedStroke = useCallback((evt: React.MouseEvent, index: number) => {\n    if (evt.shiftKey || evt.ctrlKey) {\n      dispatch(selectActions.selectAddSingle(index));\n    } else {\n      dispatch(selectActions.selectSingle(index));\n    }\n    dispatch(dragActions.startSelectionDrag(evt));\n    evt.stopPropagation();\n  }, [dispatch]);\n  const handleMouseDownSelectedStroke = useCallback((evt: React.MouseEvent, index: number) => {\n    if (evt.shiftKey || evt.ctrlKey) {\n      dispatch(selectActions.selectRemoveSingle(index));\n    }\n    dispatch(dragActions.startSelectionDrag(evt));\n    evt.stopPropagation();\n  }, [dispatch]);\n\n  useEffect(() => {\n    const handleMouseMove = (evt: MouseEvent) => {\n      dispatch(dragActions.mouseMove(evt));\n    };\n    const handleMouseUp = (evt: MouseEvent) => {\n      dispatch(dragActions.mouseUp(evt));\n    };\n    document.addEventListener('mousemove', handleMouseMove)\n    document.addEventListener('mouseup', handleMouseUp);\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [dispatch]);\n\n  return (\n    <div className=\"glyph-area\">\n      <svg\n        width=\"100%\" height=\"100%\" viewBox=\"-20 -20 500 240\"\n        className={svgClassName}\n        onMouseDownCapture={handleMouseDownCapture}\n        onMouseDown={handleMouseDownBackground}\n      >\n        <Grid />\n        <rect x=\"0\" y=\"0\" width=\"200\" height=\"200\" className=\"glyph-boundary\" />\n        <rect x=\"12\" y=\"12\" width=\"176\" height=\"176\" className=\"glyph-guide\" />\n        <Glyph\n          glyph={glyph}\n          buhinMap={buhinMap}\n          shotai={shotai}\n          selection={selection}\n          handleMouseDownDeselectedStroke={handleMouseDownDeselectedStroke}\n          handleMouseDownSelectedStroke={handleMouseDownSelectedStroke}\n        />\n        {showStrokeCenterLine && <StrokeCenterLine glyph={glyph} buhinMap={buhinMap} />}\n        <SelectionControl />\n        <AreaSelectRect rect={areaSelectRect} />\n      </svg>\n    </div>\n  );\n};\n\nexport default GlyphArea;\n","import React, { useCallback } from 'react';\n\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { useTranslation } from 'react-i18next';\n\nimport { editorActions } from '../actions/editor';\nimport { selectActions } from '../actions/select';\nimport { AppState } from '../reducers';\nimport { GlyphLine } from '../kageUtils/glyph';\nimport { calcStretchScalar, getStretchPositions } from '../kageUtils/stretchparam';\nimport { strokeTypes, headShapeTypes, tailShapeTypes, isValidStrokeShapeTypes } from '../kageUtils/stroketype';\nimport { draggedGlyphSelector } from '../selectors/draggedGlyph';\n\nimport './SelectionInfo.css'\n\n\nconst selectedGlyphLineSelector = createSelector([\n  (state: AppState) => state.selection,\n  draggedGlyphSelector,\n], (selection, draggedGlyph): GlyphLine | null => {\n  if (selection.length !== 1) {\n    return null;\n  }\n  return draggedGlyph[selection[0]];\n});\n\ninterface StrokeInfo {\n  strokeType: number;\n  headShapeType: number;\n  tailShapeType: number;\n  validTypes: boolean;\n  coordString: string;\n}\nconst strokeInfoSelector = createSelector([\n  selectedGlyphLineSelector\n], (selectedStroke): StrokeInfo | null => {\n  if (!selectedStroke) {\n    return null;\n  }\n  if (!strokeTypes.includes(selectedStroke.value[0])) {\n    return null;\n  }\n\n  const points = [];\n  for (let i = 3; i + 2 <= selectedStroke.value.length; i += 2) {\n    points.push(`(${selectedStroke.value[i]},${selectedStroke.value[i + 1]})`);\n  }\n  return {\n    strokeType: selectedStroke.value[0],\n    headShapeType: selectedStroke.value[1],\n    tailShapeType: selectedStroke.value[2],\n    validTypes: isValidStrokeShapeTypes(selectedStroke),\n    coordString: points.join(' → '),\n  };\n});\n\ninterface PartInfo {\n  partName: string;\n  entityName: string | null;\n  coordString: string;\n  stretchCoeff: number | null;\n}\nconst partInfoSelector = createSelector([\n  selectedGlyphLineSelector,\n  (state: AppState) => state.buhinMap,\n  (state: AppState) => state.stretchParamMap,\n], (selectedStroke, buhinMap, stretchParamMap): PartInfo | null => {\n  if (!selectedStroke) {\n    return null;\n  }\n  if (selectedStroke.value[0] !== 99) {\n    return null;\n  }\n  const partName = selectedStroke.partName!;\n  const buhinSource = buhinMap.get(partName);\n  let entityName: string | null = null;\n  if (buhinSource) {\n    const aliasMatch = /^(?:0:1:0:[^$]+\\$)?99:0:0:0:0:200:200:([^$]+)$/.exec(buhinSource);\n    if (aliasMatch) {\n      entityName = aliasMatch[1];\n    }\n  }\n  const stretchParam = stretchParamMap.get(partName);\n  const stretchCoeff = stretchParam\n    ? calcStretchScalar(stretchParam, getStretchPositions(selectedStroke)!)\n    : null;\n\n  return {\n    partName,\n    entityName,\n    coordString: `(${selectedStroke.value[3]},${selectedStroke.value[4]}) → (${selectedStroke.value[5]},${selectedStroke.value[6]})`,\n    stretchCoeff,\n  };\n});\n\ninterface OtherInfo {\n  isMultiple: boolean;\n  coordString?: string;\n}\nconst otherInfoSelector = createSelector([\n  (state: AppState) => state.selection,\n  selectedGlyphLineSelector,\n], (selection, selectedStroke_): OtherInfo | null => {\n  if (selection.length > 1) {\n    return { isMultiple: true };\n  }\n  if (selection.length === 0) {\n    return { isMultiple: false };\n  }\n  const selectedStroke = selectedStroke_!;\n  const strokeType = selectedStroke.value[0];\n  if (strokeTypes.includes(strokeType) || strokeType === 99) {\n    return null;\n  }\n\n  const points = [];\n  for (let i = 3; i + 2 <= selectedStroke.value.length; i += 2) {\n    points.push(`(${selectedStroke.value[i]},${selectedStroke.value[i + 1]})`);\n  }\n  return { isMultiple: false, coordString: points.join(' → ') };\n});\n\nconst selectIndexStringSelector = createSelector([\n  (state: AppState) => state.glyph.length,\n  (state: AppState) => state.selection,\n], (glyphLength, selection) => {\n  const selectedIndexString = selection\n    .map((index) => index + 1)\n    .sort((a, b) => a - b).join(',');\n  return `${selectedIndexString || '-'} / ${glyphLength || '-'}`;\n});\n\nconst buttonsDisabledSelector = createSelector([\n  (state: AppState) => state.glyph.length,\n  (state: AppState) => state.selection,\n], (glyphLength, selection) => ({\n  swapPrevDisabled: selection.length !== 1 || selection[0] === 0,\n  swapNextDisabled: selection.length !== 1 || selection[0] === glyphLength - 1,\n  selectPrevDisabled: glyphLength === 0,\n  selectNextDisabled: glyphLength === 0,\n}));\n\nconst SelectionInfo = () => {\n\n  const strokeInfo = useSelector(strokeInfoSelector);\n  const partInfo = useSelector(partInfoSelector);\n  const otherInfo = useSelector(otherInfoSelector);\n\n  const selectIndexString = useSelector(selectIndexStringSelector);\n\n  const {\n    swapPrevDisabled, swapNextDisabled,\n    selectPrevDisabled, selectNextDisabled,\n  } = useSelector(buttonsDisabledSelector, shallowEqual);\n\n  const dispatch = useDispatch();\n  const changeStrokeType = useCallback((evt: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(editorActions.changeStrokeType(+evt.currentTarget.value));\n  }, [dispatch]);\n  const changeHeadShapeType = useCallback((evt: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(editorActions.changeHeadShapeType(+evt.currentTarget.value));\n  }, [dispatch]);\n  const changeTailShapeType = useCallback((evt: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(editorActions.changeTailShapeType(+evt.currentTarget.value));\n  }, [dispatch]);\n  const changeStretchCoeff = useCallback((evt: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(editorActions.changeStretchCoeff(+evt.currentTarget.value));\n  }, [dispatch]);\n  const selectPrev = useCallback(() => {\n    dispatch(selectActions.selectPrev());\n  }, [dispatch]);\n  const selectNext = useCallback(() => {\n    dispatch(selectActions.selectNext());\n  }, [dispatch]);\n  const swapWithPrev = useCallback(() => {\n    dispatch(editorActions.swapWithPrev());\n  }, [dispatch]);\n  const swapWithNext = useCallback(() => {\n    dispatch(editorActions.swapWithNext());\n  }, [dispatch]);\n\n  const { t } = useTranslation();\n  return (\n    <div className=\"select-control\">\n      <div className=\"selected-info\">\n        {strokeInfo && <>\n          <div>\n            {t('stroke type')}\n            <select value={strokeInfo.strokeType} onChange={changeStrokeType}>\n              {strokeTypes.map((strokeType) => (\n                <option key={strokeType} value={strokeType}>\n                  {t(`stroke type ${strokeType}`)}\n                </option>\n              ))}\n            </select>\n            {' '}\n            {t('head type')}\n            <select value={strokeInfo.headShapeType} onChange={changeHeadShapeType}>\n              {headShapeTypes[strokeInfo.strokeType].map((headShapeType) => (\n                <option key={headShapeType} value={headShapeType}>\n                  {t(`head type ${strokeInfo.strokeType}-${headShapeType}`)}\n                </option>\n              ))}\n            </select>\n            {' '}\n            {t('tail type')}\n            <select value={strokeInfo.tailShapeType} onChange={changeTailShapeType}>\n              {tailShapeTypes[strokeInfo.strokeType].map((tailShapeType) => (\n                <option key={tailShapeType} value={tailShapeType}>\n                  {t(`tail type ${strokeInfo.strokeType}-${tailShapeType}`)}\n                </option>\n              ))}\n            </select>\n            {' '}\n            {!strokeInfo.validTypes && (\n              <span className=\"alert\">\n                {t('invalid stroke shape types')}\n              </span>\n            )}\n          </div>\n          <div>{strokeInfo.coordString}</div>\n        </>}\n        {partInfo && <>\n          <div>\n            {t('part')}\n            {' '}\n            <strong>{partInfo.partName}</strong>\n            {' '}\n            {partInfo.entityName && t('alias of', { entity: partInfo.entityName })}\n          </div>\n          <div>{partInfo.coordString}</div>\n          {partInfo.stretchCoeff !== null && (\n            <div>\n              {t('stretch')}\n              {' '}\n              <input\n                type=\"range\" min={-10} max={10}\n                value={partInfo.stretchCoeff}\n                onChange={changeStretchCoeff}\n              />\n              {' '}\n              {partInfo.stretchCoeff}\n            </div>\n          )}\n        </>}\n        {otherInfo && <>\n          {otherInfo.isMultiple && <div>{t('selecting multiple strokes')}</div>}\n          {otherInfo.coordString && <div>{otherInfo.coordString}</div>}\n        </>}\n      </div>\n      <div className=\"selection-control\">\n        <button\n          disabled={swapPrevDisabled}\n          onClick={swapWithPrev}\n        >\n          {t('swap with prev')}\n        </button>\n        <button\n          className=\"select-prevnext-button\"\n          disabled={selectPrevDisabled}\n          onClick={selectPrev}\n        >\n          {t('select prev')}\n        </button>\n        <div className=\"selection-num\">\n          {selectIndexString}\n        </div>\n        <button\n          className=\"select-prevnext-button\"\n          disabled={selectNextDisabled}\n          onClick={selectNext}\n        >\n          {t('select next')}\n        </button>\n        <button\n          disabled={swapNextDisabled}\n          onClick={swapWithNext}\n        >\n          {t('swap with next')}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default SelectionInfo;\n","import { createSelector } from 'reselect';\n\nimport { Glyph } from '../kageUtils/glyph';\nimport { getGlyphLineBBX } from '../kageUtils/bbx';\n\nimport { draggedGlyphSelector } from './draggedGlyph';\n\nexport const submitGlyphSelector = createSelector([\n  draggedGlyphSelector,\n], (glyph: Glyph): Glyph => {\n  return glyph.filter((glyphLine) => getGlyphLineBBX(glyphLine)[0] < 200);\n});\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { submitGlyphSelector } from '../selectors/submitGlyph';\nimport { AppState } from '../reducers';\nimport { makeGlyphSeparatedForSubmit } from '../kage';\n\nimport GlyphComponent from './Glyph';\n\nconst SubmitPreview = () => {\n  const submitGlyph = useSelector(submitGlyphSelector);\n  const buhinMap = useSelector((state: AppState) => state.buhinMap);\n  const shotai = useSelector((state: AppState) => state.shotai);\n\n  return (\n    <svg className=\"preview-thumbnail\" viewBox=\"0 0 200 200\" width=\"50\" height=\"50\">\n      <GlyphComponent\n        buhinMap={buhinMap}\n        glyph={submitGlyph}\n        shotai={shotai}\n        selection={[]}\n        makeGlyphSeparated={makeGlyphSeparatedForSubmit}\n      />\n    </svg>\n  );\n};\n\nexport default SubmitPreview;\n","import React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { useTranslation } from 'react-i18next';\n\nimport { AppState } from '../reducers';\nimport { editorActions } from '../actions/editor';\nimport { selectActions } from '../actions/select';\nimport { undoActions } from '../actions/undo';\nimport { displayActions } from '../actions/display';\n\nimport SelectionInfo from './SelectionInfo';\nimport SubmitPreview from './SubmitPreview';\n\nimport './EditorControls.css';\n\nconst EditorControls = () => {\n  const glyph = useSelector((state: AppState) => state.glyph);\n  const selection = useSelector((state: AppState) => state.selection);\n  const clipboard = useSelector((state: AppState) => state.clipboard);\n  const freehandMode = useSelector((state: AppState) => state.freehandMode);\n  const undoLength = useSelector((state: AppState) => state.undoStacks.undo.length);\n  const redoLength = useSelector((state: AppState) => state.undoStacks.redo.length);\n\n  const undoDisabled = undoLength === 0;\n  const redoDisabled = redoLength === 0;\n  const pasteDisabled = clipboard.length === 0;\n  const decomposeDisabled = !selection.some((index) => glyph[index].value[0] === 99);\n\n  const dispatch = useDispatch();\n  const undo = useCallback(() => {\n    dispatch(undoActions.undo());\n  }, [dispatch]);\n  const redo = useCallback(() => {\n    dispatch(undoActions.redo());\n  }, [dispatch]);\n  const selectAll = useCallback(() => {\n    dispatch(selectActions.selectAll());\n  }, [dispatch]);\n  const selectDeselected = useCallback(() => {\n    dispatch(selectActions.selectDeselected());\n  }, [dispatch]);\n  const copy = useCallback(() => {\n    dispatch(editorActions.copy());\n  }, [dispatch]);\n  const paste = useCallback(() => {\n    dispatch(editorActions.paste());\n  }, [dispatch]);\n  const cut = useCallback(() => {\n    dispatch(editorActions.cut());\n  }, [dispatch]);\n  const toggleFreehand = useCallback(() => {\n    dispatch(editorActions.toggleFreehand());\n  }, [dispatch]);\n  const decompose = useCallback(() => {\n    dispatch(editorActions.decomposeSelected());\n  }, [dispatch]);\n  const options = useCallback(() => {\n    dispatch(displayActions.openOptionModal());\n  }, [dispatch]);\n  const finishEdit = useCallback((evt: React.MouseEvent) => {\n    dispatch(editorActions.finishEdit(evt.nativeEvent));\n  }, [dispatch]);\n\n  const { t } = useTranslation();\n  return (\n    <div className=\"editor-controls\">\n      <SelectionInfo />\n      <div className=\"control-buttons\">\n        <button\n          disabled={undoDisabled}\n          onClick={undo}\n        >\n          {t('undo')}\n        </button>\n        <button\n          disabled={redoDisabled}\n          onClick={redo}\n        >\n          {t('redo')}\n        </button>\n        <button\n          disabled={glyph.length === 0}\n          onClick={selectAll}\n        >\n          {t('select all')}\n        </button>\n        <button\n          disabled={glyph.length === 0}\n          onClick={selectDeselected}\n        >\n          {t('invert selection')}\n        </button>\n        <button\n          disabled={selection.length === 0}\n          onClick={copy}\n        >\n          {t('copy')}\n        </button>\n        <button\n          disabled={pasteDisabled}\n          onClick={paste}\n        >\n          {t('paste')}\n        </button>\n        <button\n          disabled={selection.length === 0}\n          onClick={cut}\n        >\n          {t('cut')}\n        </button>\n        <button\n          onClick={toggleFreehand}\n        >\n          {freehandMode ? t('end freehand') : t('start freehand')}\n        </button>\n        <button\n          disabled={decomposeDisabled}\n          onClick={decompose}\n        >\n          {t('decompose')}\n        </button>\n        <button\n          onClick={options}\n        >\n          {t('options')}\n        </button>\n      </div>\n      <div className=\"preview\">\n        <SubmitPreview />\n        <button onClick={finishEdit}>\n          {t('finish edit')}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default EditorControls;\n","import React, { useCallback } from 'react';\n\nimport './PartsList.css';\n\nconst getImageURL = (name: string) => (\n  `https://glyphwiki.org/glyph/${name}.50px.png`\n);\n\ninterface PartsListProps {\n  names: string[];\n  handleItemClick: (partName: string, evt: React.MouseEvent<HTMLImageElement>) => void;\n  handleItemMouseEnter: (partName: string, evt: React.MouseEvent<HTMLImageElement>) => void;\n}\n\nconst PartsList = (props: PartsListProps) => {\n  const { handleItemClick, handleItemMouseEnter } = props;\n  const handleImageClick = useCallback((evt: React.MouseEvent<HTMLImageElement>) => {\n    const partName = evt.currentTarget.dataset.name!;\n    handleItemClick(partName, evt);\n  }, [handleItemClick]);\n  const handleImageMouseEnter = useCallback((evt: React.MouseEvent<HTMLImageElement>) => {\n    const partName = evt.currentTarget.dataset.name!;\n    handleItemMouseEnter(partName, evt);\n  }, [handleItemMouseEnter]);\n\n  return (\n    <div className=\"parts-list\">\n      {props.names.map((name) => (\n        <img\n          key={name} alt={name} title={name}\n          data-name={name}\n          src={getImageURL(name)}\n          width={50} height={50}\n          onClick={handleImageClick}\n          onMouseEnter={handleImageMouseEnter}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default PartsList;\n","import React, { useRef, useCallback, useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { useTranslation } from 'react-i18next';\n\nimport { editorActions } from '../actions/editor';\nimport { search } from '../callapi';\nimport args from '../args';\n\nimport PartsList from './PartsList';\n\nimport './PartsSearch.css';\n\nconst searchSuggestions = [\n  'エディタ部品1',\n  'エディタ部品2',\n  'エディタ部品3',\n  'エディタ部品4',\n];\n\nconst initialQuery = args.name || '';\n\nclass QueryTooShortError extends Error { }\n\ninterface SearchState {\n  query: string;\n  result: string[] | null;\n  err: any;\n}\n\nconst initialSearchState: SearchState = {\n  query: '',\n  result: [],\n  err: null,\n};\n\nconst PartsSearch = () => {\n  const queryInputRef = useRef<HTMLInputElement>(null);\n  const [searchState, setSearchState] = useState<SearchState>(initialSearchState);\n\n  const startSearch = (query: string) => {\n    setSearchState({\n      query,\n      result: null,\n      err: null,\n    });\n    search(query)\n      .then((result) => {\n        if (result === 'tooshort') {\n          throw new QueryTooShortError('query too short');\n        }\n        if (result === 'nodata') {\n          return [];\n        }\n        return result.split('\\t');\n      })\n      .then((names): SearchState => ({\n        query,\n        result: names,\n        err: null,\n      }))\n      .catch((reason): SearchState => ({\n        query,\n        result: null,\n        err: reason,\n      }))\n      .then((newSearchState) => {\n        setSearchState((currentSearchState) => (\n          (currentSearchState.query === query)\n            ? newSearchState\n            : currentSearchState // query has changed, discard result\n        ));\n      });\n  };\n\n  useEffect(() => {\n    if (initialQuery) {\n      startSearch(initialQuery);\n    }\n  }, []);\n  const handleSearch = useCallback(() => {\n    if (!queryInputRef.current) {\n      return;\n    }\n    const query = queryInputRef.current.value;\n    if (!query) {\n      setSearchState({\n        query,\n        result: [],\n        err: null,\n      });\n      return;\n    }\n    startSearch(query);\n  }, []);\n  const handleFormSubmit = useCallback((evt: React.FormEvent) => {\n    evt.preventDefault();\n    handleSearch();\n  }, [handleSearch]);\n\n  const hoverNameRef = useRef<HTMLDivElement>(null);\n  const handleItemMouseEnter = useCallback((partName: string) => {\n    if (!hoverNameRef.current) {\n      return;\n    }\n    hoverNameRef.current.textContent = partName;\n  }, []);\n  const dispatch = useDispatch();\n  const handleItemClick = useCallback((partName: string, evt: React.MouseEvent) => {\n    if (evt.shiftKey) {\n      if (!queryInputRef.current) {\n        return;\n      }\n      queryInputRef.current.value = partName;\n      startSearch(partName);\n    } else {\n      dispatch(editorActions.insertPart(partName));\n    }\n  }, [dispatch]);\n\n  const { t } = useTranslation();\n  return (\n    <div className=\"parts-search-area\">\n      <form className=\"parts-search-box\" onSubmit={handleFormSubmit}>\n        <input defaultValue={initialQuery} list=\"searchList\" ref={queryInputRef} />\n        <button onClick={handleSearch}>\n          {t('search')}\n        </button>\n        <datalist id=\"searchList\">\n          {searchSuggestions.map((suggestion, index) => (\n            <option key={index} value={suggestion} />\n          ))}\n        </datalist>\n      </form>\n      <div className=\"parts-list-area\">\n        {!searchState.result\n          ? <div className=\"message\">{t('searching')}</div>\n          : searchState.err\n            ? searchState.err instanceof QueryTooShortError\n              ? <div className=\"message\">{t('search query too short')}</div>\n              : <div className=\"message\">{t('search error', { message: searchState.err })}</div>\n            : searchState.result.length === 0\n              ? <div className=\"message\">{t('no search result')}</div>\n              : <PartsList\n                names={searchState.result}\n                handleItemClick={handleItemClick}\n                handleItemMouseEnter={handleItemMouseEnter}\n              />}\n      </div>\n      <div className=\"parts-hover-name\" ref={hoverNameRef}>&nbsp;</div>\n    </div>\n  )\n};\n\nexport default PartsSearch;\n","import React, { useRef, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport args from '../args';\n\nimport { AppState } from '../reducers';\nimport { submitGlyphSelector } from '../selectors/submitGlyph';\nimport { unparseGlyph } from '../kageUtils/glyph';\n\n\nconst glyphName = args.name || 'sandbox';\n\nconst formAction = `${args.ssl ? 'https' : 'http'}://${args.host}/wiki/${encodeURIComponent(glyphName)}?action=preview`;\n\nconst formStyle: React.CSSProperties = {\n  visibility: 'hidden',\n  position: 'absolute',\n};\n\nconst SubmitForm = () => {\n  const exitEvent = useSelector((state: AppState) => state.exitEvent);\n  const formRef = useRef<HTMLFormElement>(null);\n  useEffect(() => {\n    if (exitEvent) {\n      formRef.current?.submit();\n    }\n  }, [exitEvent]);\n  const glyph = useSelector(submitGlyphSelector);\n  return (\n    <form\n      style={formStyle}\n      ref={formRef}\n      action={formAction}\n      method=\"post\"\n    >\n      <input type=\"hidden\" name=\"page\" value={glyphName} />\n      <input type=\"hidden\" name=\"action\" value=\"preview\" />\n      <input type=\"hidden\" name=\"textbox\" value={unparseGlyph(glyph)} />\n      <input type=\"hidden\" name=\"related\" value={args.related} />\n      <input type=\"hidden\" name=\"summary\" value={args.summary} />\n      {args.edittime && <input type=\"hidden\" name=\"edittime\" value={args.edittime} />}\n    </form>\n  );\n};\n\nexport default SubmitForm;","import React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport ReactModal from 'react-modal';\nimport { useTranslation } from 'react-i18next';\n\nimport { displayActions } from '../actions/display';\nimport { AppState } from '../reducers';\nimport { KShotai } from '../kage';\n\nimport './OptionModal.css';\n\nconst OptionModal = () => {\n  const showOptionModal = useSelector((state: AppState) => state.showOptionModal);\n  const grid = useSelector((state: AppState) => state.grid);\n  const shotai = useSelector((state: AppState) => state.shotai);\n  const showStrokeCenterLine = useSelector((state: AppState) => state.showStrokeCenterLine);\n\n  const dispatch = useDispatch();\n  const handleRequestClose = useCallback(() => {\n    dispatch(displayActions.closeOptionModal());\n  }, [dispatch]);\n\n  const handleGridDisplayChange = useCallback((evt: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(displayActions.setGridDisplay(evt.currentTarget.checked));\n  }, [dispatch]);\n  const handleGridOriginXChange = useCallback((evt: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(displayActions.setGridOriginX(evt.currentTarget.valueAsNumber));\n  }, [dispatch]);\n  const handleGridOriginYChange = useCallback((evt: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(displayActions.setGridOriginY(evt.currentTarget.valueAsNumber));\n  }, [dispatch]);\n  const handleGridSpacingXChange = useCallback((evt: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(displayActions.setGridSpacingX(evt.currentTarget.valueAsNumber));\n  }, [dispatch]);\n  const handleGridSpacingYChange = useCallback((evt: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(displayActions.setGridSpacingY(evt.currentTarget.valueAsNumber));\n  }, [dispatch]);\n  const handleShotaiChange = useCallback((evt: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(displayActions.setShotai(+evt.currentTarget.value as KShotai));\n  }, [dispatch]);\n  const handleStrokeCenterLineChange = useCallback((evt: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(displayActions.setStrokeCenterLineDisplay(evt.currentTarget.checked));\n  }, [dispatch]);\n  \n  const { t, i18n } = useTranslation();\n  const handleLanguageChange = useCallback((evt: React.ChangeEvent<HTMLSelectElement>) => {\n    i18n.changeLanguage(evt.currentTarget.value);\n  }, [i18n]);\n\n  return (\n    <ReactModal\n      isOpen={showOptionModal}\n      onRequestClose={handleRequestClose}\n      shouldCloseOnEsc={false} // handled by hotkeys-js\n      className={'modal-content'}\n    >\n      <fieldset>\n        <legend>{t('grid option')}</legend>\n        <div>\n          <label>\n            <input type=\"checkbox\" checked={grid.display} onChange={handleGridDisplayChange} />\n            {t('enable grid')}\n          </label>\n        </div>\n        <div>\n          {t('grid origin x')} <input\n            type=\"number\"\n            value={grid.originX}\n            onChange={handleGridOriginXChange}\n            disabled={!grid.display}\n          />\n          {' '}\n          {t('grid origin y')} <input\n            type=\"number\"\n            value={grid.originX}\n            onChange={handleGridOriginYChange}\n            disabled={!grid.display}\n          />\n        </div>\n        <div>\n          {t('grid spacing x')} <input\n            type=\"number\"\n            value={grid.spacingX}\n            onChange={handleGridSpacingXChange}\n            disabled={!grid.display}\n          />\n          {' '}\n          {t('grid spacing y')} <input\n            type=\"number\"\n            value={grid.spacingY}\n            onChange={handleGridSpacingYChange}\n            disabled={!grid.display}\n          />\n        </div>\n      </fieldset>\n      <div>\n        {t('glyph font style')} <select\n          value={shotai}\n          onChange={handleShotaiChange}\n        >\n          <option value={0}>{t('mincho style')}</option>\n          <option value={1}>{t('gothic style')}</option>\n        </select>\n      </div>\n      <div>\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={showStrokeCenterLine}\n            onChange={handleStrokeCenterLineChange}\n          />\n          {t('show stroke center line')}\n        </label>\n      </div>\n      <div>\n        {t('display language')} <select\n          value={i18n.language}\n          onChange={handleLanguageChange}\n        >\n          <option value=\"ja\">日本語</option>\n          <option value=\"en\">English</option>\n          <option value=\"ko\" disabled>한국어</option>\n          <option value=\"zh-Hans\" disabled>简体中文</option>\n          <option value=\"zh-Hant\" disabled>繁体中文</option>\n        </select>\n      </div>\n      <div>\n        <button onClick={handleRequestClose}>{t('close modal')}</button>\n      </div>\n    </ReactModal>\n  )\n};\n\nif (process.env.NODE_ENV !== 'test') {\n  ReactModal.setAppElement('#root');\n}\n\nexport default OptionModal;\n","import React from 'react';\n\nimport GlyphArea from './components/GlyphArea';\nimport EditorControls from './components/EditorControls';\nimport PartsSearch from './components/PartsSearch'\nimport SubmitForm from './components/SubmitForm';\nimport OptionModal from './components/OptionModal';\n\nimport { useShortcuts } from './shortcuts';\n\nimport './App.css';\n\nfunction App() {\n  useShortcuts();\n  return (\n    <div className=\"App\">\n      <GlyphArea />\n      <EditorControls />\n      <PartsSearch />\n      <SubmitForm />\n      <OptionModal />\n    </div>\n  );\n}\n\nexport default App;\n","import { useDispatch } from 'react-redux';\nimport { useHotkeys }from 'react-hotkeys-hook';\n\nimport { selectActions } from './actions/select';\nimport { editorActions } from './actions/editor';\nimport { undoActions } from './actions/undo';\n\nexport const useShortcuts = () => {\n  const dispatch = useDispatch();\n  useHotkeys('ctrl+a, command+a', (evt) => {\n    dispatch(selectActions.selectAll());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+i, command+i', (evt) => {\n    dispatch(selectActions.selectDeselected());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n\n  useHotkeys('ctrl+z, command+z', (evt) => {\n    dispatch(undoActions.undo());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+y, command+y, ctrl+shift+z, command+shift+z', (evt) => {\n    dispatch(undoActions.redo());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+x, command+x', (evt) => {\n    dispatch(editorActions.cut());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+c, command+c', (evt) => {\n    dispatch(editorActions.copy());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+v, command+v', (evt) => {\n    dispatch(editorActions.paste());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('del', (evt) => {\n    dispatch(editorActions.delete());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n\n  useHotkeys('esc', () => {\n    dispatch(editorActions.escape());\n  }, {}, [dispatch]);\n\n  useHotkeys('ctrl+h, left', (evt) => {\n    dispatch(editorActions.moveSelected([-1, 0]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+j, down', (evt) => {\n    dispatch(editorActions.moveSelected([0, 1]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+k, up', (evt) => {\n    dispatch(editorActions.moveSelected([0, -1]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+l, right', (evt) => {\n    dispatch(editorActions.moveSelected([1, 0]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+shift+h, shift+left', (evt) => {\n    dispatch(editorActions.moveSelected([-5, 0]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+shift+j, shift+down', (evt) => {\n    dispatch(editorActions.moveSelected([0, 5]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+shift+k, shift+up', (evt) => {\n    dispatch(editorActions.moveSelected([0, -5]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+shift+l, shift+right', (evt) => {\n    dispatch(editorActions.moveSelected([5, 0]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n\n  useHotkeys('ctrl+s, command+s', (evt) => {\n    dispatch(editorActions.finishEdit(evt));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport args from \"./args\";\n\nimport jaTranslation from './locales/ja.json';\nimport enTranslation from './locales/en.json';\n\nconst resources = {\n  ja: {\n    translation: jaTranslation,\n  },\n  en: {\n    translation: enTranslation,\n  },\n};\n\nlet lng = 'ja';\nswitch (args.host.split('.')[0]) {\n  case 'en':\n    lng = 'en';\n    break;\n  case 'ko':\n    lng = 'ko';\n    break;\n  case 'zhs':\n    lng = 'zh-Hans';\n    break;\n  case 'zht':\n    lng = 'zh-Hant';\n    break;\n}\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng,\n    fallbackLng: {\n      'zh-Hans': ['zh-Hant', 'ja'],\n      'zh-Hant': ['zh-Hans', 'ja'],\n      'default': ['ja'],\n    },\n\n    returnObjects: true,\n    interpolation: {\n      escapeValue: false, // react already safes from xss\n    },\n  });\n\nexport default i18n;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\n\nimport store from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './i18n';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}