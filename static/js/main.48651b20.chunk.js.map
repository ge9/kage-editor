{"version":3,"sources":["actions/drag.ts","kageUtils/glyph.ts","args.ts","actions/select.ts","kageUtils/freehand.ts","kageUtils/match.ts","kageUtils/connection.ts","kageUtils/transform.ts","actions/editor.ts","callapi.ts","kage.ts","kageUtils/bbx.ts","selectors/draggedGlyph.ts","kageUtils/stretchparam.ts","kageUtils/decompose.ts","kageUtils/stroketype.ts","reducers/editor.ts","actions/display.ts","actions/undo.ts","reducers/index.ts","reducers/undo.ts","reducers/select.ts","reducers/drag.ts","reducers/display.ts","store.ts","components/Grid.tsx","components/Stroke.tsx","components/Glyph.tsx","components/StrokeCenterLine.tsx","components/ControlPoint.tsx","components/SelectionControl.tsx","components/AreaSelectRect.tsx","components/GlyphArea.tsx","components/SelectionInfo.tsx","selectors/submitGlyph.ts","components/SubmitPreview.tsx","components/EditorControls.tsx","components/PartsList.tsx","components/PartsSearch.tsx","components/SubmitForm.tsx","components/OptionModal.tsx","App.tsx","shortcuts.ts","serviceWorker.ts","i18n.ts","index.tsx"],"names":["RectPointPosition","getNumColumns","strokeType","unparseGlyphLine","glyphLine","values","value","slice","partName","join","parseGlyph","glyphStr","split","map","line","glyphLineStr","splitLine","numColumns","i","push","Math","floor","parseGlyphLine","filter","gLine","length","unparseGlyph","glyph","args","URLSearchParams","window","location","hash","actionCreator","actionCreatorFactory","selectActions","selectSingle","selectAddSingle","selectRemoveSingle","selectNone","selectAll","selectDeselected","selectPrev","selectNext","snapped","MatchType","dragActions","startBackgroundDrag","startSelectionDrag","startPointDrag","startResize","mouseMove","mouseUp","updateCTMInv","connectablePairs","position","strokeTypes","shapeTypes","matchConnectablePoint","point","includes","shapeType","getConnectablePoints","result","coord","pointIndex","endPointIndex","listupConnectedPoints","memoizeOne","points","sPoints","lineIndex","sPoint","forEach","dPoint","some","point2","point1","filter1","filter2","glyph1","points1","glyph2","points2","every","index","listupConnectedPointsOfSelection","selection","selectedDescs","applyGlyphLineOperation","tX","tY","applyGlyphPointOperation","pdescs","newGlyph","newValue","moveSelectedGlyphLines","dx","dy","targetDescs","x","round","y","moveSelectedPoint","selectedDesc","targetDesc","resizeSelectedGlyphLines","oldBBX","newBBX","x11","y11","x12","y12","x21","y21","x22","y22","resizeGlyphLine","editorActions","loadedBuhin","loadedStretchParam","changeStrokeType","changeHeadShapeType","changeTailShapeType","changeStretchCoeff","swapWithPrev","swapWithNext","insertPart","paste","copy","cut","delete","decomposeSelected","moveSelected","toggleFreehand","escape","finishEdit","callApi","path","a","fetch","response","ok","Error","text","getSource","name","encodeURIComponent","get","search","query","kage_","Kage","getKage","buhinMap","fallback","shotai","kBuhin","kShotai","waiting","Set","loadAbsentBuhin","has","add","then","source","stretchMatch","exec","params","store","dispatch","catch","err","console","error","filteredGlyphIsEqual","gLine1","makeGlyphSeparated_","data","makeGlyphSeparated","map1","shotai1","map2","shotai2","makeGlyphSeparatedFactory","isEqual","makeGlyphSeparatedForSubmit","bbxOfPoints","xs","ys","min","max","getGlyphLineBBX","mergeBBX","getGlyphLinesBBX","glyphLines","reduce","gLines1","gLines2","avg","nums","b","sum","lerp","x1","x2","k","norm2","drawFreehand","startX","startY","endX","endY","lastStroke","newLastStroke","concat","centroidX","centroidY","midX","midY","dis","sqrt","abs","startType","endType","mid1X","mid1Y","mid2X","mid2Y","correctStroke","ev","undefined","minVal","Infinity","datum","val","minBy","leftBottomX","leftBottomY","dx1","dy1","dx2","dy2","newStroke","snapStrokeStart","snapStrokeEnd","snapStrokeTilt","snapToNewStroke","setGlyphValue","column","newGLine","snapVerticalStroke","vertStroke","leftType","middleType","rightType","ti","xi","yi","nx","ny","minX","maxX","minY","maxY","horiStroke","y1","y2","snapHorizontalStroke","snapStrokeSegmentTilt","point1Index","sx1","sy1","sx2","sy2","resizeSelected","selectedGlyphLine","north","west","south","east","southeast","newGlyphLine","draggedGlyphSelector","createSelector","state","dragSelection","dragPoint","resizeSelection","freehandStroke","getStretchPositions","setStretchPositions","positions","sx","sy","tx","ty","normalizeStretchPositions","calcStretchScalar","param","x0","y0","decomposeDeepGlyph","getEachStrokes","stroke","columns","a1","a2_100","kirikuchiAdjustment","tateAdjustment","a3_100","opt3","mageAdjustment","x3","y3","x4","y4","decomposeDeep","headShapeTypes","1","2","3","4","6","7","tailShapeTypes","validStrokeShapeTypes","isValidStrokeShapeTypes","s0","s1","s2","setGlyphLine","displayActions","openOptionModal","closeOptionModal","setGridDisplay","setGridOriginX","setGridOriginY","setGridSpacingX","setGridSpacingY","setShotai","setStrokeCenterLineDisplay","undoActions","undo","redo","initialState","areaSelectRect","ctmInv","freehandMode","Map","stretchParamMap","clipboard","undoStacks","exiting","showOptionModal","grid","display","originX","originY","spacingX","spacingY","showStrokeCenterLine","reducer","type","reducerWithInitialState","case","default","oldState","action","newState","glyphLine1","glyphLine2","value1","pushUndo","undoable","withHandling","builder","index2","_gLine","firstSelected","evt","clientX","clientY","lastX","lastY","splice","intersections","polygonsSep","gAreaPolygon","array","polygon","gPolygon","polygonInPolygon","polygonIntersectsPolygon","performAreaSelect","newSelection","Array","from","newMap","set","newType","oldType","oldNumPoints","newNumPoints","xm","ym","xm1","ym1","xm2","ym2","selectedLine","stretchParam","calcStretchPositions","targetLines","newLines","buhinSource","failedBuhin","kage","strokesArray","box","getBox","isStretchEnabled","oldGlyphLine","stretchedX","stretch","stretchedY","tx2","ty2","px1","py1","px2","py2","revX","revY","decompose","subindex","createStore","Grid","useSelector","className","key","d","StrokeComponent","props","polygons","GlyphComponent","nonSelection","_polygons","onMouseDown","handleMouseDownDeselectedStroke","Stroke","handleMouseDownSelectedStroke","StrokeCenterLine","strokes","v","getMatchType","none","isOnline","match","online","ControlPoint","width","height","handleMouseDown","selectionControlSelector","rectControl","pointControl","selectedStrokes","multiSelect","coords","selectedStroke","matchType","SelectionControl","useDispatch","handleMouseDownRectControl","useCallback","stopPropagation","handleMouseDownNorthPoint","handleMouseDownWestPoint","handleMouseDownSouthPoint","handleMouseDownEastPoint","handleMouseDownSoutheastPoint","handleMouseDownPointControls","useMemo","_control","AreaSelectRect","rect","temp","GlyphArea","svgClassName","handleMouseDownCapture","ctm","currentTarget","getScreenCTM","pt","createSVGPoint","ictm","inverse","evtx","evty","matrixTransform","handleMouseDownBackground","shiftKey","ctrlKey","useEffect","handleMouseMove","handleMouseUp","document","addEventListener","removeEventListener","viewBox","onMouseDownCapture","selectedGlyphLineSelector","draggedGlyph","strokeInfoSelector","headShapeType","tailShapeType","validTypes","coordString","partInfoSelector","entityName","aliasMatch","stretchCoeff","otherInfoSelector","selectedStroke_","isMultiple","selectIndexStringSelector","glyphLength","selectedIndexString","sort","buttonsDisabledSelector","swapPrevDisabled","swapNextDisabled","selectPrevDisabled","selectNextDisabled","SelectionInfo","strokeInfo","partInfo","otherInfo","selectIndexString","shallowEqual","t","useTranslation","onChange","entity","disabled","onClick","submitGlyphSelector","SubmitPreview","submitGlyph","EditorControls","undoDisabled","redoDisabled","pasteDisabled","decomposeDisabled","options","getImageURL","PartsList","handleItemClick","handleItemMouseEnter","handleImageClick","dataset","handleImageMouseEnter","names","alt","title","data-name","src","onMouseEnter","searchSuggestions","initialQuery","QueryTooShortError","PartsSearch","queryInputRef","useRef","useState","searching","setSearching","setNames","setErr","startSearch","reason","handleSearch","current","handleFormSubmit","preventDefault","hoverNameRef","textContent","onSubmit","defaultValue","list","ref","id","suggestion","message","host","ssl","glyphName","related","edittime","summary","formAction","SubmitForm","formRef","useLayoutEffect","submit","style","visibility","method","ReactModal","setAppElement","OptionModal","handleRequestClose","handleGridDisplayChange","checked","handleGridOriginXChange","valueAsNumber","handleGridOriginYChange","handleGridSpacingXChange","handleGridSpacingYChange","handleShotaiChange","handleStrokeCenterLineChange","i18n","handleLanguageChange","changeLanguage","isOpen","onRequestClose","shouldCloseOnEsc","language","App","useHotkeys","useShortcuts","Boolean","hostname","resources","ja","translation","en","lng","use","initReactI18next","init","fallbackLng","returnObjects","interpolation","escapeValue","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.48651b20.chunk.js","sourcesContent":["import actionCreatorFactory from 'typescript-fsa';\n\nexport type CTMInv = (x: number, y: number) => [number, number];\nexport enum RectPointPosition {\n  north,\n  south,\n  east,\n  west,\n  southeast,\n}\n\nconst actionCreator = actionCreatorFactory('EDITOR');\n\nexport const dragActions = {\n  startBackgroundDrag: actionCreator<React.MouseEvent>('BACKGROUND_DRAG_START'),\n  startSelectionDrag: actionCreator<React.MouseEvent>('SELECTION_DRAG_START'),\n  startPointDrag: actionCreator<[React.MouseEvent, number]>('MOVE_POINT_START'),\n  startResize: actionCreator<[React.MouseEvent, RectPointPosition]>('RESIZE_START'),\n\n  mouseMove: actionCreator<MouseEvent>('MOUSE_MOVE'),\n  mouseUp: actionCreator<MouseEvent>('MOUSE_UP'),\n\n  updateCTMInv: actionCreator<CTMInv>('UPDATE_CTMINV'),\n}\n","export interface GlyphLine {\n  value: number[];\n  partName?: string;\n}\n\nexport const getNumColumns = (strokeType: number): number => {\n  switch (strokeType) {\n    case 0:\n    case 1:\n    case 9:\n      return 7;\n    case 2:\n    case 3:\n    case 4:\n      return 9;\n    case 6:\n    case 7:\n    case 99:\n      return 11;\n    default:\n      return 0;\n  }\n};\n\nexport const parseGlyphLine = (glyphLineStr: string): GlyphLine => {\n  const splitLine = glyphLineStr.split(':');\n  const strokeType = +splitLine[0];\n  const numColumns = getNumColumns(strokeType);\n  const value = [];\n  for (let i = 0; i < numColumns; i++) {\n    value.push(Math.floor(+splitLine[i] || 0));\n  }\n  if (value[0] === 99) {\n    const partName = splitLine[7] || '';\n    return { value, partName }\n  }\n  return { value };\n};\n\nexport const unparseGlyphLine = (glyphLine: GlyphLine): string => {\n  const values: (number | string)[] = glyphLine.value.slice();\n  if (values[0] === 99) {\n    values[7] = glyphLine.partName || '';\n  }\n  return values.join(':');\n};\n\nexport const isValidGlyphLine = (glyphLine: GlyphLine): boolean => (\n  glyphLine.value.length !== 0 &&\n  (\n    glyphLine.value[0] !== 0 ||\n    glyphLine.value[1] === 97 || glyphLine.value[1] === 98 || glyphLine.value[1] === 99\n  )\n);\n\n\nexport type Glyph = GlyphLine[];\n\nexport const parseGlyph = (glyphStr: string): Glyph => (\n  glyphStr.split(/[$\\r\\n]+/)\n    .map((line) => parseGlyphLine(line))\n    .filter((gLine) => isValidGlyphLine(gLine))\n);\n\nexport const unparseGlyph = (glyph: Glyph): string => (\n  glyph\n    .map((gLine) => unparseGlyphLine(gLine))\n    .join('$')\n);\n\nexport const isGlyphDeepEqual = (glyph1: Glyph, glyph2: Glyph) => (\n  glyph1 === glyph2 || (\n    glyph1.length === glyph2.length &&\n    glyph1.every((glyphLine1, index) => {\n      const glyphLine2 = glyph2[index];\n      return glyphLine1 === glyphLine2 || (\n        glyphLine1.partName === glyphLine2.partName &&\n        glyphLine1.value.length === glyphLine2.value.length &&\n        glyphLine1.value.every((value1, index) => value1 === glyphLine2.value[index])\n      );\n    })\n  )\n);\n\n\nexport interface PointDescriptor {\n  lineIndex: number;\n  pointIndex: number;\n}\n","const args = new URLSearchParams(window.location.hash.slice(1));\n\nexport default args;\n","import actionCreatorFactory from 'typescript-fsa';\n\nconst actionCreator = actionCreatorFactory('SELECT');\n\nexport const selectActions = {\n  selectSingle: actionCreator<number>('SELECT_SINGLE'),\n  selectAddSingle: actionCreator<number>('SELECT_ADD_SINGLE'),\n  selectRemoveSingle: actionCreator<number>('SELECT_REMOVE_SINGLE'),\n  selectNone: actionCreator('SELECT_NONE'),\n  selectAll: actionCreator('SELECT_ALL'),\n  selectDeselected: actionCreator('SELECT_TOGGLE_ALL'),\n  selectPrev: actionCreator('SELECT_PREV'),\n  selectNext: actionCreator('SELECT_NEXT'),\n};\n","import { Glyph, GlyphLine } from './glyph';\nimport { applyGlyphLineOperation } from './transform';\n\nconst sum = (nums: number[]) => nums.reduce((a, b) => a + b, 0);\nconst avg = (nums: number[]) => sum(nums) / nums.length;\nconst min: {\n  (data: number[]): number;\n  <T>(data: T[], ev: (val: T) => number): number;\n} = (data: any[], ev?: (val: any) => number) => {\n  let result = Infinity;\n  for (const datum of data) {\n    const val = ev ? ev(datum) : datum as number;\n    if (val < result) {\n      result = val;\n    }\n  }\n  return result;\n};\nconst minBy = <T>(data: T[], ev: (val: T) => number): T | undefined => {\n  let result: T | undefined = undefined;\n  let minVal = Infinity;\n  for (const datum of data) {\n    const val = ev(datum);\n    if (val < minVal) {\n      result = datum;\n      minVal = val;\n    }\n  }\n  return result;\n};\n\nconst lerp = (x1: number, x2: number, k: number) => x1 * (1 - k) + x2 * k;\nconst norm2 = (dx: number, dy: number) => dx * dx + dy * dy;\n\nexport const drawFreehand = (glyph: Glyph, points: [number, number][]): Glyph => {\n  const [startX, startY] = points[0];\n  const [endX, endY] = points[points.length - 1];\n  const dx = endX - startX;\n  const dy = endY - startY;\n\n  if (glyph.length > 0 && norm2(dx, dy) < 25 ** 2) {\n    const lastStroke = glyph[glyph.length - 1];\n    // ハネ部分かどうか？\n    if (\n      [1, 2, 3, 4, 6].includes(lastStroke.value[0]) &&\n      norm2(\n        startX - lastStroke.value[lastStroke.value.length - 2],\n        startY - lastStroke.value[lastStroke.value.length - 1]\n      ) < 10 ** 2\n    ) {\n      if ([1, 2, 6].includes(lastStroke.value[0]) && dx < 0) { // 左ハネに変更\n        const newLastStroke: GlyphLine = {\n          value: lastStroke.value.slice(),\n        };\n        newLastStroke.value[2] = 4;\n        return glyph.slice(0, -1).concat([newLastStroke]);\n      }\n      if ([2, 6].includes(lastStroke.value[0]) && dx > 0 && dy < 0) { // 右ハネに変更\n        const newLastStroke: GlyphLine = {\n          value: lastStroke.value.slice(),\n        };\n        newLastStroke.value[2] = 5;\n        return glyph.slice(0, -1).concat([newLastStroke]);\n      }\n      if ([3, 4].includes(lastStroke.value[0]) && dy < 0) { // 上ハネに変更\n        const newLastStroke: GlyphLine = {\n          value: lastStroke.value.slice(),\n        };\n        newLastStroke.value[2] = 5;\n        return glyph.slice(0, -1).concat([newLastStroke]);\n      }\n    }\n  }\n\n  const centroidX = avg(points.map(([x]) => x));\n  const centroidY = avg(points.map(([_x, y]) => y));\n\n  const midLerpRate = 3;\n  const midX = lerp((startX + endX) / 2, centroidX, midLerpRate);\n  const midY = lerp((startY + endY) / 2, centroidY, midLerpRate);\n\n  const dis = (dx * midY - dy * midX + startX * endY - startY * endX) / Math.sqrt(norm2(dx, dy));\n  if (Math.abs(dis) > 5) {\n    // 曲線\n    let startType = 0;\n    let endType = 0;\n    if (dx < 0 && dy > 0 && dis < 0) { // 左払い or 縦払い\n      if (dy >= 50 && dx * -3 < dy) {\n        const mid1X = startX;\n        const mid1Y = lerp(startY, endY, 1 / 3);\n        const mid2X = startX;\n        const mid2Y = lerp(startY, endY, 2 / 3);\n        const newStroke: GlyphLine = {\n          value: [7, 0, 7, startX, startY, mid1X, mid1Y, mid2X, mid2Y, endX, endY],\n        };\n        return correctStroke(glyph, newStroke);\n      }\n      startType = 0;\n      endType = 7;\n    } else if (dx > 0 && dy > 0 && dis > 0) { // 右払い or 折れ\n      const [leftBottomX, leftBottomY] = minBy(points, ([x, y]) => x - y)!;\n      const dx1 = startX - leftBottomX;\n      const dy1 = startY - leftBottomY;\n      const dx2 = endX - leftBottomX;\n      const dy2 = endY - leftBottomY;\n      const cosAngle = (dx1 * dx2 + dy1 * dy2) / Math.sqrt(norm2(dx1, dy1) * norm2(dx2, dy2));\n      if (cosAngle > -0.15) {\n        // 折れ\n        const midX = min(points, ([x]) => x);\n        const midY = endY;\n        const newStroke: GlyphLine = {\n          value: [3, 0, 0, startX, startY, midX, midY, endX, endY],\n        };\n        return correctStroke(glyph, newStroke);\n      }\n      startType = 7;\n      endType = 0;\n    } else if (dx > 0 && dy > 0 && dis < 0) { // 止め\n      startType = 7;\n      endType = 8;\n    } else if (dx > 0 && dy < 0 && dis > 0) { // 右上方向の「左払い」\n      startType = 0;\n      endType = 7;\n    }\n    const newStroke: GlyphLine = {\n      value: [2, startType, endType, startX, startY, midX, midY, endX, endY],\n    };\n    return correctStroke(glyph, newStroke);\n  }\n\n  const newStroke: GlyphLine = {\n    value: [1, 0, 0, startX, startY, endX, endY],\n  };\n  return correctStroke(glyph, newStroke);\n};\n\nconst round = (x: number) => Math.round(x);\n\nlet snapped: boolean[];\n\nconst correctStroke = (glyph: Glyph, newStroke: GlyphLine): Glyph => {\n  snapped = newStroke.value.map(() => false);\n  glyph = snapStrokeStart(glyph, newStroke);\n  glyph = snapStrokeEnd(glyph, newStroke);\n  snapStrokeTilt(newStroke);\n  newStroke = applyGlyphLineOperation(newStroke, round, round)\n  glyph = snapToNewStroke(glyph, newStroke);\n  return glyph.concat([newStroke]);\n};\n\nconst setGlyphValue = (glyph: Glyph, lineIndex: number, column: number, value: number): Glyph => {\n  if (glyph[lineIndex].value[column] === value) {\n    return glyph;\n  }\n  return glyph.map((gLine, index) => {\n    if (index !== lineIndex) {\n      return gLine;\n    }\n    const newGLine = {\n      ...gLine,\n      value: gLine.value.slice(),\n    };\n    newGLine.value[column] = value;\n    return newGLine;\n  });\n};\n\nconst snapVerticalStroke = (\n  glyph: Glyph, vertStroke: GlyphLine, position: 'start' | 'end',\n  leftType: number, middleType: number, rightType: number\n): Glyph => {\n  const ti = position === 'start' ? 1 : 2;\n  const xi = position === 'start' ? 3 : vertStroke.value.length - 2;\n  const yi = xi + 1;\n  const nx = vertStroke.value[xi];\n  const ny = vertStroke.value[yi];\n  const minX = nx - 10;\n  const maxX = nx + 10;\n  const minY = ny - 10;\n  const maxY = ny + 10;\n  for (let lineIndex = glyph.length - 1; lineIndex >= 0; lineIndex--) {\n    const horiStroke = glyph[lineIndex];\n    if (horiStroke.value[0] !== 1) {\n      continue;\n    }\n    const x1 = horiStroke.value[3];\n    const y1 = horiStroke.value[4];\n    const x2 = horiStroke.value[5];\n    const y2 = horiStroke.value[6];\n    if (x2 - x1 < Math.abs(y2 - y1)) {\n      continue;\n    }\n    if (\n      [0, 2].includes(horiStroke.value[1]) &&\n      minX <= x1 && x1 <= maxX &&\n      minY <= y1 && y1 <= maxY\n    ) {\n      vertStroke.value[xi] = x1;\n      vertStroke.value[yi] = y1;\n      snapped[xi] = snapped[yi] = true;\n      vertStroke.value[ti] = leftType;\n      return setGlyphValue(glyph, lineIndex, 1, 2); // 接続(横)\n    }\n    if (\n      [0, 2].includes(horiStroke.value[2]) &&\n      minX <= x2 && x2 <= maxX &&\n      minY <= y2 && y2 <= maxY\n    ) {\n      vertStroke.value[xi] = x2;\n      vertStroke.value[yi] = y2;\n      snapped[xi] = snapped[yi] = true;\n      vertStroke.value[ti] = rightType;\n      return setGlyphValue(glyph, lineIndex, 2, 2); // 接続(横)\n    }\n    if (y1 === y2 && minY <= y1 && y1 <= maxY && x1 <= nx && nx <= x2) {\n      vertStroke.value[yi] = y1;\n      snapped[yi] = true;\n      vertStroke.value[ti] = middleType;\n      return glyph;\n    }\n  }\n  return glyph;\n};\n\nconst snapHorizontalStroke = (glyph: Glyph, horiStroke: GlyphLine, position: 'start' | 'end'): Glyph => {\n  const ti = position === 'start' ? 1 : 2;\n  const xi = position === 'start' ? 3 : 5;\n  const yi = xi + 1;\n  const nx = horiStroke.value[xi];\n  const ny = horiStroke.value[yi];\n  const minX = nx - 10;\n  const maxX = nx + 10;\n  const minY = ny - 10;\n  const maxY = ny + 10;\n  for (let lineIndex = glyph.length - 1; lineIndex >= 0; lineIndex--) {\n    const vertStroke = glyph[lineIndex];\n    if (![1, 2, 3, 4, 6, 7].includes(vertStroke.value[0])) {\n      continue;\n    }\n    const x1 = vertStroke.value[3];\n    const y1 = vertStroke.value[4];\n    const x2 = vertStroke.value[5];\n    const y2 = vertStroke.value[6];\n    if (vertStroke.value[0] === 1 && x2 - x1 > Math.abs(y2 - y1)) {\n      continue;\n    }\n    if (position === 'start') {\n      if (\n        [0, 12].includes(vertStroke.value[1]) &&\n        minX <= x1 && x1 <= maxX &&\n        minY <= y1 && y1 <= maxY\n      ) {\n        horiStroke.value[xi] = x1;\n        horiStroke.value[yi] = y1;\n        snapped[xi] = snapped[yi] = true;\n        horiStroke.value[ti] = 2;\n        return setGlyphValue(glyph, lineIndex, 1, 12); // 左上カド\n      }\n      if (\n        vertStroke.value[0] === 1 &&\n        [0, 13, 313, 413].includes(vertStroke.value[2]) &&\n        minX <= x2 && x2 <= maxX &&\n        minY <= y2 && y2 <= maxY\n      ) {\n        horiStroke.value[xi] = x2;\n        horiStroke.value[yi] = y2;\n        snapped[xi] = snapped[yi] = true;\n        horiStroke.value[ti] = 2;\n        return vertStroke.value[2] === 0\n          ? setGlyphValue(glyph, lineIndex, 2, 13) // 左下カド\n          : glyph;\n      }\n    } else {\n      if (\n        [0, 22].includes(vertStroke.value[1]) &&\n        minX <= x1 && x1 <= maxX &&\n        minY <= y1 && y1 <= maxY\n      ) {\n        horiStroke.value[xi] = x1;\n        horiStroke.value[yi] = y1;\n        snapped[xi] = snapped[yi] = true;\n        horiStroke.value[ti] = 2;\n        return setGlyphValue(glyph, lineIndex, 1, 22); // 右上カド\n      }\n      if (\n        vertStroke.value[0] === 1 &&\n        [0, 23, 24].includes(vertStroke.value[2]) &&\n        minX <= x2 && x2 <= maxX &&\n        minY <= y2 && y2 <= maxY\n      ) {\n        horiStroke.value[xi] = x2;\n        horiStroke.value[yi] = y2;\n        snapped[xi] = snapped[yi] = true;\n        horiStroke.value[ti] = 2;\n        return vertStroke.value[2] === 0\n          ? setGlyphValue(glyph, lineIndex, 2, 23) // 右下カド\n          : glyph;\n      }\n    }\n    if (x1 === x2 && minX <= x1 && x1 <= maxX && y1 <= ny && ny <= y2) {\n      horiStroke.value[xi] = x1;\n      snapped[xi] = true;\n      horiStroke.value[ti] = 2;\n      return glyph;\n    }\n  }\n  return glyph;\n};\n\nconst snapStrokeStart = (glyph: Glyph, newStroke: GlyphLine): Glyph => {\n  if (newStroke.value[0] !== 1) {\n    const y1 = newStroke.value[4];\n    const y2 = newStroke.value[6];\n    if (y1 > y2) {\n      return glyph;\n    }\n    return snapVerticalStroke(glyph, newStroke, 'start', 12, 32, 22);\n  }\n  const x1 = newStroke.value[3];\n  const y1 = newStroke.value[4];\n  const x2 = newStroke.value[5];\n  const y2 = newStroke.value[6];\n  if (x2 - x1 > Math.abs(y2 - y1)) {\n    return snapHorizontalStroke(glyph, newStroke, 'start');\n  }\n  if (y2 - y1 > 0) {\n    return snapVerticalStroke(glyph, newStroke, 'start', 12, 32, 22);\n  }\n  return glyph;\n};\nconst snapStrokeSegmentTilt = (newStroke: GlyphLine, point1Index: number) => {\n  const x1 = newStroke.value[3 + point1Index * 2];\n  const y1 = newStroke.value[3 + point1Index * 2 + 1];\n  const x2 = newStroke.value[3 + point1Index * 2 + 2];\n  const y2 = newStroke.value[3 + point1Index * 2 + 3];\n\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n\n  if (!snapped[3 + point1Index * 2 + 3] && Math.abs(dx) > Math.abs(dy) * 20) {\n    newStroke.value[3 + point1Index * 2 + 3] = y1;\n    return;\n  }\n  if (!snapped[3 + point1Index * 2 + 2] && Math.abs(dy) > Math.abs(dx) * 20) {\n    newStroke.value[3 + point1Index * 2 + 2] = x1;\n    return;\n  }\n};\nconst snapStrokeTilt = (newStroke: GlyphLine) => {\n  switch (newStroke.value[0]) {\n    case 1:\n      snapStrokeSegmentTilt(newStroke, 0);\n      return;\n    case 3:\n      snapStrokeSegmentTilt(newStroke, 0);\n      snapStrokeSegmentTilt(newStroke, 1);\n      return;\n    case 4:\n      snapStrokeSegmentTilt(newStroke, 1);\n      return;\n    case 7:\n      newStroke.value[5] = newStroke.value[7] = newStroke.value[3];\n  }\n};\nconst snapStrokeEnd = (glyph: Glyph, newStroke: GlyphLine): Glyph => {\n  if (newStroke.value[0] !== 1) {\n    return glyph;\n  }\n  const x1 = newStroke.value[3];\n  const y1 = newStroke.value[4];\n  const x2 = newStroke.value[5];\n  const y2 = newStroke.value[6];\n  if (x2 - x1 > Math.abs(y2 - y1)) {\n    return snapHorizontalStroke(glyph, newStroke, 'end');\n  }\n  if (y2 - y1 > 0) {\n    return snapVerticalStroke(glyph, newStroke, 'end', 13, 32, 23);\n  }\n  return glyph;\n};\nconst snapToNewStroke = (glyph: Glyph, newStroke: GlyphLine): Glyph => {\n  if (newStroke.value[0] !== 1) {\n    return glyph;\n  }\n  const x1 = newStroke.value[3];\n  const y1 = newStroke.value[4];\n  const x2 = newStroke.value[5];\n  const y2 = newStroke.value[6];\n  if (y1 !== y2) {\n    return glyph;\n  }\n  const minY = y1 - 10;\n  const maxY = y1 + 10;\n  glyph.forEach((gLine, lineIndex) => {\n    if (gLine.value[0] !== 1 || gLine.value[2] !== 0) {\n      return;\n    }\n    const sx1 = gLine.value[3];\n    const sy1 = gLine.value[4];\n    const sx2 = gLine.value[5];\n    const sy2 = gLine.value[6];\n    if (sx2 - sx1 > Math.abs(sy2 - sy1)) {\n      return;\n    }\n    if (minY <= sy2 && sy2 <= maxY && x1 <= sx2 && sx2 <= x2) {\n      glyph = setGlyphValue(glyph, lineIndex, 2, 32);\n      glyph = setGlyphValue(glyph, lineIndex, 6, y1);\n    }\n  });\n  return glyph;\n};\n","import { Glyph, PointDescriptor, getNumColumns } from './glyph';\n\nexport enum MatchType {\n  none,\n  online,\n  match,\n}\n\nexport const getMatchType = (glyph: Glyph, point: PointDescriptor): MatchType => {\n  const glyphLine = glyph[point.lineIndex];\n\n  const endPointIndex = (getNumColumns(glyphLine.value[0]) - 3) / 2 - 1;\n  if (point.pointIndex !== 0 && point.pointIndex !== endPointIndex) {\n    return MatchType.none;\n  }\n\n  const x = glyphLine.value[3 + point.pointIndex * 2];\n  const y = glyphLine.value[3 + point.pointIndex * 2 + 1];\n  const isOnline = (x1: number, y1: number, x2: number, y2: number): boolean => (\n    (\n      x1 === x2 && // 垂直\n      x1 === x && y1 <= y && y <= y2\n    ) || (\n      y1 === y2 && // 水平\n      y1 === y && x1 <= x && x <= x2\n    )\n  );\n\n  let result = MatchType.none;\n  for (let lineIndex = 0; lineIndex < glyph.length; lineIndex++) {\n    if (point.lineIndex === lineIndex) {\n      continue;\n    }\n    const glyphLine = glyph[lineIndex];\n    if ([0, 9, 99].includes(glyphLine.value[0])) {\n      continue;\n    }\n\n    if (glyphLine.value[3] === x && glyphLine.value[4] === y) {\n      return MatchType.match;\n    }\n    const endPointIndex = (getNumColumns(glyphLine.value[0]) - 3) / 2 - 1;\n    if (\n      glyphLine.value[3 + endPointIndex * 2] === x &&\n      glyphLine.value[3 + endPointIndex * 2 + 1] === y\n    ) {\n      return MatchType.match;\n    }\n\n    switch (glyphLine.value[0]) {\n      case 3:\n      case 4:\n        if (\n          isOnline(glyphLine.value[3], glyphLine.value[4], glyphLine.value[5], glyphLine.value[6]) ||\n          isOnline(glyphLine.value[5], glyphLine.value[6], glyphLine.value[7], glyphLine.value[8])\n        ) {\n          result = MatchType.online;\n        }\n        break;\n      case 1:\n      case 7:\n        if (isOnline(glyphLine.value[3], glyphLine.value[4], glyphLine.value[5], glyphLine.value[6])) {\n          result = MatchType.online;\n        }\n        break;\n    }\n  }\n  return result;\n};\n","import memoizeOne from 'memoize-one';\n\nimport { GlyphLine, Glyph, PointDescriptor, getNumColumns } from './glyph';\n\ninterface ConnectablePoint {\n  position: 'start' | 'end';\n  strokeType: number;\n  shapeType: number;\n  coord: [number, number];\n  pointIndex: number;\n}\n\ninterface ConnectablePointFilter {\n  position: 'start' | 'end';\n  strokeTypes: number[];\n  shapeTypes: number[];\n}\n\nconst connectablePairs: [ConnectablePointFilter, ConnectablePointFilter][] = [\n  [\n    // 左上\n    {\n      position: 'start',\n      strokeTypes: [1],\n      shapeTypes: [2],\n    },\n    {\n      position: 'start',\n      strokeTypes: [1, 2, 3, 4, 6, 7],\n      shapeTypes: [12],\n    },\n  ],\n  [\n    // 左下\n    {\n      position: 'start',\n      strokeTypes: [1],\n      shapeTypes: [2],\n    },\n    {\n      position: 'end',\n      strokeTypes: [1],\n      shapeTypes: [13, 313, 413],\n    },\n  ],\n  [\n    // 右上\n    {\n      position: 'end',\n      strokeTypes: [1],\n      shapeTypes: [2],\n    },\n    {\n      position: 'start',\n      strokeTypes: [1, 2, 3, 4, 6, 7],\n      shapeTypes: [22],\n    },\n  ],\n  [\n    // 右下\n    {\n      position: 'end',\n      strokeTypes: [1],\n      shapeTypes: [2],\n    },\n    {\n      position: 'end',\n      strokeTypes: [1],\n      shapeTypes: [23, 24],\n    },\n  ],\n];\n\nconst matchConnectablePoint = (filter: ConnectablePointFilter, point: ConnectablePoint) => (\n  filter.position === point.position &&\n  filter.strokeTypes.includes(point.strokeType) &&\n  filter.shapeTypes.includes(point.shapeType)\n)\n\nconst isConnectable = (point1: ConnectablePoint, point2: ConnectablePoint) => (\n  point1.coord[0] === point2.coord[0] &&\n  point1.coord[1] === point2.coord[1] &&\n  connectablePairs.some(([filter1, filter2]) => (\n    (matchConnectablePoint(filter1, point1) && matchConnectablePoint(filter2, point2)) ||\n    (matchConnectablePoint(filter2, point1) && matchConnectablePoint(filter1, point2))\n  ))\n);\n\nconst getConnectablePoints = (glyphLine: GlyphLine): ConnectablePoint[] => {\n  const result: ConnectablePoint[] = [];\n  switch (glyphLine.value[0]) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 6:\n    case 7: {\n      result.push({\n        position: 'start',\n        strokeType: glyphLine.value[0],\n        shapeType: glyphLine.value[1],\n        coord: [\n          glyphLine.value[3],\n          glyphLine.value[4],\n        ],\n        pointIndex: 0,\n      });\n      const endPointIndex = (getNumColumns(glyphLine.value[0]) - 3) / 2 - 1;\n      result.push({\n        position: 'end',\n        strokeType: glyphLine.value[0],\n        shapeType: glyphLine.value[2],\n        coord: [\n          glyphLine.value[3 + endPointIndex * 2],\n          glyphLine.value[3 + endPointIndex * 2 + 1],\n        ],\n        pointIndex: endPointIndex,\n      });\n      break;\n    }\n  }\n  return result;\n};\n\nexport const listupConnectedPoints = memoizeOne((glyph: Glyph, points: PointDescriptor[]): PointDescriptor[] => {\n  const sPoints: ConnectablePoint[] = [];\n  for (const { lineIndex, pointIndex } of points) {\n    for (const sPoint of getConnectablePoints(glyph[lineIndex])) {\n      if (sPoint.pointIndex === pointIndex) {\n        sPoints.push(sPoint);\n      }\n    }\n  }\n  const result: PointDescriptor[] = [];\n  glyph.forEach((glyphLine, lineIndex) => {\n    for (const dPoint of getConnectablePoints(glyphLine)) {\n      if (sPoints.some((sPoint) => isConnectable(sPoint, dPoint))) {\n        result.push({\n          lineIndex,\n          pointIndex: dPoint.pointIndex,\n        });\n      }\n    }\n  });\n  return result;\n}, ([glyph1, points1], [glyph2, points2]) => (\n  glyph1 === glyph2 &&\n  points1.length === points2.length &&\n  points1.every((point1, index) => (\n    point1.lineIndex === points2[index].lineIndex &&\n    point1.pointIndex === points2[index].pointIndex\n  ))\n));\n\nexport const listupConnectedPointsOfSelection = memoizeOne((glyph: Glyph, selection: number[]): PointDescriptor[] => {\n  const selectedDescs: PointDescriptor[] = [];\n  for (const lineIndex of selection) {\n    const glyphLine = glyph[lineIndex];\n    selectedDescs.push({ lineIndex, pointIndex: 0 });\n    selectedDescs.push({ lineIndex, pointIndex: (getNumColumns(glyphLine.value[0]) - 3) / 2 - 1 });\n  }\n  return listupConnectedPoints(glyph, selectedDescs)\n    .filter(({ lineIndex }) => !selection.includes(lineIndex));\n});\n","import { GlyphLine, Glyph, PointDescriptor } from './glyph';\n\nimport { BBX } from './bbx';\nimport { listupConnectedPoints, listupConnectedPointsOfSelection } from './connection';\n\nexport const applyGlyphLineOperation = (glyphLine: GlyphLine, tX: (x: number) => number, tY: (y: number) => number): GlyphLine => {\n  switch (glyphLine.value[0]) {\n    case 99: {\n      const value = glyphLine.value.slice();\n      value[3] = tX(value[3]);\n      value[4] = tY(value[4]);\n      value[5] = tX(value[5]);\n      value[6] = tY(value[6]);\n      return { value, partName: glyphLine.partName };\n    }\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 6:\n    case 7:\n    case 9: {\n      const value = glyphLine.value.slice();\n      for (let i = 3; i + 2 <= value.length; i += 2) {\n        value[i] = tX(value[i]);\n        value[i + 1] = tY(value[i + 1]);\n      }\n      return { value };\n    }\n    default:\n      return glyphLine;\n  }\n}\n\nexport const applyGlyphPointOperation = (glyph: Glyph, pdescs: PointDescriptor[], tX: (x: number) => number, tY: (y: number) => number): Glyph => {\n  if (pdescs.length === 0) {\n    return glyph;\n  }\n  const newGlyph = glyph.slice();\n  for (const { lineIndex, pointIndex } of pdescs) {\n    const glyphLine = newGlyph[lineIndex];\n    const newValue = glyphLine.value.slice();\n    newValue[3 + pointIndex * 2] = tX(newValue[3 + pointIndex * 2]);\n    newValue[3 + pointIndex * 2 + 1] = tY(newValue[3 + pointIndex * 2 + 1]);\n    newGlyph[lineIndex] = {\n      ...glyphLine,\n      value: newValue,\n    };\n  }\n  return newGlyph;\n};\n\n\nexport const moveSelectedGlyphLines = (glyph: Glyph, selection: number[], dx: number, dy: number): Glyph => {\n  if (selection.length === 0) {\n    return glyph;\n  }\n  const targetDescs = listupConnectedPointsOfSelection(glyph, selection);\n\n  const tX = (x: number) => Math.round(x + dx);\n  const tY = (y: number) => Math.round(y + dy);\n  glyph = glyph.map((glyphLine, index) => selection.includes(index)\n    ? applyGlyphLineOperation(glyphLine, tX, tY)\n    : glyphLine\n  );\n  glyph = applyGlyphPointOperation(glyph, targetDescs, tX, tY);\n  return glyph;\n};\n\nexport const moveSelectedPoint = (glyph: Glyph, selection: number[], pointIndex: number, dx: number, dy: number): Glyph => {\n  if (selection.length === 0) {\n    return glyph;\n  }\n  const lineIndex = selection[0];\n  const selectedDesc: PointDescriptor = { lineIndex, pointIndex };\n  const targetDescs = listupConnectedPoints(glyph, [selectedDesc])\n    .filter((targetDesc) => targetDesc.lineIndex !== lineIndex);\n  targetDescs.push(selectedDesc);\n\n  const tX = (x: number) => Math.round(x + dx);\n  const tY = (y: number) => Math.round(y + dy);\n  glyph = applyGlyphPointOperation(glyph, targetDescs, tX, tY);\n  return glyph;\n};\n\nexport const resizeGlyphLine = (glyphLine: GlyphLine, oldBBX: BBX, newBBX: BBX): GlyphLine => {\n  const [x11, y11, x12, y12] = oldBBX;\n  const [x21, y21, x22, y22] = newBBX;\n  const tX = (x: number) => Math.round(x21 + (x - x11) * (x22 - x21) / (x12 - x11));\n  const tY = (y: number) => Math.round(y21 + (y - y11) * (y22 - y21) / (y12 - y11));\n  return applyGlyphLineOperation(glyphLine, tX, tY);\n};\n\nexport const resizeSelectedGlyphLines = (glyph: Glyph, selection: number[], oldBBX: BBX, newBBX: BBX): Glyph => {\n  return glyph.map((glyphLine, index) => selection.includes(index)\n    ? resizeGlyphLine(glyphLine, oldBBX, newBBX)\n    : glyphLine\n  );\n};\n","import actionCreatorFactory from 'typescript-fsa';\n\nimport { StretchParam } from '../kageUtils/stretchparam';\n\nconst actionCreator = actionCreatorFactory('EDITOR');\n\nexport const editorActions = {\n  loadedBuhin: actionCreator<[string, string]>('LOAD_BUHIN_DATA'),\n  loadedStretchParam: actionCreator<[string, StretchParam]>('LOAD_STRETCH_PARAM'),\n\n  changeStrokeType: actionCreator<number>('CHANGE_STROKE_TYPE'),\n  changeHeadShapeType: actionCreator<number>('CHANGE_HEAD_SHAPE_TYPE'),\n  changeTailShapeType: actionCreator<number>('CHANGE_TAIL_SHAPE_TYPE'),\n  changeStretchCoeff: actionCreator<number>('CHANGE_STRETCH_COEFF'),\n\n  swapWithPrev: actionCreator('SWAP_WITH_PREV'),\n  swapWithNext: actionCreator('SWAP_WITH_NEXT'),\n\n  insertPart: actionCreator<string>('ADD_PART'),\n\n  paste: actionCreator('PASTE'),\n  copy: actionCreator('COPY_SELECTION'),\n  cut: actionCreator('CUT_SELECTION'),\n  delete: actionCreator('DELETE_SELECTION'),\n  decomposeSelected: actionCreator('DECOMPOSE_SELECTION'),\n  moveSelected: actionCreator<[number, number]>('MOVE_SELECTED'),\n\n  toggleFreehand: actionCreator('TOGGLE_FREEHAND_MODE'),\n\n  escape: actionCreator('PRESS_ESC_KEY'),\n\n  finishEdit: actionCreator('FINISH_EDIT'),\n};\n","// The temporary reverse proxy which adds 'Access-Control-Allow-Origin: *' header.\n// This header is required for cross-origin requests.\nconst apiUrlPrefix = 'https://asia-northeast1-ku6goma.cloudfunctions.net/gwproxy';\n\nconst callApi = async (path: string) => {\n  const response = await fetch(apiUrlPrefix + path);\n  if (!response.ok) {\n    throw new Error('API error occurred');\n  }\n  return new URLSearchParams(await response.text());\n};\n\nexport const getSource = async (name: string) => {\n  const result = await callApi(`/get_source.cgi?name=${encodeURIComponent(name)}`);\n  return result.get('data');\n};\n\nexport const search = async (query: string) => {\n  const result = await callApi(`/search4ge.cgi?query=${encodeURIComponent(query)}`);\n  return result.get('data')!;\n};\n\nexport const getCandidate = async (name: string) => {\n  const result = await callApi(`/get_candidate.cgi?name=${encodeURIComponent(name)}`);\n  return result.get('data')!;\n};\n","import memoizeOne from 'memoize-one';\n\nimport { Kage, Polygons } from '@kurgm/kage-engine';\nimport { Glyph, unparseGlyphLine } from './kageUtils/glyph';\nimport { StretchParam } from './kageUtils/stretchparam';\n\nimport store from './store';\nimport { editorActions } from './actions/editor';\n\nimport { getSource } from './callapi';\n\nexport type KShotai = Kage[\"kShotai\"];\n\nconst kage_ = new Kage();\n\nexport const getKage = (buhinMap: Map<string, string>, fallback?: (name: string) => string | undefined | void, shotai?: KShotai): Kage => {\n  kage_.kBuhin.search = (name) => {\n    let result = buhinMap.get(name);\n    if (typeof result === 'undefined') {\n      result = fallback?.(name) || '';\n    }\n    return result;\n  };\n  if (typeof shotai !== 'undefined') {\n    kage_.kShotai = shotai;\n  }\n  return kage_;\n};\n\nlet waiting = new Set<string>();\nconst loadAbsentBuhin = (name: string) => {\n  if (waiting.has(name)) {\n    return;\n  }\n  waiting.add(name);\n  getSource(name)\n    .then((source) => {\n      if (typeof source !== 'string') {\n        throw new Error(`failed to get buhin source of ${name}`);\n      }\n      const stretchMatch = /^0:1:0:(-?\\d+):(-?\\d+):(-?\\d+):(-?\\d+)(?=$|\\$)/.exec(source);\n      if (stretchMatch) {\n        const params: StretchParam = [\n          +stretchMatch[1] || 0,\n          +stretchMatch[2] || 0,\n          +stretchMatch[3] || 0,\n          +stretchMatch[4] || 0,\n        ];\n        store.dispatch(editorActions.loadedStretchParam([name, params]));\n      }\n      store.dispatch(editorActions.loadedBuhin([name, source]));\n      waiting.delete(name);\n    })\n    .catch((err) => console.error(err));\n};\n\nconst filteredGlyphIsEqual = (glyph1: Glyph, glyph2: Glyph) => (\n  glyph1.length === glyph2.length &&\n  glyph1.every((gLine1, index) => (\n    gLine1 === glyph2[index]\n  ))\n);\n\nconst makeGlyphSeparated_ = memoizeOne((glyph: Glyph, map: Map<string, string>, shotai: KShotai): Polygons[] => {\n  const data = glyph.map(unparseGlyphLine);\n  const result = getKage(map, loadAbsentBuhin, shotai).makeGlyphSeparated(data);\n  return result;\n}, ([glyph1, map1, shotai1], [glyph2, map2, shotai2]) => (\n  map1 === map2 &&\n  shotai1 === shotai2 &&\n  filteredGlyphIsEqual(glyph1, glyph2)\n));\n\nconst makeGlyphSeparatedFactory = (\n  isEqual?: (newArgs: Parameters<typeof makeGlyphSeparated_>, lastArgs: Parameters<typeof makeGlyphSeparated_>) => boolean\n) => memoizeOne((glyph: Glyph, map: Map<string, string>, shotai: KShotai): Polygons[] => {\n  return makeGlyphSeparated_(glyph, map, shotai);\n}, isEqual);\n\nexport const makeGlyphSeparated = makeGlyphSeparatedFactory();\nexport const makeGlyphSeparatedForSubmit = makeGlyphSeparatedFactory(\n  ([glyph1, map1, shotai1], [glyph2, map2, shotai2]) => (\n    map1 === map2 &&\n    shotai1 === shotai2 &&\n    filteredGlyphIsEqual(glyph1, glyph2)\n  )\n);\n","import memoizeOne from 'memoize-one';\n\nimport { GlyphLine } from './glyph';\n\nexport type BBX = [number, number, number, number];\n\nexport const bbxOfPoints = (points: [number, number][]): BBX => {\n  const xs = points.map(([x]) => x);\n  const ys = points.map(([, y]) => y);\n  return [\n    Math.min(...xs),\n    Math.min(...ys),\n    Math.max(...xs),\n    Math.max(...ys),\n  ];\n};\n\nexport const getGlyphLineBBX = (glyphLine: GlyphLine): BBX => {\n  switch (glyphLine.value[0]) {\n    case 99:\n      return bbxOfPoints([\n        [glyphLine.value[3], glyphLine.value[4]],\n        [glyphLine.value[5], glyphLine.value[6]],\n      ]);\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 6:\n    case 7:\n    case 9: {\n      const points: [number, number][] = [];\n      for (let i = 3; i + 2 <= glyphLine.value.length; i += 2) {\n        points.push([glyphLine.value[i], glyphLine.value[i + 1]]);\n      }\n      return bbxOfPoints(points);\n    }\n    default:\n      return bbxOfPoints([]);\n  }\n}\n\nexport const mergeBBX = ([x11, y11, x12, y12]: BBX, [x21, y21, x22, y22]: BBX): BBX => [\n  Math.min(x11, x21),\n  Math.min(y11, y21),\n  Math.max(x12, x22),\n  Math.max(y12, y22),\n];\n\nexport const getGlyphLinesBBX = memoizeOne((glyphLines: GlyphLine[]): BBX => {\n  return glyphLines.map(getGlyphLineBBX).reduce(mergeBBX, bbxOfPoints([]));\n}, ([gLines1], [gLines2]) => (\n  gLines1.length === gLines2.length &&\n  gLines1.every((gLine1, index) => gLine1 === gLines2[index])\n));\n","import { createSelector } from 'reselect';\n\nimport { RectPointPosition } from '../actions/drag';\n\nimport { AppState } from '../reducers';\n\nimport { Glyph, GlyphLine } from '../kageUtils/glyph';\nimport { getGlyphLinesBBX } from '../kageUtils/bbx';\nimport { moveSelectedGlyphLines, moveSelectedPoint, resizeSelectedGlyphLines } from '../kageUtils/transform';\nimport { drawFreehand } from '../kageUtils/freehand';\n\nexport const resizeSelected = (glyph: Glyph, selection: number[], position: RectPointPosition, dx: number, dy: number): Glyph => {\n  if (selection.length === 1) {\n    const selectedGlyphLine = glyph[selection[0]];\n    switch (selectedGlyphLine.value[0]) {\n      case 0:\n      case 9:\n      case 99: {\n        const newValue = selectedGlyphLine.value.slice();\n        switch (position) {\n          case RectPointPosition.north:\n            newValue[4] += dy;\n            break;\n          case RectPointPosition.west:\n            newValue[3] += dx;\n            break;\n          case RectPointPosition.south:\n            newValue[6] += dy;\n            break;\n          case RectPointPosition.east:\n            newValue[5] += dx;\n            break;\n          case RectPointPosition.southeast:\n            newValue[5] += dx;\n            newValue[6] += dy;\n            break;\n          default:\n            // exhaustive?\n            ((_x: never) => { })(position);\n        }\n        const newGlyphLine: GlyphLine = selectedGlyphLine.value[0] === 99\n          ? { value: newValue, partName: selectedGlyphLine.partName }\n          : { value: newValue };\n        return glyph.map((glyphLine, index) => index === selection[0] ? newGlyphLine : glyphLine);\n      }\n    }\n  }\n  const minSize = 20;\n  const oldBBX = getGlyphLinesBBX(selection.map((index) => glyph[index]));\n  const newBBX = oldBBX.slice() as typeof oldBBX;\n  switch (position) {\n    case RectPointPosition.north:\n      newBBX[1] = Math.min(newBBX[1] + dy, newBBX[3] - minSize);\n      break;\n    case RectPointPosition.west:\n      newBBX[0] = Math.min(newBBX[0] + dx, newBBX[2] - minSize);\n      break;\n    case RectPointPosition.south:\n      newBBX[3] = Math.max(newBBX[3] + dy, newBBX[1] + minSize);\n      break;\n    case RectPointPosition.east:\n      newBBX[2] = Math.max(newBBX[2] + dx, newBBX[0] + minSize);\n      break;\n    case RectPointPosition.southeast:\n      newBBX[2] = Math.max(newBBX[2] + dx, newBBX[0] + minSize);\n      newBBX[3] = Math.max(newBBX[3] + dy, newBBX[1] + minSize);\n      break;\n    default:\n      // exhaustive?\n      ((_x: never) => { })(position);\n  }\n  return resizeSelectedGlyphLines(glyph, selection, oldBBX, newBBX);\n};\n\nexport const draggedGlyphSelector = createSelector([\n  (state: AppState) => state.glyph,\n  (state: AppState) => state.selection,\n  (state: AppState) => state.dragSelection,\n  (state: AppState) => state.dragPoint,\n  (state: AppState) => state.resizeSelection,\n  (state: AppState) => state.freehandStroke,\n], (glyph, selection, dragSelection, dragPoint, resizeSelection, freehandStroke) => {\n  if (dragSelection) {\n    const [x1, y1, x2, y2] = dragSelection;\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    glyph = moveSelectedGlyphLines(glyph, selection, dx, dy);\n  } else if (dragPoint) {\n    const [pointIndex, [x1, y1, x2, y2]] = dragPoint;\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    glyph = moveSelectedPoint(glyph, selection, pointIndex, dx, dy);\n  } else if (resizeSelection) {\n    const [position, [x1, y1, x2, y2]] = resizeSelection;\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    glyph = resizeSelected(glyph, selection, position, dx, dy);\n  } else if (freehandStroke) {\n    glyph = drawFreehand(glyph, freehandStroke);\n  }\n  return glyph;\n});\n","import { GlyphLine } from './glyph';\n\nexport type StretchParam = [number, number, number, number];\nexport type StretchPositions = [number, number, number, number];\n\nexport const getStretchPositions = (glyphLine: GlyphLine): StretchPositions | null => {\n  if (glyphLine.value[0] !== 99) {\n    return null;\n  }\n  const sx = glyphLine.value[9];\n  const sy = glyphLine.value[10];\n  const tx = glyphLine.value[1];\n  const ty = glyphLine.value[2];\n  return [sx, sy, tx, ty];\n};\n\nexport const setStretchPositions = (glyphLine: GlyphLine, positions: StretchPositions): GlyphLine => {\n  if (glyphLine.value[0] !== 99) {\n    return glyphLine;\n  }\n  const [sx, sy, tx, ty] = positions;\n\n  const newValue = glyphLine.value.slice();\n  newValue[9] = sx;\n  newValue[10] = sy;\n  newValue[1] = tx;\n  newValue[2] = ty;\n  return { value: newValue, partName: glyphLine.partName };\n};\n\nexport const normalizeStretchPositions = (positions: StretchPositions): StretchPositions => {\n  let [sx, sy, tx, ty] = positions;\n  if (tx <= 100) {\n    tx += 200;\n    sx = sy = 0;\n  }\n  return [sx, sy, tx, ty];\n};\n\nexport const calcStretchPositions = (param: StretchParam, k: number): StretchPositions => {\n  const [x0, y0, x1, y1] = param;\n  return [\n    x0 - 100,\n    y0 - 100,\n    x0 + (x1 - x0) * k / 20 + 100,\n    y0 + (y1 - y0) * k / 20 - 100,\n  ];\n};\n\nconst clampStretchScalar = (k: number): number => Math.max(-10, Math.min(10, k));\n\nexport const calcStretchScalar = (param: StretchParam, positions: StretchPositions): number => {\n  const [x0, y0, x1, y1] = param;\n  if (x0 === x1 && y0 === y1) {\n    return 0;\n  }\n  const [sx, sy, tx, ty] = normalizeStretchPositions(positions);\n  if (sx === tx - 200 && sy === ty) {\n    return 0;\n  }\n  return clampStretchScalar(Math.round(\n    Math.abs(x0 - x1) > Math.abs(y0 - y1)\n      ? (tx - 100 - x0) / (x1 - x0) * 20\n      : (ty + 100 - y0) / (y1 - y0) * 20\n  )) || 0;\n}\n","import { getKage } from '../kage';\n\nimport { GlyphLine, parseGlyph, unparseGlyph, unparseGlyphLine, getNumColumns, Glyph } from './glyph';\nimport { getStretchPositions, normalizeStretchPositions, setStretchPositions } from './stretchparam';\nimport { applyGlyphLineOperation } from './transform';\n\nexport const decompose = (glyphLine: GlyphLine, buhinMap: Map<string, string>): GlyphLine[] => {\n  if (glyphLine.value[0] !== 99) {\n    return [glyphLine];\n  }\n  const buhinSource = buhinMap.get(glyphLine.partName!);\n  if (!buhinSource) {\n    return [glyphLine];\n  }\n\n  let failedBuhin = false;\n  const kage = getKage(buhinMap, () => {\n    failedBuhin = true;\n  });\n\n  const glyph = parseGlyph(buhinSource);\n\n  const strokesArray =\n    // @ts-ignore 2445\n    kage.getEachStrokes(\n      unparseGlyph(glyph)\n    );\n  const box =\n    // @ts-ignore 2445\n    kage.getBox(\n      strokesArray\n    );\n\n  const x1 = glyphLine.value[3];\n  const y1 = glyphLine.value[4];\n  const x2 = glyphLine.value[5];\n  const y2 = glyphLine.value[6];\n  const [sx, sy, tx, ty] = normalizeStretchPositions(getStretchPositions(glyphLine)!);\n  const isStretchEnabled = !(sx === tx - 200 && sy === ty);\n\n  if (isStretchEnabled && failedBuhin) {\n    // box may be incorrect\n    return [glyphLine];\n  }\n\n  return glyph.map((oldGlyphLine) => {\n    const tX = (x: number) => {\n      const stretchedX = isStretchEnabled\n        ? kage.stretch(tx - 200, sx, x, box.minX, box.maxX)\n        : x;\n      return Math.round(stretchedX / 200 * (x2 - x1) + x1);\n    };\n    const tY = (y: number) => {\n      const stretchedY = isStretchEnabled\n        ? kage.stretch(ty, sy, y, box.minY, box.maxY)\n        : y;\n      return Math.round(stretchedY / 200 * (y2 - y1) + y1);\n    };\n    const newGlyphLine = applyGlyphLineOperation(oldGlyphLine, tX, tY);\n\n    if (!(isStretchEnabled && newGlyphLine.value[0] === 99)) {\n      return newGlyphLine;\n    }\n\n    const [sx2, sy2, tx2, ty2] = normalizeStretchPositions(getStretchPositions(newGlyphLine)!);\n    if (!(sx2 === tx2 - 200 && sy2 === ty2)) {\n      // Cannot compose two stretches...\n      return newGlyphLine;\n    }\n\n    const px1 = newGlyphLine.value[3];\n    const py1 = newGlyphLine.value[4];\n    const px2 = newGlyphLine.value[5];\n    const py2 = newGlyphLine.value[6];\n\n    if (px1 === px2 || py1 === py2) {\n      return newGlyphLine;\n    }\n\n    const revX = (x: number) => (x - px1) / (px2 - px1) * 200;\n    const revY = (y: number) => (y - py1) / (py2 - py1) * 200;\n    return setStretchPositions(newGlyphLine, [\n      revX(sx2 + 100),\n      revY(sy2 + 100),\n      revX(tx2 - 100) + 100,\n      revY(ty2 + 100),\n    ]);\n  });\n};\n\nexport const decomposeDeep = (glyphLine: GlyphLine, buhinMap: Map<string, string>): GlyphLine[] => {\n  const kage = getKage(buhinMap);\n  const strokesArray =\n    // @ts-ignore 2445\n    kage.getEachStrokes(\n      unparseGlyphLine(glyphLine)\n    );\n  return strokesArray.map((stroke): GlyphLine => {\n    const columns = getNumColumns(stroke.a1);\n    return {\n      value: [\n        stroke.a1,\n        stroke.a2_100 + stroke.kirikuchiAdjustment * 100 + stroke.tateAdjustment * 1000,\n        stroke.a3_100 + stroke.opt3 * 100 + stroke.mageAdjustment * 1000,\n        stroke.x1,\n        stroke.y1,\n        stroke.x2,\n        stroke.y2,\n        stroke.x3,\n        stroke.y3,\n        stroke.x4,\n        stroke.y4,\n      ].slice(0, columns),\n    };\n  });\n};\n\nexport const decomposeDeepGlyph = (glyph: Glyph, buhinMap: Map<string, string>): GlyphLine[] => {\n  return glyph.map((glyphLine) => decomposeDeep(glyphLine, buhinMap)).reduce((a, b) => a.concat(b), []);\n};\n","import memoizeOne from 'memoize-one';\n\nimport { GlyphLine, getNumColumns } from './glyph';\n\nexport const strokeTypes = [1, 2, 3, 4, 6, 7];\n\nexport const headShapeTypes: Record<number, number[]> = {\n  1: [0, 2, 32, 12, 22],\n  2: [0, 32, 12, 22, 7],\n  3: [0, 32, 12, 22],\n  4: [0, 22],\n  6: [0, 32, 12, 22, 7],\n  7: [0, 32, 12, 22],\n};\n\nexport const tailShapeTypes: Record<number, number[]> = {\n  1: [0, 2, 32, 13, 23, 4, 313, 413, 24],\n  2: [7, 0, 8, 4, 5],\n  3: [0, 5],\n  4: [0, 5],\n  6: [7, 0, 8, 4, 5],\n  7: [7],\n};\n\nexport const changeStrokeType = (glyphLine: GlyphLine, newType: number): GlyphLine => {\n  const oldType = glyphLine.value[0];\n  if (!strokeTypes.includes(oldType) || !strokeTypes.includes(newType)) {\n    return glyphLine;\n  }\n  const newGlyphLine = {\n    value: glyphLine.value.slice(),\n  };\n\n  newGlyphLine.value[0] = newType;\n\n  if (!headShapeTypes[newType].includes(newGlyphLine.value[1])) {\n    newGlyphLine.value[1] = headShapeTypes[newType][0];\n  }\n  if (!tailShapeTypes[newType].includes(newGlyphLine.value[2])) {\n    newGlyphLine.value[2] = tailShapeTypes[newType][0];\n  }\n\n  const oldNumPoints = (getNumColumns(oldType) - 3) / 2;\n  const newNumPoints = (getNumColumns(newType) - 3) / 2;\n  if (oldNumPoints === newNumPoints) {\n    return newGlyphLine;\n  }\n  if (oldNumPoints === 2 && newNumPoints === 3) {\n    const x1 = newGlyphLine.value[3];\n    const y1 = newGlyphLine.value[4];\n    const x3 = newGlyphLine.value[5];\n    const y3 = newGlyphLine.value[6];\n\n    const x2 = Math.round((x1 + x3) / 2);\n    const y2 = Math.round((y1 + y3) / 2);\n    newGlyphLine.value = newGlyphLine.value.slice(0, 3).concat(\n      [x1, y1, x2, y2, x3, y3]\n    );\n    return newGlyphLine;\n  }\n  if (oldNumPoints === 2 && newNumPoints === 4) {\n    const x1 = newGlyphLine.value[3];\n    const y1 = newGlyphLine.value[4];\n    const x4 = newGlyphLine.value[5];\n    const y4 = newGlyphLine.value[6];\n\n    const x2 = Math.round((2 * x1 + x4) / 3);\n    const y2 = Math.round((2 * y1 + y4) / 3);\n    const x3 = Math.round((x1 + 2 * x4) / 3);\n    const y3 = Math.round((y1 + 2 * y4) / 3);\n    newGlyphLine.value = newGlyphLine.value.slice(0, 3).concat(\n      [x1, y1, x2, y2, x3, y3, x4, y4]\n    );\n    return newGlyphLine;\n  }\n  if (oldNumPoints === 3 && newNumPoints === 2) {\n    const x1 = newGlyphLine.value[3];\n    const y1 = newGlyphLine.value[4];\n    const x2 = newGlyphLine.value[7];\n    const y2 = newGlyphLine.value[8];\n    newGlyphLine.value = newGlyphLine.value.slice(0, 3).concat(\n      [x1, y1, x2, y2]\n    );\n    return newGlyphLine;\n  }\n  if (oldNumPoints === 3 && newNumPoints === 4) {\n    const x1 = newGlyphLine.value[3];\n    const y1 = newGlyphLine.value[4];\n    const xm = newGlyphLine.value[5];\n    const ym = newGlyphLine.value[6];\n    const x4 = newGlyphLine.value[7];\n    const y4 = newGlyphLine.value[8];\n\n    const x2 = Math.round((x1 + 2 * xm) / 3);\n    const y2 = Math.round((y1 + 2 * ym) / 3);\n    const x3 = Math.round((x4 + 2 * xm) / 3);\n    const y3 = Math.round((y4 + 2 * ym) / 3);\n    newGlyphLine.value = newGlyphLine.value.slice(0, 3).concat(\n      [x1, y1, x2, y2, x3, y3, x4, y4]\n    );\n    return newGlyphLine;\n  }\n  if (oldNumPoints === 4 && newNumPoints === 2) {\n    const x1 = newGlyphLine.value[3];\n    const y1 = newGlyphLine.value[4];\n    const x2 = newGlyphLine.value[9];\n    const y2 = newGlyphLine.value[10];\n    newGlyphLine.value = newGlyphLine.value.slice(0, 3).concat(\n      [x1, y1, x2, y2]\n    );\n    return newGlyphLine;\n  }\n  if (oldNumPoints === 4 && newNumPoints === 3) {\n    const x1 = newGlyphLine.value[3];\n    const y1 = newGlyphLine.value[4];\n    const xm1 = newGlyphLine.value[5];\n    const ym1 = newGlyphLine.value[6];\n    const xm2 = newGlyphLine.value[7];\n    const ym2 = newGlyphLine.value[8];\n    const x3 = newGlyphLine.value[9];\n    const y3 = newGlyphLine.value[10];\n\n    const x2 = Math.round((xm1 + xm2) / 2);\n    const y2 = Math.round((ym1 + ym2) / 2);\n    newGlyphLine.value = newGlyphLine.value.slice(0, 3).concat(\n      [x1, y1, x2, y2, x3, y3]\n    );\n    return newGlyphLine;\n  }\n  return newGlyphLine;\n};\n\nconst validStrokeShapeTypes: [number, number, number][] = [\n  [1, 0, 0],\n  [1, 0, 2],\n  [1, 0, 32],\n  [1, 0, 13],\n  [1, 0, 23],\n  [1, 0, 4],\n  [1, 0, 313],\n  [1, 0, 413],\n  [1, 0, 24],\n  [1, 2, 0],\n  [1, 2, 2],\n  [1, 32, 0],\n  [1, 32, 32],\n  [1, 32, 13],\n  [1, 32, 23],\n  [1, 32, 4],\n  [1, 32, 313],\n  [1, 32, 413],\n  [1, 32, 24],\n  [1, 12, 0],\n  [1, 12, 32],\n  [1, 12, 13],\n  [1, 12, 23],\n  [1, 12, 313],\n  [1, 12, 413],\n  [1, 12, 24],\n  [1, 22, 0],\n  [1, 22, 32],\n  [1, 22, 13],\n  [1, 22, 23],\n  [1, 22, 4],\n  [1, 22, 313],\n  [1, 22, 413],\n  [1, 22, 24],\n  [2, 0, 7],\n  [2, 0, 5],\n  [2, 32, 7],\n  [2, 32, 4],\n  [2, 32, 5],\n  [2, 12, 7],\n  [2, 22, 7],\n  [2, 22, 4],\n  [2, 22, 5],\n  [2, 7, 0],\n  [2, 7, 8],\n  [2, 7, 4],\n  [3, 0, 0],\n  [3, 0, 5],\n  [3, 32, 0],\n  [3, 32, 5],\n  [3, 12, 0],\n  [3, 12, 5],\n  [3, 22, 0],\n  [3, 22, 5],\n  [4, 0, 0],\n  [4, 0, 5],\n  [4, 22, 0],\n  [4, 22, 5],\n  [6, 0, 7],\n  [6, 0, 5],\n  [6, 32, 7],\n  [6, 32, 4],\n  [6, 32, 5],\n  [6, 12, 7],\n  [6, 22, 7],\n  [6, 22, 4],\n  [6, 22, 5],\n  [6, 7, 0],\n  [6, 7, 8],\n  [6, 7, 4],\n  [7, 0, 7],\n  [7, 32, 7],\n  [7, 12, 7],\n  [7, 22, 7],\n];\n\nexport const isValidStrokeShapeTypes = memoizeOne((stroke: GlyphLine) => {\n  if (!strokeTypes.includes(stroke.value[0])) {\n    return true;\n  }\n\n  return validStrokeShapeTypes.some(([s0, s1, s2]) => (\n    s0 === stroke.value[0] &&\n    s1 === stroke.value[1] &&\n    s2 === stroke.value[2]\n  ));\n});\n","import { ReducerBuilder } from 'typescript-fsa-reducers';\n\nimport { editorActions } from '../actions/editor';\n\nimport { Glyph, GlyphLine } from '../kageUtils/glyph';\nimport { getGlyphLinesBBX } from '../kageUtils/bbx';\nimport { decompose } from '../kageUtils/decompose';\nimport { calcStretchPositions, setStretchPositions } from '../kageUtils/stretchparam';\nimport { changeStrokeType } from '../kageUtils/stroketype';\nimport { applyGlyphLineOperation, moveSelectedGlyphLines } from '../kageUtils/transform';\n\nimport { AppState } from '.';\n\nconst setGlyphLine = (glyph: Glyph, index: number, glyphLine: GlyphLine): Glyph => {\n  const newGlyph = glyph.slice();\n  newGlyph[index] = glyphLine;\n  return newGlyph;\n};\n\nexport default (builder: ReducerBuilder<AppState>) => builder\n  .case(editorActions.loadedBuhin, (state, [name, data]) => {\n    const newMap = new Map(state.buhinMap);\n    newMap.set(name, data);\n    return {\n      ...state,\n      buhinMap: newMap,\n    };\n  })\n  .case(editorActions.loadedStretchParam, (state, [name, param]) => {\n    const newMap = new Map(state.stretchParamMap);\n    newMap.set(name, param);\n    return {\n      ...state,\n      stretchParamMap: newMap,\n    };\n  })\n\n  .case(editorActions.changeStrokeType, (state, newType) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    const newGLine = changeStrokeType(state.glyph[lineIndex], newType);\n    return {\n      ...state,\n      glyph: setGlyphLine(state.glyph, lineIndex, newGLine),\n    };\n  })\n  .case(editorActions.changeHeadShapeType, (state, newType) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    const newGLine = {\n      ...state.glyph[lineIndex],\n      value: state.glyph[lineIndex].value.slice(),\n    };\n    newGLine.value[1] = newType;\n    return {\n      ...state,\n      glyph: setGlyphLine(state.glyph, lineIndex, newGLine),\n    };\n  })\n  .case(editorActions.changeTailShapeType, (state, newType) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    const newGLine = {\n      ...state.glyph[lineIndex],\n      value: state.glyph[lineIndex].value.slice(),\n    };\n    newGLine.value[2] = newType;\n    return {\n      ...state,\n      glyph: setGlyphLine(state.glyph, lineIndex, newGLine),\n    };\n  })\n  .case(editorActions.changeStretchCoeff, (state, value) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    const selectedLine = state.glyph[lineIndex];\n    if (!selectedLine.partName) {\n      return state;\n    }\n    const stretchParam = state.stretchParamMap.get(selectedLine.partName);\n    if (!stretchParam) {\n      return state;\n    }\n    const newGLine = setStretchPositions(\n      state.glyph[lineIndex],\n      calcStretchPositions(stretchParam, value)\n    );\n    return {\n      ...state,\n      glyph: setGlyphLine(state.glyph, lineIndex, newGLine),\n    };\n  })\n\n  .case(editorActions.swapWithPrev, (state) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    if (lineIndex === 0) {\n      return state;\n    }\n    const newGlyph = state.glyph.slice();\n    newGlyph[lineIndex - 1] = state.glyph[lineIndex];\n    newGlyph[lineIndex] = state.glyph[lineIndex - 1];\n    return {\n      ...state,\n      glyph: newGlyph,\n      selection: [lineIndex - 1],\n    };\n  })\n  .case(editorActions.swapWithNext, (state) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    if (lineIndex === state.glyph.length - 1) {\n      return state;\n    }\n    const newGlyph = state.glyph.slice();\n    newGlyph[lineIndex + 1] = state.glyph[lineIndex];\n    newGlyph[lineIndex] = state.glyph[lineIndex + 1];\n    return {\n      ...state,\n      glyph: newGlyph,\n      selection: [lineIndex + 1],\n    };\n  })\n\n  .case(editorActions.insertPart, (state, partName) => ({\n    ...state,\n    glyph: state.glyph.concat([{\n      value: [99, 0, 0, 0, 0, 200, 200, 0, 0, 0],\n      partName,\n    }]),\n    selection: [state.glyph.length],\n  }))\n\n  .case(editorActions.paste, (state) => ({\n    ...state,\n    glyph: state.glyph.concat(state.clipboard),\n    selection: state.clipboard.map((_gLine, index) => state.glyph.length + index),\n  }))\n  .case(editorActions.copy, (state) => {\n    const targetLines = state.selection.map((index) => state.glyph[index]);\n    const [x1, y1] = getGlyphLinesBBX(targetLines);\n    const tX = (x: number) => 230 + x - x1;\n    const tY = (y: number) => 20 + y - y1;\n    return {\n      ...state,\n      clipboard: state.selection.map((index) => (\n        applyGlyphLineOperation(state.glyph[index], tX, tY)\n      )),\n    };\n  })\n  .case(editorActions.cut, (state) => ({\n    ...state,\n    glyph: state.glyph.filter((_gLine, index) => !state.selection.includes(index)),\n    clipboard: state.selection.map((index) => state.glyph[index]),\n    selection: [],\n  }))\n  .case(editorActions.delete, (state) => ({\n    ...state,\n    glyph: state.glyph.filter((_gLine, index) => !state.selection.includes(index)),\n    selection: [],\n  }))\n\n  .case(editorActions.decomposeSelected, (state) => {\n    let newGlyph: Glyph = [];\n    let newSelection: number[] = [];\n    state.glyph.forEach((gLine, index) => {\n      if (!state.selection.includes(index)) {\n        newGlyph.push(gLine);\n        return;\n      }\n      const newLines = decompose(gLine, state.buhinMap);\n      newSelection = newSelection.concat(\n        newLines.map((_gLine, subindex) => newGlyph.length + subindex)\n      );\n      newGlyph = newGlyph.concat(newLines);\n    });\n    return {\n      ...state,\n      glyph: newGlyph,\n      selection: newSelection,\n    };\n  })\n  .case(editorActions.moveSelected, (state, [dx, dy]) => ({\n    ...state,\n    glyph: moveSelectedGlyphLines(state.glyph, state.selection, dx, dy),\n  }))\n\n  .case(editorActions.toggleFreehand, (state) => ({\n    ...state,\n    selection: state.freehandMode ? state.selection : [],\n    freehandMode: !state.freehandMode,\n  }))\n\n  .case(editorActions.escape, (state) => {\n    if (state.showOptionModal) {\n      return {\n        ...state,\n        showOptionModal: false,\n      }\n    }\n    if (state.freehandMode) {\n      return {\n        ...state,\n        freehandMode: false,\n      };\n    }\n    if (state.selection.length) {\n      return {\n        ...state,\n        selection: [],\n      };\n    }\n    return state;\n  })\n\n  .case(editorActions.finishEdit, (state) => ({\n    ...state,\n    exiting: true,\n  }));\n","import actionCreatorFactory from 'typescript-fsa';\n\nimport { KShotai } from '../kage';\n\nconst actionCreator = actionCreatorFactory('DISPLAY');\n\nexport const displayActions = {\n  openOptionModal: actionCreator('OPEN_OPTION_MODAL'),\n  closeOptionModal: actionCreator('CLOSE_OPTION_MODAL'),\n\n  setGridDisplay: actionCreator<boolean>('SET_GRID_DISPLAY'),\n  setGridOriginX: actionCreator<number>('SET_GRID_ORIGIN_X'),\n  setGridOriginY: actionCreator<number>('SET_GRID_ORIGIN_Y'),\n  setGridSpacingX: actionCreator<number>('SET_GRID_SPACING_X'),\n  setGridSpacingY: actionCreator<number>('SET_GRID_SPACING_Y'),\n\n  setShotai: actionCreator<KShotai>('SET_SHOTAI'),\n  setStrokeCenterLineDisplay: actionCreator<boolean>('SET_STROKE_CENTER_LINE_DISPLAY'),\n};\n","import actionCreatorFactory from 'typescript-fsa';\n\nconst actionCreator = actionCreatorFactory('UNDO');\n\nexport const undoActions = {\n  undo: actionCreator('UNDO'),\n  redo: actionCreator('REDO'),\n};\n","import { reducerWithInitialState } from 'typescript-fsa-reducers';\n\nimport { RectPointPosition, CTMInv } from '../actions/drag';\n\nimport { GlyphLine, Glyph, parseGlyph } from '../kageUtils/glyph';\nimport { StretchParam } from '../kageUtils/stretchparam';\nimport args from '../args';\nimport { KShotai } from '../kage';\n\nimport select from './select';\nimport drag from './drag';\nimport editor from './editor';\nimport display, { GridState } from './display';\n\nimport { undoable } from './undo';\n\nexport interface AppState {\n  glyph: Glyph;\n  selection: number[];\n\n  areaSelectRect: [number, number, number, number] | null;\n  dragSelection: [number, number, number, number] | null;\n  dragPoint: [number, [number, number, number, number]] | null;\n  resizeSelection: [RectPointPosition, [number, number, number, number]] | null;\n  freehandStroke: [number, number][] | null;\n  ctmInv: CTMInv | null;\n  freehandMode: boolean;\n\n  buhinMap: Map<string, string>;\n  stretchParamMap: Map<string, StretchParam>;\n  clipboard: GlyphLine[];\n  undoStacks: {\n    undo: Glyph[];\n    redo: Glyph[];\n  };\n  exiting: boolean;\n\n  showOptionModal: boolean;\n  grid: GridState;\n  showStrokeCenterLine: boolean;\n  shotai: KShotai;\n}\n\nconst initialState: AppState = {\n  glyph: parseGlyph(args.get('data') || ''),\n  selection: [],\n\n  areaSelectRect: null,\n  dragSelection: null,\n  dragPoint: null,\n  resizeSelection: null,\n  freehandStroke: null,\n  ctmInv: null,\n  freehandMode: false,\n\n  buhinMap: new Map<string, string>(),\n  stretchParamMap: new Map<string, StretchParam>(),\n  clipboard: [],\n  undoStacks: { undo: [], redo: [] },\n  exiting: false,\n\n  showOptionModal: false,\n  grid: {\n    display: true,\n    originX: 0,\n    originY: 0,\n    spacingX: 20,\n    spacingY: 20,\n  },\n  showStrokeCenterLine: false,\n  shotai: 0, // kMincho\n};\n\nconst reducer = undoable(\n  reducerWithInitialState(initialState)\n    .withHandling(select)\n    .withHandling(drag)\n    .withHandling(editor)\n    .withHandling(display)\n);\n\nexport default reducer;\n","import { Reducer } from 'redux';\nimport { reducerWithInitialState } from 'typescript-fsa-reducers';\n\nimport { isGlyphDeepEqual } from \"../kageUtils/glyph\";\n\nimport { undoActions } from '../actions/undo';\n\nimport { AppState } from \".\";\n\nconst UNDO_MAX_TIMES = 30;\n\nconst pushUndo = (oldState: AppState, newState: AppState): AppState => {\n  if (isGlyphDeepEqual(oldState.glyph, newState.glyph)) {\n    return newState;\n  }\n  return {\n    ...newState,\n    undoStacks: {\n      undo: oldState.undoStacks.undo.concat([oldState.glyph]).slice(-UNDO_MAX_TIMES),\n      redo: [],\n    },\n  };\n};\n\nexport const undoable = (reducer: Reducer<AppState>): Reducer<AppState> => {\n  const initialState = reducer(undefined, { type: '_INIT' });\n  return reducerWithInitialState(initialState)\n    .case(undoActions.undo, (state) => {\n      if (state.undoStacks.undo.length === 0) {\n        return state;\n      }\n      return {\n        ...state,\n        glyph: state.undoStacks.undo[state.undoStacks.undo.length - 1],\n        selection: [], // TODO: select changed lines?\n        undoStacks: {\n          undo: state.undoStacks.undo.slice(0, -1),\n          redo: state.undoStacks.redo.concat([state.glyph]),\n        },\n      };\n    })\n    .case(undoActions.redo, (state) => {\n      if (state.undoStacks.redo.length === 0) {\n        return state;\n      }\n      return {\n        ...state,\n        glyph: state.undoStacks.redo[state.undoStacks.redo.length - 1],\n        selection: [], // TODO: select changed lines?\n        undoStacks: {\n          undo: state.undoStacks.undo.concat([state.glyph]),\n          redo: state.undoStacks.redo.slice(0, -1),\n        },\n      };\n    })\n    .default((oldState, action) => {\n      const newState = reducer(oldState, action);\n      if (!oldState) {\n        return newState;\n      }\n      return pushUndo(oldState, newState);\n    });\n};\n","import { ReducerBuilder } from 'typescript-fsa-reducers';\n\nimport { selectActions } from '../actions/select';\n\nimport { AppState } from '.';\n\nexport default (builder: ReducerBuilder<AppState>) => builder\n  .case(selectActions.selectSingle, (state, index) => ({\n    ...state,\n    selection: [index],\n  }))\n  .case(selectActions.selectAddSingle, (state, index) => ({\n    ...state,\n    selection: state.selection.includes(index) ? state.selection : state.selection.concat([index]),\n  }))\n  .case(selectActions.selectRemoveSingle, (state, index) => ({\n    ...state,\n    selection: state.selection.filter((index2) => index !== index2),\n  }))\n  .case(selectActions.selectAll, (state) => ({\n    ...state,\n    selection: state.glyph.map((_gLine, index) => index),\n  }))\n  .case(selectActions.selectDeselected, (state) => ({\n    ...state,\n    selection: state.glyph.map((_gLine, index) => index).filter((index) => !state.selection.includes(index)),\n  }))\n  .case(selectActions.selectNone, (state) => ({\n    ...state,\n    selection: [],\n  }))\n  .case(selectActions.selectPrev, (state) => {\n    if (state.glyph.length === 0) {\n      return { ...state, selection: [] };\n    }\n    const firstSelected = state.selection.length === 0 ? 0 : Math.min(...state.selection);\n    return {\n      ...state,\n      selection: [(firstSelected - 1 + state.glyph.length) % state.glyph.length],\n    };\n  })\n  .case(selectActions.selectNext, (state) => {\n    if (state.glyph.length === 0) {\n      return { ...state, selection: [] };\n    }\n    const firstSelected = state.selection.length === 0 ? -1 : Math.max(...state.selection);\n    return {\n      ...state,\n      selection: [(firstSelected + 1 + state.glyph.length) % state.glyph.length],\n    };\n  });\n","import { ReducerBuilder } from 'typescript-fsa-reducers';\n\n// @ts-ignore\nimport { polygonInPolygon, polygonIntersectsPolygon } from 'geometric';\n\nimport { dragActions } from '../actions/drag';\n\nimport { moveSelectedGlyphLines, moveSelectedPoint } from '../kageUtils/transform';\nimport { Glyph } from '../kageUtils/glyph';\nimport { makeGlyphSeparated, KShotai } from '../kage';\n\nimport { AppState } from '.';\nimport { resizeSelected } from '../selectors/draggedGlyph';\nimport { drawFreehand } from '../kageUtils/freehand';\n\nconst performAreaSelect = (glyph: Glyph, buhinMap: Map<string, string>, shotai: KShotai, x1: number, y1: number, x2: number, y2: number): number[] => {\n  const polygonsSep = makeGlyphSeparated(glyph, buhinMap, shotai);\n  const result = [];\n\n  const gAreaPolygon: [number, number][] = [\n    [x1, y1],\n    [x1, y2],\n    [x2, y2],\n    [x2, y1],\n    [x1, y1],\n  ];\n\n  for (let index = 0; index < polygonsSep.length; index++) {\n    const polygons = polygonsSep[index];\n    if (polygons.array.some((polygon) => {\n      const gPolygon = polygon.array.map(({ x, y }) => [x, y]);\n      gPolygon.push(gPolygon[0]); // close polygon\n\n      return (\n        polygonInPolygon(gAreaPolygon, gPolygon) ||\n        polygonInPolygon(gPolygon, gAreaPolygon) ||\n        polygonIntersectsPolygon(gAreaPolygon, gPolygon)\n      ) as boolean;\n    })) {\n      result.push(index);\n    }\n  }\n  return result;\n};\n\nexport default (builder: ReducerBuilder<AppState>) => builder\n  .case(dragActions.startBackgroundDrag, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    if (state.freehandMode) {\n      return {\n        ...state,\n        freehandStroke: [[x1, y1]],\n      };\n    }\n    return {\n      ...state,\n      areaSelectRect: [x1, y1, x1, y1],\n    };\n  })\n  .case(dragActions.startSelectionDrag, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      dragSelection: [x1, y1, x1, y1],\n    };\n  })\n  .case(dragActions.startPointDrag, (state, [evt, pointIndex]) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      dragPoint: [pointIndex, [x1, y1, x1, y1]],\n    };\n  })\n  .case(dragActions.startResize, (state, [evt, position]) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      resizeSelection: [position, [x1, y1, x1, y1]],\n    };\n  })\n\n  .case(dragActions.mouseMove, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    if (state.areaSelectRect) {\n      const [x1, y1] = state.areaSelectRect;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        areaSelectRect: [x1, y1, x2, y2],\n      };\n    }\n    if (state.dragSelection) {\n      const [x1, y1] = state.dragSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        dragSelection: [x1, y1, x2, y2],\n      };\n    }\n    if (state.dragPoint) {\n      const [pointIndex, [x1, y1]] = state.dragPoint;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        dragPoint: [pointIndex, [x1, y1, x2, y2]],\n      };\n    }\n    if (state.resizeSelection) {\n      const [position, [x1, y1]] = state.resizeSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        resizeSelection: [position, [x1, y1, x2, y2]],\n      };\n    }\n    if (state.freehandStroke) {\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      let freehandStroke = state.freehandStroke.concat([[x2, y2]]);\n      if (freehandStroke.length >= 3) {\n        const [lastX, lastY] = freehandStroke[freehandStroke.length - 2];\n        if (Math.abs(x2 - lastX) < 2 && Math.abs(y2 - lastY) < 2) {\n          freehandStroke.splice(freehandStroke.length - 2, 1);\n        }\n      }\n      return {\n        ...state,\n        freehandStroke,\n      };\n    }\n    return state;\n  })\n  .case(dragActions.mouseUp, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    if (state.areaSelectRect) {\n      const [x1, y1] = state.areaSelectRect;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      const intersections = performAreaSelect(state.glyph, state.buhinMap, state.shotai, x1, y1, x2, y2);\n\n      const newSelection = Array.from(new Set(state.selection.concat(intersections)));\n      return {\n        ...state,\n        selection: newSelection,\n        areaSelectRect: null,\n      };\n    }\n    if (state.dragSelection) {\n      const [x1, y1] = state.dragSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n\n      const newGlyph = moveSelectedGlyphLines(state.glyph, state.selection, x2 - x1, y2 - y1);\n      return {\n        ...state,\n        glyph: newGlyph,\n        dragSelection: null,\n      };\n    }\n    if (state.dragPoint) {\n      const [pointIndex, [x1, y1]] = state.dragPoint;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n\n      const newGlyph = moveSelectedPoint(state.glyph, state.selection, pointIndex, x2 - x1, y2 - y1);\n      return {\n        ...state,\n        glyph: newGlyph,\n        dragPoint: null,\n      };\n    }\n    if (state.resizeSelection) {\n      const [position, [x1, y1]] = state.resizeSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n\n      const newGlyph = resizeSelected(state.glyph, state.selection, position, x2 - x1, y2 - y1);\n      return {\n        ...state,\n        glyph: newGlyph,\n        resizeSelection: null,\n      };\n    }\n    if (state.freehandStroke) {\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      const freehandStroke = state.freehandStroke.concat([[x2, y2]]);\n\n      const newGlyph = drawFreehand(state.glyph, freehandStroke);\n      return {\n        ...state,\n        glyph: newGlyph,\n        freehandStroke: null,\n      };\n    }\n    return state;\n  })\n\n  .case(dragActions.updateCTMInv, (state, ctmInv) => ({\n    ...state,\n    ctmInv,\n  }));\n","import { ReducerBuilder } from 'typescript-fsa-reducers';\n\nimport { displayActions } from '../actions/display';\n\nimport { AppState } from '.';\n\nexport interface GridState {\n  display: boolean;\n  originX: number;\n  originY: number;\n  spacingX: number;\n  spacingY: number;\n}\n\nexport default (builder: ReducerBuilder<AppState>) => builder\n  .case(displayActions.openOptionModal, (state) => ({\n    ...state,\n    showOptionModal: true,\n  }))\n  .case(displayActions.closeOptionModal, (state) => ({\n    ...state,\n    showOptionModal: false,\n  }))\n\n  .case(displayActions.setGridDisplay, (state, value) => ({\n    ...state,\n    grid: {\n      ...state.grid,\n      display: value,\n    },\n  }))\n  .case(displayActions.setGridOriginX, (state, value) => ({\n    ...state,\n    grid: {\n      ...state.grid,\n      originX: value,\n    },\n  }))\n  .case(displayActions.setGridOriginY, (state, value) => ({\n    ...state,\n    grid: {\n      ...state.grid,\n      originY: value,\n    },\n  }))\n  .case(displayActions.setGridSpacingX, (state, value) => ({\n    ...state,\n    grid: {\n      ...state.grid,\n      spacingX: value,\n    },\n  }))\n  .case(displayActions.setGridSpacingY, (state, value) => ({\n    ...state,\n    grid: {\n      ...state.grid,\n      spacingY: value,\n    },\n  }))\n\n  .case(displayActions.setStrokeCenterLineDisplay, (state, value) => ({\n    ...state,\n    showStrokeCenterLine: value,\n  }))\n  .case(displayActions.setShotai, (state, shotai) => ({\n    ...state,\n    shotai,\n  }));\n","import { createStore } from 'redux';\n\nimport reducer from './reducers';\n\nconst store = createStore(reducer);\n\nexport default store;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { AppState } from '../reducers';\n\nimport './Grid.css';\n\nconst Grid = () => {\n  const grid = useSelector((state: AppState) => state.grid);\n  if (!grid.display) {\n    return <></>;\n  }\n  const xs = [];\n  for (let x = grid.originX; x < 200; x += grid.spacingX) {\n    xs.push(x);\n  }\n  const ys = [];\n  for (let y = grid.originY; y < 200; y += grid.spacingY) {\n    ys.push(y);\n  }\n  return (\n    <g className=\"grid-lines\">\n      {xs.map((x) => (\n        <path\n          key={x}\n          d={`M ${x} 0 V 200`}\n        />\n      ))}\n      {ys.map((y) => (\n        <path\n          key={y}\n          d={`M 0 ${y} H 200`}\n        />\n      ))}\n    </g>\n  );\n};\n\nexport default Grid;","import React from 'react';\n\nimport { Polygons } from '@kurgm/kage-engine';\n\nexport interface StrokeComponentProps {\n  polygons: Polygons;\n}\n\nconst StrokeComponent = (props: StrokeComponentProps) => (\n  <>\n    {props.polygons.array.map((polygon, i) => (\n      <polygon key={i} points={polygon.array.map(({ x, y }) => `${x},${y} `).join(\"\")} />\n    ))}\n  </>\n);\n\nexport default StrokeComponent;\n","import React from 'react';\n\nimport { Glyph } from '../kageUtils/glyph';\nimport { makeGlyphSeparated, KShotai } from '../kage';\nimport Stroke from './Stroke';\n\nimport './Glyph.css'\n\nexport interface GlyphComponentProps {\n  glyph: Glyph;\n  buhinMap: Map<string, string>;\n  selection: number[];\n  shotai: KShotai;\n  handleMouseDownDeselectedStroke?: (evt: React.MouseEvent, index: number) => void;\n  handleMouseDownSelectedStroke?: (evt: React.MouseEvent, index: number) => void;\n  makeGlyphSeparated?: typeof makeGlyphSeparated;\n}\n\nconst GlyphComponent = (props: GlyphComponentProps) => {\n  const polygonsSep = (props.makeGlyphSeparated || makeGlyphSeparated)(props.glyph, props.buhinMap, props.shotai);\n\n  const { selection } = props;\n  const nonSelection = polygonsSep.map((_polygons, index) => index)\n    .filter((index) => !selection.includes(index));\n\n  return (\n    <>\n      <g className=\"strokes-deselected\">\n        {nonSelection.map((index) => (\n          <g key={index} onMouseDown={(evt) => props.handleMouseDownDeselectedStroke?.(evt, index)}>\n            <Stroke polygons={polygonsSep[index]} />\n          </g>\n        ))}\n      </g>\n      <g className=\"strokes-selected\">\n        {selection.map((index) => (\n          <g key={index} onMouseDown={(evt) => props.handleMouseDownSelectedStroke?.(evt, index)}>\n            <Stroke polygons={polygonsSep[index]} />\n          </g>\n        ))}\n      </g>\n    </>\n  );\n};\n\nexport default GlyphComponent;\n","import React from 'react';\n\nimport { decomposeDeepGlyph } from '../kageUtils/decompose';\nimport { Glyph } from '../kageUtils/glyph';\n\nimport './StrokeCenterLine.css';\n\nexport interface StrokeCenterLineProps {\n  glyph: Glyph;\n  buhinMap: Map<string, string>;\n}\n\nconst StrokeCenterLine = (props: StrokeCenterLineProps) => {\n  const strokes = decomposeDeepGlyph(props.glyph, props.buhinMap);\n  return (\n    <g className=\"stroke-center-line\">\n      {strokes.map((stroke, index) => {\n        const v = stroke.value;\n        switch (v[0]) {\n          case 1:\n            return <path key={index} d={`M ${v[3]} ${v[4]} ${v[5]} ${v[6]}`} />\n          case 2:\n            return <path key={index} d={`M ${v[3]} ${v[4]} Q ${v[5]} ${v[6]} ${v[7]} ${v[8]}`} />\n          case 3:\n          case 4:\n            return <path key={index} d={`M ${v[3]} ${v[4]} ${v[5]} ${v[6]} ${v[7]} ${v[8]}`} />\n          case 6:\n            return <path key={index} d={`M ${v[3]} ${v[4]} C ${v[5]} ${v[6]} ${v[7]} ${v[8]} ${v[9]} ${v[10]}`} />\n          case 7:\n            return <path key={index} d={`M ${v[3]} ${v[4]} ${v[5]} ${v[6]} Q ${v[7]} ${v[8]} ${v[9]} ${v[10]}`} />\n          default:\n            return null;\n        }\n      })}\n    </g>\n  )\n}\n\nexport default StrokeCenterLine;\n","import React from 'react';\n\nimport './ControlPoint.css';\n\ninterface ControlPointProps {\n  x: number;\n  y: number;\n  className?: string;\n  handleMouseDown: (evt: React.MouseEvent) => void;\n}\n\nconst ControlPoint = (props: ControlPointProps) => (\n  <rect\n    x={props.x - 4}\n    y={props.y - 4}\n    width={8} height={8}\n    className={`controlpoint-rect ${props.className || ''}`}\n    onMouseDown={props.handleMouseDown}\n  />\n);\n\nexport default ControlPoint;\n","import React, { useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { createSelector } from 'reselect';\n\nimport { dragActions, RectPointPosition } from '../actions/drag';\nimport { AppState } from '../reducers';\nimport { draggedGlyphSelector } from '../selectors/draggedGlyph';\nimport { getGlyphLinesBBX } from '../kageUtils/bbx';\nimport { getMatchType, MatchType } from '../kageUtils/match';\n\nimport ControlPoint from './ControlPoint';\n\nimport './SelectionControl.css';\n\ninterface RectControl {\n  multiSelect: boolean;\n  coords: [number, number, number, number];\n}\ninterface ControlPoint {\n  x: number;\n  y: number;\n  className: string;\n}\n\ninterface SelectionControlSpec {\n  rectControl: RectControl | null;\n  pointControl: ControlPoint[];\n}\n\nconst selectionControlSelector = createSelector(\n  [\n    draggedGlyphSelector,\n    (state: AppState) => state.selection,\n  ],\n  (glyph, selection): SelectionControlSpec => {\n    if (selection.length === 0) {\n      return { rectControl: null, pointControl: [] };\n    }\n    if (selection.length > 1) {\n      const selectedStrokes = selection.map((index) => glyph[index]);\n      const bbx = getGlyphLinesBBX(selectedStrokes);\n      return {\n        rectControl: {\n          multiSelect: true,\n          coords: bbx,\n        },\n        pointControl: [],\n      };\n    }\n    const selectedStroke = glyph[selection[0]];\n    switch (selectedStroke.value[0]) {\n      case 0:\n      case 9:\n      case 99:\n        return {\n          rectControl: {\n            multiSelect: false,\n            coords: [\n              selectedStroke.value[3],\n              selectedStroke.value[4],\n              selectedStroke.value[5],\n              selectedStroke.value[6],\n            ],\n          },\n          pointControl: [],\n        };\n      case 1:\n      case 2:\n      case 3:\n      case 4:\n      case 6:\n      case 7: {\n        const pointControl: ControlPoint[] = [];\n        for (let i = 3; i + 2 <= selectedStroke.value.length; i += 2) {\n          const matchType = getMatchType(glyph, {\n            lineIndex: selection[0],\n            pointIndex: (i - 3) / 2,\n          });\n          let className = '';\n          if (matchType === MatchType.match) {\n              className = 'match';\n          } else if (matchType === MatchType.online) {\n              className = 'online';\n          }\n\n          pointControl.push({\n            x: selectedStroke.value[i],\n            y: selectedStroke.value[i + 1],\n            className,\n          });\n        }\n        return { rectControl: null, pointControl };\n      }\n      default:\n        return { rectControl: null, pointControl: [] };\n    }\n  }\n);\n\nconst SelectionControl = () => {\n  const { rectControl, pointControl } = useSelector(selectionControlSelector);\n\n  const dispatch = useDispatch();\n  const handleMouseDownRectControl = useCallback((evt: React.MouseEvent, position: RectPointPosition) => {\n    dispatch(dragActions.startResize([evt, position]));\n    evt.stopPropagation();\n  }, [dispatch]);\n\n  const handleMouseDownNorthPoint = useCallback(\n    (evt: React.MouseEvent) => handleMouseDownRectControl(evt, RectPointPosition.north),\n    [handleMouseDownRectControl]\n  );\n  const handleMouseDownWestPoint = useCallback(\n    (evt: React.MouseEvent) => handleMouseDownRectControl(evt, RectPointPosition.west),\n    [handleMouseDownRectControl]\n  );\n  const handleMouseDownSouthPoint = useCallback(\n    (evt: React.MouseEvent) => handleMouseDownRectControl(evt, RectPointPosition.south),\n    [handleMouseDownRectControl]\n  );\n  const handleMouseDownEastPoint = useCallback(\n    (evt: React.MouseEvent) => handleMouseDownRectControl(evt, RectPointPosition.east),\n    [handleMouseDownRectControl]\n  );\n  const handleMouseDownSoutheastPoint = useCallback(\n    (evt: React.MouseEvent) => handleMouseDownRectControl(evt, RectPointPosition.southeast),\n    [handleMouseDownRectControl]\n  );\n\n  const handleMouseDownPointControls = useMemo(() => {\n    return pointControl.map((_control, pointIndex) => (evt: React.MouseEvent) => {\n      dispatch(dragActions.startPointDrag([evt, pointIndex]));\n      evt.stopPropagation();\n    });\n  }, [dispatch, pointControl]);\n\n  return <>\n    {rectControl && <>\n      <rect\n        className='selection-rect'\n        x={rectControl.coords[0]}\n        y={rectControl.coords[1]}\n        width={rectControl.coords[2] - rectControl.coords[0]}\n        height={rectControl.coords[3] - rectControl.coords[1]}\n      />\n      <ControlPoint\n        x={(rectControl.coords[0] + rectControl.coords[2]) / 2}\n        y={rectControl.coords[1]}\n        className='north'\n        handleMouseDown={handleMouseDownNorthPoint}\n      />\n      <ControlPoint\n        x={rectControl.coords[0]}\n        y={(rectControl.coords[1] + rectControl.coords[3]) / 2}\n        className='west'\n        handleMouseDown={handleMouseDownWestPoint}\n      />\n      <ControlPoint\n        x={(rectControl.coords[0] + rectControl.coords[2]) / 2}\n        y={rectControl.coords[3]}\n        className='south'\n        handleMouseDown={handleMouseDownSouthPoint}\n      />\n      <ControlPoint\n        x={rectControl.coords[2]}\n        y={(rectControl.coords[1] + rectControl.coords[3]) / 2}\n        className='east'\n        handleMouseDown={handleMouseDownEastPoint}\n      />\n      <ControlPoint\n        x={rectControl.coords[2]}\n        y={rectControl.coords[3]}\n        className='southeast'\n        handleMouseDown={handleMouseDownSoutheastPoint}\n      />\n    </>}\n    {pointControl.map(({ x, y, className }, index) => (\n      <ControlPoint\n        key={index}\n        x={x} y={y}\n        className={className}\n        handleMouseDown={handleMouseDownPointControls[index]}\n      />\n    ))}\n  </>;\n};\n\nexport default SelectionControl;","import React from 'react';\n\nimport './AreaSelectRect.css';\n\ninterface AreaSelectRectProps {\n  rect: [number, number, number, number] | null;\n}\n\nconst AreaSelectRect = (props: AreaSelectRectProps) => {\n  if (!props.rect) {\n    return null;\n  }\n  let [x1, y1, x2, y2] = props.rect;\n  if (x1 > x2) {\n    // swap\n    const temp = x1;\n    x1 = x2;\n    x2 = temp;\n  }\n  if (y1 > y2) {\n    // swap\n    const temp = y1;\n    y1 = y2;\n    y2 = temp;\n  }\n\n  return <rect className='areaselect-rect' x={x1} y={y1} width={x2 - x1} height={y2 - y1} />;\n};\n\nexport default AreaSelectRect;\n","import React, { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { AppState } from '../reducers';\n\nimport { selectActions } from '../actions/select';\nimport { dragActions, CTMInv } from '../actions/drag';\nimport { draggedGlyphSelector } from '../selectors/draggedGlyph';\n\nimport Grid from './Grid';\nimport Glyph from './Glyph';\nimport StrokeCenterLine from './StrokeCenterLine';\nimport SelectionControl from './SelectionControl';\nimport AreaSelectRect from './AreaSelectRect';\n\nimport './GlyphArea.css';\n\nconst GlyphArea = () => {\n  const glyph = useSelector(draggedGlyphSelector);\n  const buhinMap = useSelector((state: AppState) => state.buhinMap);\n  const shotai = useSelector((state: AppState) => state.shotai);\n  const selection = useSelector((state: AppState) => state.selection);\n  const areaSelectRect = useSelector((state: AppState) => state.areaSelectRect);\n  const freehandMode = useSelector((state: AppState) => state.freehandMode);\n  const showStrokeCenterLine = useSelector((state: AppState) => state.showStrokeCenterLine);\n\n  const svgClassName = freehandMode ? 'freehand' : '';\n\n  const dispatch = useDispatch();\n  const handleMouseDownCapture = useCallback((evt: React.MouseEvent<SVGSVGElement>) => {\n    const ctm = evt.currentTarget.getScreenCTM();\n    if (!ctm) {\n      return;\n    }\n    const pt = evt.currentTarget.createSVGPoint();\n    const ictm = ctm.inverse();\n    const ctmInv: CTMInv = (evtx, evty) => {\n      pt.x = evtx;\n      pt.y = evty;\n      const { x, y } = pt.matrixTransform(ictm);\n      return [x, y];\n    };\n    dispatch(dragActions.updateCTMInv(ctmInv));\n  }, [dispatch]);\n\n  const handleMouseDownBackground = useCallback((evt: React.MouseEvent) => {\n    if (!(evt.shiftKey || evt.ctrlKey)) {\n      dispatch(selectActions.selectNone());\n    }\n    dispatch(dragActions.startBackgroundDrag(evt));\n  }, [dispatch]);\n  const handleMouseDownDeselectedStroke = useCallback((evt: React.MouseEvent, index: number) => {\n    if (evt.shiftKey || evt.ctrlKey) {\n      dispatch(selectActions.selectAddSingle(index));\n    } else {\n      dispatch(selectActions.selectSingle(index));\n    }\n    dispatch(dragActions.startSelectionDrag(evt));\n    evt.stopPropagation();\n  }, [dispatch]);\n  const handleMouseDownSelectedStroke = useCallback((evt: React.MouseEvent, index: number) => {\n    if (evt.shiftKey || evt.ctrlKey) {\n      dispatch(selectActions.selectRemoveSingle(index));\n    }\n    dispatch(dragActions.startSelectionDrag(evt));\n    evt.stopPropagation();\n  }, [dispatch]);\n\n  useEffect(() => {\n    const handleMouseMove = (evt: MouseEvent) => {\n      dispatch(dragActions.mouseMove(evt));\n    };\n    const handleMouseUp = (evt: MouseEvent) => {\n      dispatch(dragActions.mouseUp(evt));\n    };\n    document.addEventListener('mousemove', handleMouseMove)\n    document.addEventListener('mouseup', handleMouseUp);\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [dispatch]);\n\n  return (\n    <div className=\"glyph-area\">\n      <svg\n        width=\"100%\" height=\"100%\" viewBox=\"-20 -20 500 240\"\n        className={svgClassName}\n        onMouseDownCapture={handleMouseDownCapture}\n        onMouseDown={handleMouseDownBackground}\n      >\n        <Grid />\n        <rect x=\"0\" y=\"0\" width=\"200\" height=\"200\" className=\"glyph-boundary\" />\n        <rect x=\"12\" y=\"12\" width=\"176\" height=\"176\" className=\"glyph-guide\" />\n        <Glyph\n          glyph={glyph}\n          buhinMap={buhinMap}\n          shotai={shotai}\n          selection={selection}\n          handleMouseDownDeselectedStroke={handleMouseDownDeselectedStroke}\n          handleMouseDownSelectedStroke={handleMouseDownSelectedStroke}\n        />\n        {showStrokeCenterLine && <StrokeCenterLine glyph={glyph} buhinMap={buhinMap} />}\n        <SelectionControl />\n        <AreaSelectRect rect={areaSelectRect} />\n      </svg>\n    </div>\n  );\n};\n\nexport default GlyphArea;\n","import React, { useCallback } from 'react';\n\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { createSelector } from 'reselect';\n\nimport { editorActions } from '../actions/editor';\nimport { selectActions } from '../actions/select';\nimport { AppState } from '../reducers';\nimport { GlyphLine } from '../kageUtils/glyph';\nimport { calcStretchScalar, getStretchPositions } from '../kageUtils/stretchparam';\nimport { strokeTypes, headShapeTypes, tailShapeTypes, isValidStrokeShapeTypes } from '../kageUtils/stroketype';\nimport { draggedGlyphSelector } from '../selectors/draggedGlyph';\n\nimport { useTranslation } from 'react-i18next';\n\nimport './SelectionInfo.css'\n\n\nconst selectedGlyphLineSelector = createSelector([\n  (state: AppState) => state.selection,\n  draggedGlyphSelector,\n], (selection, draggedGlyph): GlyphLine | null => {\n  if (selection.length !== 1) {\n    return null;\n  }\n  return draggedGlyph[selection[0]];\n});\n\ninterface StrokeInfo {\n  strokeType: number;\n  headShapeType: number;\n  tailShapeType: number;\n  validTypes: boolean;\n  coordString: string;\n}\nconst strokeInfoSelector = createSelector([\n  selectedGlyphLineSelector\n], (selectedStroke): StrokeInfo | null => {\n  if (!selectedStroke) {\n    return null;\n  }\n  if (!strokeTypes.includes(selectedStroke.value[0])) {\n    return null;\n  }\n\n  const points = [];\n  for (let i = 3; i + 2 <= selectedStroke.value.length; i += 2) {\n    points.push(`(${selectedStroke.value[i]},${selectedStroke.value[i + 1]})`);\n  }\n  return {\n    strokeType: selectedStroke.value[0],\n    headShapeType: selectedStroke.value[1],\n    tailShapeType: selectedStroke.value[2],\n    validTypes: isValidStrokeShapeTypes(selectedStroke),\n    coordString: points.join(' → '),\n  };\n});\n\ninterface PartInfo {\n  partName: string;\n  entityName: string | null;\n  coordString: string;\n  stretchCoeff: number | null;\n}\nconst partInfoSelector = createSelector([\n  selectedGlyphLineSelector,\n  (state: AppState) => state.buhinMap,\n  (state: AppState) => state.stretchParamMap,\n], (selectedStroke, buhinMap, stretchParamMap): PartInfo | null => {\n  if (!selectedStroke) {\n    return null;\n  }\n  if (selectedStroke.value[0] !== 99) {\n    return null;\n  }\n  const partName = selectedStroke.partName!;\n  const buhinSource = buhinMap.get(partName);\n  let entityName: string | null = null;\n  if (buhinSource) {\n    const aliasMatch = /^(?:0:1:0:[^$]+\\$)?99:0:0:0:0:200:200:([^$]+)$/.exec(buhinSource);\n    if (aliasMatch) {\n      entityName = aliasMatch[1];\n    }\n  }\n  const stretchParam = stretchParamMap.get(partName);\n  const stretchCoeff = stretchParam\n    ? calcStretchScalar(stretchParam, getStretchPositions(selectedStroke)!)\n    : null;\n\n  return {\n    partName,\n    entityName,\n    coordString: `(${selectedStroke.value[3]},${selectedStroke.value[4]}) → (${selectedStroke.value[5]},${selectedStroke.value[6]})`,\n    stretchCoeff,\n  };\n});\n\ninterface OtherInfo {\n  isMultiple: boolean;\n  coordString?: string;\n}\nconst otherInfoSelector = createSelector([\n  (state: AppState) => state.selection,\n  selectedGlyphLineSelector,\n], (selection, selectedStroke_): OtherInfo | null => {\n  if (selection.length > 1) {\n    return { isMultiple: true };\n  }\n  if (selection.length === 0) {\n    return { isMultiple: false };\n  }\n  const selectedStroke = selectedStroke_!;\n  const strokeType = selectedStroke.value[0];\n  if (strokeTypes.includes(strokeType) || strokeType === 99) {\n    return null;\n  }\n\n  const points = [];\n  for (let i = 3; i + 2 <= selectedStroke.value.length; i += 2) {\n    points.push(`(${selectedStroke.value[i]},${selectedStroke.value[i + 1]})`);\n  }\n  return { isMultiple: false, coordString: points.join(' → ') };\n});\n\nconst selectIndexStringSelector = createSelector([\n  (state: AppState) => state.glyph.length,\n  (state: AppState) => state.selection,\n], (glyphLength, selection) => {\n  const selectedIndexString = selection\n    .map((index) => index + 1)\n    .sort((a, b) => a - b).join(',');\n  return `${selectedIndexString || '-'} / ${glyphLength || '-'}`;\n});\n\nconst buttonsDisabledSelector = createSelector([\n  (state: AppState) => state.glyph.length,\n  (state: AppState) => state.selection,\n], (glyphLength, selection) => ({\n  swapPrevDisabled: selection.length !== 1 || selection[0] === 0,\n  swapNextDisabled: selection.length !== 1 || selection[0] === glyphLength - 1,\n  selectPrevDisabled: glyphLength === 0,\n  selectNextDisabled: glyphLength === 0,\n}));\n\nconst SelectionInfo = () => {\n\n  const strokeInfo = useSelector(strokeInfoSelector);\n  const partInfo = useSelector(partInfoSelector);\n  const otherInfo = useSelector(otherInfoSelector);\n\n  const selectIndexString = useSelector(selectIndexStringSelector);\n\n  const {\n    swapPrevDisabled, swapNextDisabled,\n    selectPrevDisabled, selectNextDisabled,\n  } = useSelector(buttonsDisabledSelector, shallowEqual);\n\n  const dispatch = useDispatch();\n  const changeStrokeType = useCallback((evt: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(editorActions.changeStrokeType(+evt.currentTarget.value));\n  }, [dispatch]);\n  const changeHeadShapeType = useCallback((evt: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(editorActions.changeHeadShapeType(+evt.currentTarget.value));\n  }, [dispatch]);\n  const changeTailShapeType = useCallback((evt: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(editorActions.changeTailShapeType(+evt.currentTarget.value));\n  }, [dispatch]);\n  const changeStretchCoeff = useCallback((evt: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(editorActions.changeStretchCoeff(+evt.currentTarget.value));\n  }, [dispatch]);\n  const selectPrev = useCallback(() => {\n    dispatch(selectActions.selectPrev());\n  }, [dispatch]);\n  const selectNext = useCallback(() => {\n    dispatch(selectActions.selectNext());\n  }, [dispatch]);\n  const swapWithPrev = useCallback(() => {\n    dispatch(editorActions.swapWithPrev());\n  }, [dispatch]);\n  const swapWithNext = useCallback(() => {\n    dispatch(editorActions.swapWithNext());\n  }, [dispatch]);\n\n  const { t } = useTranslation();\n  return (\n    <div className=\"select-control\">\n      <div className=\"selected-info\">\n        {strokeInfo && <>\n          <div>\n            {t('stroke type')}\n            <select value={strokeInfo.strokeType} onChange={changeStrokeType}>\n              {strokeTypes.map((strokeType) => (\n                <option key={strokeType} value={strokeType}>\n                  {t(`stroke type ${strokeType}`)}\n                </option>\n              ))}\n            </select>\n            {' '}\n            {t('head type')}\n            <select value={strokeInfo.headShapeType} onChange={changeHeadShapeType}>\n              {headShapeTypes[strokeInfo.strokeType].map((headShapeType) => (\n                <option key={headShapeType} value={headShapeType}>\n                  {t(`head type ${strokeInfo.strokeType}-${headShapeType}`)}\n                </option>\n              ))}\n            </select>\n            {' '}\n            {t('tail type')}\n            <select value={strokeInfo.tailShapeType} onChange={changeTailShapeType}>\n              {tailShapeTypes[strokeInfo.strokeType].map((tailShapeType) => (\n                <option key={tailShapeType} value={tailShapeType}>\n                  {t(`tail type ${strokeInfo.strokeType}-${tailShapeType}`)}\n                </option>\n              ))}\n            </select>\n            {' '}\n            {!strokeInfo.validTypes && (\n              <span className=\"alert\">\n                {t('invalid stroke shape types')}\n              </span>\n            )}\n          </div>\n          <div>{strokeInfo.coordString}</div>\n        </>}\n        {partInfo && <>\n          <div>\n            {t('part')}\n            {' '}\n            <strong>{partInfo.partName}</strong>\n            {' '}\n            {partInfo.entityName && t('alias of', { entity: partInfo.entityName })}\n          </div>\n          <div>{partInfo.coordString}</div>\n          {partInfo.stretchCoeff !== null && (\n            <div>\n              {t('stretch')}\n              {' '}\n              <input\n                type=\"range\" min={-10} max={10}\n                value={partInfo.stretchCoeff}\n                onChange={changeStretchCoeff}\n              />\n              {' '}\n              {partInfo.stretchCoeff}\n            </div>\n          )}\n        </>}\n        {otherInfo && <>\n          {otherInfo.isMultiple && <div>{t('selecting multiple strokes')}</div>}\n          {otherInfo.coordString && <div>{otherInfo.coordString}</div>}\n        </>}\n      </div>\n      <div className=\"selection-control\">\n        <button\n          disabled={swapPrevDisabled}\n          onClick={swapWithPrev}\n        >\n          {t('swap with prev')}\n        </button>\n        <button\n          className=\"select-prevnext-button\"\n          disabled={selectPrevDisabled}\n          onClick={selectPrev}\n        >\n          {t('select prev')}\n        </button>\n        <div className=\"selection-num\">\n          {selectIndexString}\n        </div>\n        <button\n          className=\"select-prevnext-button\"\n          disabled={selectNextDisabled}\n          onClick={selectNext}\n        >\n          {t('select next')}\n        </button>\n        <button\n          disabled={swapNextDisabled}\n          onClick={swapWithNext}\n        >\n          {t('swap with next')}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default SelectionInfo;\n","import { createSelector } from \"reselect\";\n\nimport { Glyph } from \"../kageUtils/glyph\";\nimport { getGlyphLineBBX } from \"../kageUtils/bbx\";\n\nimport { draggedGlyphSelector } from \"./draggedGlyph\";\n\nexport const submitGlyphSelector = createSelector([\n  draggedGlyphSelector,\n], (glyph: Glyph): Glyph => {\n  return glyph.filter((glyphLine) => getGlyphLineBBX(glyphLine)[0] < 200);\n});\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { submitGlyphSelector } from '../selectors/submitGlyph';\nimport { AppState } from '../reducers';\nimport { makeGlyphSeparatedForSubmit } from '../kage';\n\nimport GlyphComponent from './Glyph';\n\nconst SubmitPreview = () => {\n  const submitGlyph = useSelector(submitGlyphSelector);\n  const buhinMap = useSelector((state: AppState) => state.buhinMap);\n  const shotai = useSelector((state: AppState) => state.shotai);\n\n  return (\n    <svg className=\"preview-thumbnail\" viewBox=\"0 0 200 200\" width=\"50\" height=\"50\">\n      <GlyphComponent\n        buhinMap={buhinMap}\n        glyph={submitGlyph}\n        shotai={shotai}\n        selection={[]}\n        makeGlyphSeparated={makeGlyphSeparatedForSubmit}\n      />\n    </svg>\n  );\n};\n\nexport default SubmitPreview;\n","import React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { useTranslation } from 'react-i18next';\n\nimport { AppState } from '../reducers';\nimport { editorActions } from '../actions/editor';\nimport { selectActions } from '../actions/select';\nimport { undoActions } from '../actions/undo';\nimport { displayActions } from '../actions/display';\n\nimport SelectionInfo from './SelectionInfo';\nimport SubmitPreview from './SubmitPreview';\n\nimport './EditorControls.css';\n\nconst EditorControls = () => {\n  const glyph = useSelector((state: AppState) => state.glyph);\n  const selection = useSelector((state: AppState) => state.selection);\n  const clipboard = useSelector((state: AppState) => state.clipboard);\n  const freehandMode = useSelector((state: AppState) => state.freehandMode);\n  const undoLength = useSelector((state: AppState) => state.undoStacks.undo.length);\n  const redoLength = useSelector((state: AppState) => state.undoStacks.redo.length);\n\n  const undoDisabled = undoLength === 0;\n  const redoDisabled = redoLength === 0;\n  const pasteDisabled = clipboard.length === 0;\n  const decomposeDisabled = !selection.some((index) => glyph[index].value[0] === 99);\n\n  const dispatch = useDispatch();\n  const undo = useCallback(() => {\n    dispatch(undoActions.undo());\n  }, [dispatch]);\n  const redo = useCallback(() => {\n    dispatch(undoActions.redo());\n  }, [dispatch]);\n  const selectAll = useCallback(() => {\n    dispatch(selectActions.selectAll());\n  }, [dispatch]);\n  const selectDeselected = useCallback(() => {\n    dispatch(selectActions.selectDeselected());\n  }, [dispatch]);\n  const copy = useCallback(() => {\n    dispatch(editorActions.copy());\n  }, [dispatch]);\n  const paste = useCallback(() => {\n    dispatch(editorActions.paste());\n  }, [dispatch]);\n  const cut = useCallback(() => {\n    dispatch(editorActions.cut());\n  }, [dispatch]);\n  const toggleFreehand = useCallback(() => {\n    dispatch(editorActions.toggleFreehand());\n  }, [dispatch]);\n  const decompose = useCallback(() => {\n    dispatch(editorActions.decomposeSelected());\n  }, [dispatch]);\n  const options = useCallback(() => {\n    dispatch(displayActions.openOptionModal());\n  }, [dispatch]);\n  const finishEdit = useCallback(() => {\n    dispatch(editorActions.finishEdit());\n  }, [dispatch]);\n\n  const { t } = useTranslation();\n  return (\n    <div className=\"editor-controls\">\n      <SelectionInfo />\n      <div className=\"control-buttons\">\n        <button\n          disabled={undoDisabled}\n          onClick={undo}\n        >\n          {t('undo')}\n        </button>\n        <button\n          disabled={redoDisabled}\n          onClick={redo}\n        >\n          {t('redo')}\n        </button>\n        <button\n          disabled={glyph.length === 0}\n          onClick={selectAll}\n        >\n          {t('select all')}\n        </button>\n        <button\n          disabled={glyph.length === 0}\n          onClick={selectDeselected}\n        >\n          {t('invert selection')}\n        </button>\n        <button\n          disabled={selection.length === 0}\n          onClick={copy}\n        >\n          {t('copy')}\n        </button>\n        <button\n          disabled={pasteDisabled}\n          onClick={paste}\n        >\n          {t('paste')}\n        </button>\n        <button\n          disabled={selection.length === 0}\n          onClick={cut}\n        >\n          {t('cut')}\n        </button>\n        <button\n          onClick={toggleFreehand}\n        >\n          {freehandMode ? t('end freehand') : t('start freehand')}\n        </button>\n        <button\n          disabled={decomposeDisabled}\n          onClick={decompose}\n        >\n          {t('decompose')}\n        </button>\n        <button\n          onClick={options}\n        >\n          {t('options')}\n        </button>\n      </div>\n      <div className=\"preview\">\n        <SubmitPreview />\n        <button onClick={finishEdit}>\n          {t('finish edit')}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default EditorControls;\n","import React, { useCallback } from 'react';\n\nimport './PartsList.css';\n\nconst getImageURL = (name: string) => (\n  `https://glyphwiki.org/glyph/${name}.50px.png`\n);\n\ninterface PartsListProps {\n  names: string[];\n  handleItemClick: (partName: string, evt: React.MouseEvent<HTMLImageElement>) => void;\n  handleItemMouseEnter: (partName: string, evt: React.MouseEvent<HTMLImageElement>) => void;\n}\n\nconst PartsList = (props: PartsListProps) => {\n  const { handleItemClick, handleItemMouseEnter } = props;\n  const handleImageClick = useCallback((evt: React.MouseEvent<HTMLImageElement>) => {\n    const partName = evt.currentTarget.dataset.name!;\n    handleItemClick(partName, evt);\n  }, [handleItemClick]);\n  const handleImageMouseEnter = useCallback((evt: React.MouseEvent<HTMLImageElement>) => {\n    const partName = evt.currentTarget.dataset.name!;\n    handleItemMouseEnter(partName, evt);\n  }, [handleItemMouseEnter]);\n\n  return (\n    <div className=\"parts-list\">\n      {props.names.map((name) => (\n        <img\n          key={name} alt={name} title={name}\n          data-name={name}\n          src={getImageURL(name)}\n          width={50} height={50}\n          onClick={handleImageClick}\n          onMouseEnter={handleImageMouseEnter}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default PartsList;\n","import React, { useRef, useCallback, useState, useEffect, FormEvent } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { useTranslation } from 'react-i18next';\n\nimport { editorActions } from '../actions/editor';\nimport { search } from '../callapi';\nimport args from '../args';\n\nimport './PartsSearch.css';\nimport PartsList from './PartsList';\n\nconst searchSuggestions = [\n  'エディタ部品1',\n  'エディタ部品2',\n  'エディタ部品3',\n  'エディタ部品4',\n];\n\nconst initialQuery = args.get('name') || '';\n\nclass QueryTooShortError extends Error { }\n\nconst PartsSearch = () => {\n  const queryInputRef = useRef<HTMLInputElement>(null);\n  const [searching, setSearching] = useState(false);\n  const [names, setNames] = useState<string[]>([]);\n  const [err, setErr] = useState<any>(null);\n\n  const startSearch = (query: string) => {\n    setSearching(true);\n    search(query)\n      .then((result) => {\n        if (result === 'tooshort') {\n          throw new QueryTooShortError('query too short');\n        }\n        if (result === 'nodata') {\n          return [];\n        }\n        return result.split('\\t');\n      })\n      .then((names) => {\n        setSearching(false);\n        setNames(names);\n      })\n      .catch((reason) => {\n        setSearching(false);\n        setErr(reason);\n      });\n  };\n\n  useEffect(() => {\n    if (initialQuery) {\n      startSearch(initialQuery);\n    }\n  }, []);\n  const handleSearch = useCallback(() => {\n    if (!queryInputRef.current) {\n      return;\n    }\n    const query = queryInputRef.current.value;\n    if (!query) {\n      setNames([]);\n      return;\n    }\n    startSearch(query);\n  }, []);\n  const handleFormSubmit = useCallback((evt: React.FormEvent) => {\n    evt.preventDefault();\n    handleSearch();\n  }, [handleSearch]);\n\n  const hoverNameRef = useRef<HTMLDivElement>(null);\n  const handleItemMouseEnter = useCallback((partName: string) => {\n    if (!hoverNameRef.current) {\n      return;\n    }\n    hoverNameRef.current.textContent = partName;\n  }, []);\n  const dispatch = useDispatch();\n  const handleItemClick = useCallback((partName: string, evt: React.MouseEvent) => {\n    if (evt.shiftKey) {\n      if (!queryInputRef.current) {\n        return;\n      }\n      queryInputRef.current.value = partName;\n      startSearch(partName);\n    } else {\n      dispatch(editorActions.insertPart(partName));\n    }\n  }, [dispatch]);\n\n  const { t } = useTranslation();\n  return (\n    <div className=\"parts-search-area\">\n      <form className=\"parts-search-box\" onSubmit={handleFormSubmit}>\n        <input defaultValue={initialQuery} list=\"searchList\" ref={queryInputRef} />\n        <button onClick={handleSearch}>\n          {t('search')}\n        </button>\n        <datalist id=\"searchList\">\n          {searchSuggestions.map((suggestion, index) => (\n            <option key={index} value={suggestion} />\n          ))}\n        </datalist>\n      </form>\n      <div className=\"parts-list-area\">\n        {searching\n          ? <div className=\"message\">{t('searching')}</div>\n          : err\n            ? err instanceof QueryTooShortError\n              ? <div className=\"message\">{t('search query too short')}</div>\n              : <div className=\"message\">{t('search error', { message: err })}</div>\n            : names.length === 0\n              ? <div className=\"message\">{t('no search result')}</div>\n              : <PartsList\n                names={names}\n                handleItemClick={handleItemClick}\n                handleItemMouseEnter={handleItemMouseEnter}\n              />}\n      </div>\n      <div className=\"parts-hover-name\" ref={hoverNameRef}>&nbsp;</div>\n    </div>\n  )\n};\n\nexport default PartsSearch;\n","import React, { useRef, useLayoutEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport args from '../args';\n\nimport { AppState } from '../reducers';\nimport { submitGlyphSelector } from '../selectors/submitGlyph';\nimport { unparseGlyph } from '../kageUtils/glyph';\n\n\nlet host = args.get('host');\nconst ssl = args.get('ssl') !== 'false';\nconst glyphName = args.get('name') || 'sandbox';\nconst related = args.get('related') || 'u3013';\nconst edittime = args.get('edittime');\nconst summary = args.get('summary') || '';\n\nif (!host || ![\n  'glyphwiki.org',\n  'en.glyphwiki.org',\n  'ko.glyphwiki.org',\n  'zhs.glyphwiki.org',\n  'zht.glyphwiki.org',\n].includes(host)) {\n  host = 'glyphwiki.org';\n}\n\nconst formAction = `${ssl ? 'https' : 'http'}://${host}/wiki/${encodeURIComponent(glyphName)}?action=preview`;\n\n\nconst SubmitForm = () => {\n  const exiting = useSelector((state: AppState) => state.exiting);\n  const formRef = useRef<HTMLFormElement>(null);\n  useLayoutEffect(() => {\n    if (exiting) {\n      formRef.current?.submit();\n    }\n  }, [exiting]);\n  const glyph = useSelector(submitGlyphSelector);\n  return (\n    <form\n      style={{ visibility: 'hidden', position: 'absolute' }}\n      ref={formRef}\n      action={formAction}\n      method=\"post\"\n    >\n      <input type=\"hidden\" name=\"page\" value={glyphName} />\n      <input type=\"hidden\" name=\"action\" value=\"preview\" />\n      <input type=\"hidden\" name=\"textbox\" value={unparseGlyph(glyph)} />\n      <input type=\"hidden\" name=\"related\" value={related} />\n      <input type=\"hidden\" name=\"summary\" value={summary} />\n      {edittime && <input type=\"hidden\" name=\"edittime\" value={edittime} />}\n    </form>\n  );\n};\n\nexport default SubmitForm;","import React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport ReactModal from 'react-modal';\nimport { useTranslation } from 'react-i18next';\n\nimport { displayActions } from '../actions/display';\nimport { AppState } from '../reducers';\nimport { KShotai } from '../kage';\n\nimport './OptionModal.css';\n\nconst OptionModal = () => {\n  const showOptionModal = useSelector((state: AppState) => state.showOptionModal);\n  const grid = useSelector((state: AppState) => state.grid);\n  const shotai = useSelector((state: AppState) => state.shotai);\n  const showStrokeCenterLine = useSelector((state: AppState) => state.showStrokeCenterLine);\n\n  const dispatch = useDispatch();\n  const handleRequestClose = useCallback(() => {\n    dispatch(displayActions.closeOptionModal());\n  }, [dispatch]);\n\n  const handleGridDisplayChange = useCallback((evt: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(displayActions.setGridDisplay(evt.currentTarget.checked));\n  }, [dispatch]);\n  const handleGridOriginXChange = useCallback((evt: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(displayActions.setGridOriginX(evt.currentTarget.valueAsNumber));\n  }, [dispatch]);\n  const handleGridOriginYChange = useCallback((evt: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(displayActions.setGridOriginY(evt.currentTarget.valueAsNumber));\n  }, [dispatch]);\n  const handleGridSpacingXChange = useCallback((evt: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(displayActions.setGridSpacingX(evt.currentTarget.valueAsNumber));\n  }, [dispatch]);\n  const handleGridSpacingYChange = useCallback((evt: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(displayActions.setGridSpacingY(evt.currentTarget.valueAsNumber));\n  }, [dispatch]);\n  const handleShotaiChange = useCallback((evt: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(displayActions.setShotai(+evt.currentTarget.value as KShotai));\n  }, [dispatch]);\n  const handleStrokeCenterLineChange = useCallback((evt: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(displayActions.setStrokeCenterLineDisplay(evt.currentTarget.checked));\n  }, [dispatch]);\n  \n  const { t, i18n } = useTranslation();\n  const handleLanguageChange = useCallback((evt: React.ChangeEvent<HTMLSelectElement>) => {\n    i18n.changeLanguage(evt.currentTarget.value);\n  }, [i18n]);\n\n  return (\n    <ReactModal\n      isOpen={showOptionModal}\n      onRequestClose={handleRequestClose}\n      shouldCloseOnEsc={false} // handled by hotkeys-js\n      className={'modal-content'}\n    >\n      <fieldset>\n        <legend>{t('grid option')}</legend>\n        <div>\n          <label>\n            <input type=\"checkbox\" checked={grid.display} onChange={handleGridDisplayChange} />\n            {t('enable grid')}\n          </label>\n        </div>\n        <div>\n          {t('grid origin x')} <input\n            type=\"number\"\n            value={grid.originX}\n            onChange={handleGridOriginXChange}\n            disabled={!grid.display}\n          />\n          {' '}\n          {t('grid origin y')} <input\n            type=\"number\"\n            value={grid.originX}\n            onChange={handleGridOriginYChange}\n            disabled={!grid.display}\n          />\n        </div>\n        <div>\n          {t('grid spacing x')} <input\n            type=\"number\"\n            value={grid.spacingX}\n            onChange={handleGridSpacingXChange}\n            disabled={!grid.display}\n          />\n          {' '}\n          {t('grid spacing y')} <input\n            type=\"number\"\n            value={grid.spacingY}\n            onChange={handleGridSpacingYChange}\n            disabled={!grid.display}\n          />\n        </div>\n      </fieldset>\n      <div>\n        {t('glyph font style')} <select\n          value={shotai}\n          onChange={handleShotaiChange}\n        >\n          <option value={0}>{t('mincho style')}</option>\n          <option value={1}>{t('gothic style')}</option>\n        </select>\n      </div>\n      <div>\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={showStrokeCenterLine}\n            onChange={handleStrokeCenterLineChange}\n          />\n          {t('show stroke center line')}\n        </label>\n      </div>\n      <div>\n        {t('display language')} <select\n          value={i18n.language}\n          onChange={handleLanguageChange}\n        >\n          <option value=\"ja\">日本語</option>\n          <option value=\"en\">English</option>\n          <option value=\"ko\" disabled>한국어</option>\n          <option value=\"zh-Hans\" disabled>简体中文</option>\n          <option value=\"zh-Hant\" disabled>繁体中文</option>\n        </select>\n      </div>\n      <div>\n        <button onClick={handleRequestClose}>{t('close modal')}</button>\n      </div>\n    </ReactModal>\n  )\n};\n\nif (process.env.NODE_ENV !== 'test') {\n  ReactModal.setAppElement('#root');\n}\n\nexport default OptionModal;\n","import React from 'react';\nimport './App.css';\n\nimport GlyphArea from './components/GlyphArea';\nimport EditorControls from './components/EditorControls';\nimport PartsSearch from './components/PartsSearch'\nimport SubmitForm from './components/SubmitForm';\nimport OptionModal from './components/OptionModal';\n\nimport { useShortcuts } from './shortcuts';\n\nfunction App() {\n  useShortcuts();\n  return (\n    <div className=\"App\">\n      <GlyphArea />\n      <EditorControls />\n      <PartsSearch />\n      <SubmitForm />\n      <OptionModal />\n    </div>\n  );\n}\n\nexport default App;\n","import { useDispatch } from 'react-redux';\nimport { useHotkeys }from 'react-hotkeys-hook';\n\nimport { selectActions } from './actions/select';\nimport { editorActions } from './actions/editor';\nimport { undoActions } from './actions/undo';\n\nexport const useShortcuts = () => {\n  const dispatch = useDispatch();\n  useHotkeys('ctrl+a, command+a', (evt) => {\n    dispatch(selectActions.selectAll());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+i, command+i', (evt) => {\n    dispatch(selectActions.selectDeselected());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n\n  useHotkeys('ctrl+z, command+z', (evt) => {\n    dispatch(undoActions.undo());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+y, command+y, ctrl+shift+z, command+shift+z', (evt) => {\n    dispatch(undoActions.redo());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+x, command+x', (evt) => {\n    dispatch(editorActions.cut());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+c, command+c', (evt) => {\n    dispatch(editorActions.copy());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+v, command+v', (evt) => {\n    dispatch(editorActions.paste());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('del', (evt) => {\n    dispatch(editorActions.delete());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n\n  useHotkeys('esc', () => {\n    dispatch(editorActions.escape());\n  }, {}, [dispatch]);\n\n  useHotkeys('ctrl+h, left', (evt) => {\n    dispatch(editorActions.moveSelected([-1, 0]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+j, down', (evt) => {\n    dispatch(editorActions.moveSelected([0, 1]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+k, up', (evt) => {\n    dispatch(editorActions.moveSelected([0, -1]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+l, right', (evt) => {\n    dispatch(editorActions.moveSelected([1, 0]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+shift+h, shift+left', (evt) => {\n    dispatch(editorActions.moveSelected([-5, 0]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+shift+j, shift+down', (evt) => {\n    dispatch(editorActions.moveSelected([0, 5]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+shift+k, shift+up', (evt) => {\n    dispatch(editorActions.moveSelected([0, -5]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+shift+l, shift+right', (evt) => {\n    dispatch(editorActions.moveSelected([5, 0]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport jaTranslation from './locales/ja.json';\nimport enTranslation from './locales/en.json';\n\nimport args from \"./args\";\n\nconst resources = {\n  ja: {\n    translation: jaTranslation,\n  },\n  en: {\n    translation: enTranslation,\n  },\n};\n\nconst host = args.get('host');\nlet lng = 'ja';\nif (host) {\n  switch (host.split('.')[0]) {\n    case 'en':\n      lng = 'en';\n      break;\n    case 'ko':\n      lng = 'ko';\n      break;\n    case 'zhs':\n      lng = 'zh-Hans';\n      break;\n    case 'zht':\n      lng = 'zh-Hant';\n      break;\n  }\n}\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng,\n    fallbackLng: {\n      'zh-Hans': ['zh-Hant', 'ja'],\n      'zh-Hant': ['zh-Hans', 'ja'],\n      'default': ['ja'],\n    },\n\n    returnObjects: true,\n    interpolation: {\n      escapeValue: false, // react already safes from xss\n    },\n  });\n\nexport default i18n;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\n\nimport store from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './i18n';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}