{"version":3,"sources":["actions/editor.ts","kageUtils.ts","kage.ts","args.ts","reducers/editor.ts","reducers/index.ts","components/Stroke.tsx","components/Glyph.tsx","components/AreaSelectRect.tsx","components/ControlPoint.tsx","components/SelectionControl.tsx","containers/SelectionControl.ts","components/GlyphArea.tsx","containers/GlyphArea.ts","App.tsx","serviceWorker.ts","i18n.ts","index.tsx"],"names":["RectPointPosition","glyphStr","actionCreator","actionCreatorFactory","editorActions","selectSingle","selectAddSingle","selectRemoveSingle","selectNone","selectAll","selectPrev","selectNext","startAreaSelect","startSelectionDrag","startPointDrag","startResize","mouseMove","mouseUp","updateCTMInv","unparseGlyphLine","glyphLine","values","value","slice","partName","join","bbxOfPoints","points","xs","map","ys","Math","min","max","getGlyphLineBBX","i","length","push","mergeBBX","x11","y11","x12","y12","x21","y21","x22","y22","kage","Kage","cached","makeGlyphSeparated","glyph","result","data","args","URLSearchParams","window","location","hash","initialState","get","split","line","glyphLineStr","splitLine","numColumns","strokeType","getNumColumns","floor","parseGlyphLine","filter","gLine","selection","areaSelectRect","dragSelection","dragPoint","resizeSelection","ctmInv","editor","reducerWithInitialState","case","state","index","includes","concat","index2","_gLine","firstSelected","evt","clientX","clientY","x1","y1","pointIndex","position","x2","y2","intersections","polygonsSep","gAreaPolygon","array","some","polygon","gPolygon","x","y","polygonInPolygon","polygonIntersectsPolygon","performAreaSelect","newSelection","Array","from","Set","newGlyph","dx","dy","moveSelectedPoint","resizeSelected","combineReducers","StrokeComponent","props","polygons","key","GlyphComponent","nonSelection","_polygons","className","onMouseDown","handleMouseDownDeselectedStroke","Stroke","handleMouseDownSelectedStroke","AreaSelectRect","rect","temp","width","height","ControlPoint","handleMouseDown","SelectionControl","rectControl","coords","handleMouseDownRectControl","north","west","south","east","southeast","pointControl","handleMouseDownPointControl","connect","selectedStrokes","multiSelect","reduce","selectedStroke","dispatch","stopPropagation","GlyphArea","handleMouseMove","handleMouseUp","useEffect","document","addEventListener","removeEventListener","viewBox","onMouseDownCapture","handleMouseDownCapture","handleMouseDownBackground","target","SVGSVGElement","ctm","getScreenCTM","pt","createSVGPoint","evtx","evty","matrixTransform","inverse","shiftKey","ctrlKey","App","Boolean","hostname","match","resources","ja","translation","host","lng","i18n","use","initReactI18next","init","returnObjects","interpolation","escapeValue","store","createStore","reducer","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bddb6bff.chunk.js","sourcesContent":["import actionCreatorFactory from 'typescript-fsa';\n\nexport type CTMInv = (x: number, y: number) => [number, number];\nexport enum RectPointPosition {\n  north,\n  south,\n  east,\n  west,\n  southeast,\n}\n\nconst actionCreator = actionCreatorFactory('EDITOR');\n\nexport const editorActions = {\n  selectSingle: actionCreator<number>('SELECT_SINGLE'),\n  selectAddSingle: actionCreator<number>('SELECT_ADD_SINGLE'),\n  selectRemoveSingle: actionCreator<number>('SELECT_REMOVE_SINGLE'),\n  selectNone: actionCreator('SELECT_NONE'),\n  selectAll: actionCreator('SELECT_ALL'),\n  selectPrev: actionCreator('SELECT_PREV'),\n  selectNext: actionCreator('SELECT_NEXT'),\n\n  startAreaSelect: actionCreator<React.MouseEvent>('AREA_SELECT_START'),\n  startSelectionDrag: actionCreator<React.MouseEvent>('SELECTION_DRAG_START'),\n  startPointDrag: actionCreator<[React.MouseEvent, number]>('MOVE_POINT_START'),\n  startResize: actionCreator<[React.MouseEvent, RectPointPosition]>('RESIZE_START'),\n\n  mouseMove: actionCreator<MouseEvent>('MOUSE_MOVE'),\n  mouseUp: actionCreator<MouseEvent>('MOUSE_UP'),\n\n  updateCTMInv: actionCreator<CTMInv>('UPDATE_CTMINV'),\n};\n","export interface GlyphLine {\n  value: number[];\n  partName?: string;\n}\n\nexport const getNumColumns = (strokeType: number): number => {\n  switch (strokeType) {\n    case 0:\n    case 1:\n    case 9:\n      return 7;\n    case 2:\n      return 9;\n    case 3:\n    case 4:\n    case 6:\n    case 99:\n      return 11;\n    default:\n      return 0;\n  }\n};\n\nexport const parseGlyphLine = (glyphLineStr: string): GlyphLine => {\n  const splitLine = glyphLineStr.split(':');\n  const strokeType = +splitLine[0];\n  const numColumns = getNumColumns(strokeType);\n  const value = [];\n  for (let i = 0; i < numColumns; i++) {\n    value.push(Math.floor(+splitLine[i] || 0));\n  }\n  if (value[0] === 99) {\n    const partName = splitLine[7] || '';\n    return { value, partName }\n  }\n  return { value };\n};\n\nexport const unparseGlyphLine = (glyphLine: GlyphLine): string => {\n  const values: (number | string)[] = glyphLine.value.slice();\n  if (values[0] === 99) {\n    values[7] = glyphLine.partName || '';\n  }\n  return values.join(':');\n};\n\nexport const isValidGlyphLine = (glyphLine: GlyphLine): boolean => (\n  glyphLine.value.length !== 0 &&\n  (\n    glyphLine.value[0] !== 0 ||\n    glyphLine.value[1] === 97 || glyphLine.value[1] === 98 || glyphLine.value[1] === 99\n  )\n);\n\nexport type Glyph = GlyphLine[];\n\nexport const parseGlyph = (glyphStr: string): Glyph => (\n  glyphStr.split(/[$\\r\\n]+/)\n    .map((line) => parseGlyphLine(line))\n    .filter((gLine) => isValidGlyphLine(gLine))\n);\n\nexport const unparseGlyph = (glyph: Glyph): string => (\n  glyph\n    .map((gLine) => unparseGlyphLine(gLine))\n    .join('$')\n);\n\n\nexport type BBX = [number, number, number, number];\n\nexport const bbxOfPoints = (points: [number, number][]): BBX => {\n  const xs = points.map(([x]) => x);\n  const ys = points.map(([, y]) => y);\n  return [\n    Math.min(...xs),\n    Math.min(...ys),\n    Math.max(...xs),\n    Math.max(...ys),\n  ];\n};\n\nexport const getGlyphLineBBX = (glyphLine: GlyphLine): BBX => {\n  switch (glyphLine.value[0]) {\n    case 99:\n      return bbxOfPoints([\n        [glyphLine.value[3], glyphLine.value[4]],\n        [glyphLine.value[5], glyphLine.value[6]],\n      ]);\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 6:\n    case 7:\n    case 9: {\n      const points: [number, number][] = [];\n      for (let i = 3; i + 2 <= glyphLine.value.length; i += 2) {\n        points.push([glyphLine.value[i], glyphLine.value[i + 1]]);\n      }\n      return bbxOfPoints(points);\n    }\n    default:\n      return bbxOfPoints([]);\n  }\n}\n\nexport const mergeBBX = ([x11, y11, x12, y12]: BBX, [x21, y21, x22, y22]: BBX): BBX => [\n  Math.min(x11, x21),\n  Math.min(y11, y21),\n  Math.max(x12, x22),\n  Math.max(y12, y22),\n];\n\nexport const getGlyphLinesBBX = (glyphLines: GlyphLine[]): BBX => {\n  return glyphLines.map(getGlyphLineBBX).reduce(mergeBBX, bbxOfPoints([]));\n};\n","import { Kage, Polygons } from '@kurgm/kage-engine';\nimport { Glyph, unparseGlyphLine } from './kageUtils';\n\nexport const kage = new Kage();\n\nlet cached: {\n  glyph: Glyph;\n  result: Polygons[];\n} | null = null;\n\nexport const makeGlyphSeparated = (glyph: Glyph): Polygons[] => {\n  if (glyph === cached?.glyph) {\n    return cached.result;\n  }\n  const data = glyph.map(unparseGlyphLine);\n  const result = kage.makeGlyphSeparated(data);\n  cached = { glyph, result };\n  return result;\n};\n","const args = new URLSearchParams(window.location.hash.slice(1));\n\nexport default args;\n","import { reducerWithInitialState } from 'typescript-fsa-reducers';\n\n// @ts-ignore\nimport { polygonInPolygon, polygonIntersectsPolygon } from 'geometric';\n\nimport { editorActions, RectPointPosition } from '../actions/editor';\nimport { Glyph, parseGlyph } from '../kageUtils';\nimport { makeGlyphSeparated } from '../kage';\n\nimport args from '../args';\n\n\nconst performAreaSelect = (glyph: Glyph, x1: number, y1: number, x2: number, y2: number): number[] => {\n  const polygonsSep = makeGlyphSeparated(glyph);\n  const result = [];\n\n  const gAreaPolygon: [number, number][] = [\n    [x1, y1],\n    [x1, y2],\n    [x2, y2],\n    [x2, y1],\n    [x1, y1],\n  ];\n\n  for (let index = 0; index < polygonsSep.length; index++) {\n    const polygons = polygonsSep[index];\n    if (polygons.array.some((polygon) => {\n      const gPolygon = polygon.array.map(({ x, y }) => [x, y]);\n      gPolygon.push(gPolygon[0]); // close polygon\n\n      return (\n        polygonInPolygon(gAreaPolygon, gPolygon) ||\n        polygonInPolygon(gPolygon, gAreaPolygon) ||\n        polygonIntersectsPolygon(gAreaPolygon, gPolygon)\n      ) as boolean;\n    })) {\n      result.push(index);\n    }\n  }\n  return result;\n};\n\nconst moveSelected = (glyph: Glyph, selection: number[], dx: number, dy: number): Glyph => {\n  // FIXME\n  return glyph;\n};\n\nconst moveSelectedPoint = (glyph: Glyph, selection: number[], pointIndex: number, dx: number, dy: number): Glyph => {\n  // FIXME\n  return glyph;\n};\nconst resizeSelected = (glyph: Glyph, selection: number[], position: RectPointPosition, dx: number, dy: number): Glyph => {\n  // FIXME\n  return glyph;\n};\n\n\nexport interface EditorState {\n  glyph: Glyph;\n  selection: number[];\n  areaSelectRect: [number, number, number, number] | null;\n  dragSelection: [number, number, number, number] | null;\n  dragPoint: [number, [number, number, number, number]] | null;\n  resizeSelection: [RectPointPosition, [number, number, number, number]] | null;\n  ctmInv: ((x: number, y: number) => [number, number]) | null;\n}\n\nconst initialState: EditorState = {\n  glyph: parseGlyph(args.get('data') || ''),\n  selection: [],\n  areaSelectRect: null,\n  dragSelection: null,\n  dragPoint: null,\n  resizeSelection: null,\n  ctmInv: null,\n};\n\nconst editor = reducerWithInitialState(initialState)\n  .case(editorActions.selectSingle, (state, index) => ({\n    ...state,\n    selection: [index],\n  }))\n  .case(editorActions.selectAddSingle, (state, index) => ({\n    ...state,\n    selection: state.selection.includes(index) ? state.selection : state.selection.concat([index]),\n  }))\n  .case(editorActions.selectRemoveSingle, (state, index) => ({\n    ...state,\n    selection: state.selection.filter((index2) => index !== index2),\n  }))\n  .case(editorActions.selectAll, (state) => ({\n    ...state,\n    selection: state.glyph.map((_gLine, index) => index),\n  }))\n  .case(editorActions.selectNone, (state) => ({\n    ...state,\n    selection: [],\n  }))\n  .case(editorActions.selectPrev, (state) => {\n    if (state.glyph.length === 0) {\n      return { ...state, selection: [] };\n    }\n    const firstSelected = state.selection.length === 0 ? 0 : Math.min(...state.selection);\n    return {\n      ...state,\n      selection: [(firstSelected - 1 + state.glyph.length) % state.glyph.length],\n    };\n  })\n  .case(editorActions.selectNext, (state) => {\n    if (state.glyph.length === 0) {\n      return { ...state, selection: [] };\n    }\n    const firstSelected = state.selection.length === 0 ? -1 : Math.max(...state.selection);\n    return {\n      ...state,\n      selection: [(firstSelected + 1 + state.glyph.length) % state.glyph.length],\n    };\n  })\n\n  .case(editorActions.startAreaSelect, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      areaSelectRect: [x1, y1, x1, y1],\n    };\n  })\n  .case(editorActions.startSelectionDrag, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      dragSelection: [x1, y1, x1, y1],\n    };\n  })\n  .case(editorActions.startPointDrag, (state, [evt, pointIndex]) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      dragPoint: [pointIndex, [x1, y1, x1, y1]],\n    };\n  })\n  .case(editorActions.startResize, (state, [evt, position]) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      resizeSelection: [position, [x1, y1, x1, y1]],\n    };\n  })\n\n  .case(editorActions.mouseMove, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    if (state.areaSelectRect) {\n      const [x1, y1] = state.areaSelectRect;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        areaSelectRect: [x1, y1, x2, y2],\n      };\n    }\n    if (state.dragSelection) {\n      const [x1, y1] = state.dragSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        dragSelection: [x1, y1, x2, y2],\n      };\n    }\n    if (state.dragPoint) {\n      const [pointIndex, [x1, y1]] = state.dragPoint;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        dragPoint: [pointIndex, [x1, y1, x2, y2]],\n      };\n    }\n    if (state.resizeSelection) {\n      const [position, [x1, y1]] = state.resizeSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        resizeSelection: [position, [x1, y1, x2, y2]],\n      };\n    }\n    return state;\n  })\n  .case(editorActions.mouseUp, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    if (state.areaSelectRect) {\n      const [x1, y1] = state.areaSelectRect;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      const intersections = performAreaSelect(state.glyph, x1, y1, x2, y2);\n\n      const newSelection = Array.from(new Set(state.selection.concat(intersections)));\n      return {\n        ...state,\n        selection: newSelection,\n        areaSelectRect: null,\n      };\n    }\n    if (state.dragSelection) {\n      const [x1, y1] = state.dragSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n\n      const newGlyph = moveSelected(state.glyph, state.selection, x2 - x1, y2 - y1);\n      return {\n        ...state,\n        glyph: newGlyph,\n        dragSelection: null,\n      };\n    }\n    if (state.dragPoint) {\n      const [pointIndex, [x1, y1]] = state.dragPoint;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n\n      const newGlyph = moveSelectedPoint(state.glyph, state.selection, pointIndex, x2 - x1, y2 - y1);\n      return {\n        ...state,\n        glyph: newGlyph,\n        dragPoint: null,\n      };\n    }\n    if (state.resizeSelection) {\n      const [position, [x1, y1]] = state.resizeSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n\n      const newGlyph = resizeSelected(state.glyph, state.selection, position, x2 - x1, y2 - y1);\n      return {\n        ...state,\n        glyph: newGlyph,\n        resizeSelection: null,\n      };\n    }\n    return state;\n  })\n\n  .case(editorActions.updateCTMInv, (state, ctmInv) => ({\n    ...state,\n    ctmInv,\n  }));\n\nexport default editor;\n","import { combineReducers } from 'redux';\n\nimport editor, { EditorState } from './editor';\n\nexport type AppState = {\n  editor: EditorState;\n};\n\nexport default combineReducers<AppState>({\n  editor,\n});\n","import React from 'react';\n\nimport { Polygons } from '@kurgm/kage-engine';\n\nexport interface StrokeComponentProps {\n  polygons: Polygons;\n}\n\nconst StrokeComponent = (props: StrokeComponentProps) => (\n  <>\n    {props.polygons.array.map((polygon, i) => (\n      <polygon key={i} points={polygon.array.map(({ x, y }) => `${x},${y} `).join(\"\")} />\n    ))}\n  </>\n);\n\nexport default StrokeComponent;\n","import React from 'react';\n\nimport { Glyph } from '../kageUtils';\nimport { makeGlyphSeparated } from '../kage';\nimport Stroke from './Stroke';\n\nimport './Glyph.css'\n\nexport interface GlyphComponentProps {\n  glyph: Glyph;\n  selection: number[];\n  handleMouseDownDeselectedStroke?: (evt: React.MouseEvent, index: number) => void;\n  handleMouseDownSelectedStroke?: (evt: React.MouseEvent, index: number) => void;\n}\n\nconst GlyphComponent = (props: GlyphComponentProps) => {\n  const polygonsSep = makeGlyphSeparated(props.glyph);\n\n  const { selection } = props;\n  const nonSelection = polygonsSep.map((_polygons, index) => index)\n    .filter((index) => !selection.includes(index));\n\n  return (\n    <>\n      <g className=\"strokes-deselected\">\n        {nonSelection.map((index) => (\n          <g key={index} onMouseDown={(evt) => props.handleMouseDownDeselectedStroke?.(evt, index)}>\n            <Stroke polygons={polygonsSep[index]} />\n          </g>\n        ))}\n      </g>\n      <g className=\"strokes-selected\">\n        {selection.map((index) => (\n          <g key={index} onMouseDown={(evt) => props.handleMouseDownSelectedStroke?.(evt, index)}>\n            <Stroke polygons={polygonsSep[index]} />\n          </g>\n        ))}\n      </g>\n    </>\n  );\n};\n\nexport default GlyphComponent;\n","import React from 'react';\n\nimport './AreaSelectRect.css';\n\ninterface AreaSelectRectProps {\n  rect: [number, number, number, number] | null;\n}\n\nconst AreaSelectRect = (props: AreaSelectRectProps) => {\n  if (!props.rect) {\n    return null;\n  }\n  let [x1, y1, x2, y2] = props.rect;\n  if (x1 > x2) {\n    // swap\n    const temp = x1;\n    x1 = x2;\n    x2 = temp;\n  }\n  if (y1 > y2) {\n    // swap\n    const temp = y1;\n    y1 = y2;\n    y2 = temp;\n  }\n\n  return <rect className='areaselect-rect' x={x1} y={y1} width={x2 - x1} height={y2 - y1} />;\n};\n\nexport default AreaSelectRect;\n","import React from 'react';\n\nimport './ControlPoint.css';\n\ninterface ControlPointProps {\n  x: number;\n  y: number;\n  className?: string;\n  handleMouseDown: (evt: React.MouseEvent) => void;\n}\n\nconst ControlPoint = (props: ControlPointProps) => (\n  <rect\n    x={props.x - 4}\n    y={props.y - 4}\n    width={8} height={8}\n    className={`controlpoint-rect ${props.className || ''}`}\n    onMouseDown={props.handleMouseDown}\n  />\n);\n\nexport default ControlPoint;\n","import React from 'react';\n\nimport { RectPointPosition } from '../actions/editor';\nimport ControlPoint from './ControlPoint';\n\nimport { SelectionControlState, SelectionControlActions } from '../containers/SelectionControl';\n\nimport './SelectionControl.css';\n\ninterface OwnProps {\n}\n\ntype SelectionControlProps = OwnProps & SelectionControlState & SelectionControlActions;\n\nconst SelectionControl = (props: SelectionControlProps) => (\n  <>\n    {props.rectControl && <>\n      <rect\n        className='selection-rect'\n        x={props.rectControl.coords[0]}\n        y={props.rectControl.coords[1]}\n        width={props.rectControl.coords[2] - props.rectControl.coords[0]}\n        height={props.rectControl.coords[3] - props.rectControl.coords[1]}\n      />\n      <ControlPoint\n        x={(props.rectControl.coords[0] + props.rectControl.coords[2]) / 2}\n        y={props.rectControl.coords[1]}\n        className='north'\n        handleMouseDown={(evt) => props.handleMouseDownRectControl(evt, RectPointPosition.north)}\n      />\n      <ControlPoint\n        x={props.rectControl.coords[0]}\n        y={(props.rectControl.coords[1] + props.rectControl.coords[3]) / 2}\n        className='west'\n        handleMouseDown={(evt) => props.handleMouseDownRectControl(evt, RectPointPosition.west)}\n      />\n      <ControlPoint\n        x={(props.rectControl.coords[0] + props.rectControl.coords[2]) / 2}\n        y={props.rectControl.coords[3]}\n        className='south'\n        handleMouseDown={(evt) => props.handleMouseDownRectControl(evt, RectPointPosition.south)}\n      />\n      <ControlPoint\n        x={props.rectControl.coords[2]}\n        y={(props.rectControl.coords[1] + props.rectControl.coords[3]) / 2}\n        className='east'\n        handleMouseDown={(evt) => props.handleMouseDownRectControl(evt, RectPointPosition.east)}\n      />\n      <ControlPoint\n        x={props.rectControl.coords[2]}\n        y={props.rectControl.coords[3]}\n        className='southeast'\n        handleMouseDown={(evt) => props.handleMouseDownRectControl(evt, RectPointPosition.southeast)}\n      />\n    </>}\n    {props.pointControl.map(({ x, y, className }, index) => (\n      <ControlPoint\n        key={index}\n        x={x} y={y}\n        className={className}\n        handleMouseDown={(evt) => props.handleMouseDownPointControl(evt, index)}\n      />\n    ))}\n  </>\n);\n\nexport default SelectionControl;","import { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\n\nimport { editorActions, RectPointPosition } from '../actions/editor';\nimport SelectionControl from '../components/SelectionControl';\nimport { AppState } from '../reducers';\nimport { getGlyphLinesBBX } from '../kageUtils';\n\nexport interface RectControl {\n  multiSelect: boolean;\n  coords: [number, number, number, number];\n}\nexport interface ControlPoint {\n  x: number;\n  y: number;\n  className: string;\n}\n\nexport interface SelectionControlState {\n  rectControl: RectControl | null;\n  pointControl: ControlPoint[];\n}\n\nexport interface SelectionControlActions {\n  handleMouseDownRectControl: (evt: React.MouseEvent, position: RectPointPosition) => void;\n  handleMouseDownPointControl: (evt: React.MouseEvent, pointIndex: number) => void;\n}\n\nconst mapStateToProps = (state: AppState): SelectionControlState => {\n  if (state.editor.selection.length === 0) {\n    return { rectControl: null, pointControl: [] };\n  }\n  if (state.editor.selection.length > 1) {\n    const selectedStrokes = state.editor.selection.map((index) => state.editor.glyph[index]);\n    const bbx = getGlyphLinesBBX(selectedStrokes);\n    return {\n      rectControl: {\n        multiSelect: true,\n        coords: bbx,\n      },\n      pointControl: [],\n    };\n  }\n  const selectedStroke = state.editor.glyph[state.editor.selection[0]];\n  switch (selectedStroke.value[0]) {\n    case 0:\n    case 9:\n    case 99:\n      return {\n        rectControl: {\n          multiSelect: false,\n          coords: [\n            selectedStroke.value[3],\n            selectedStroke.value[4],\n            selectedStroke.value[5],\n            selectedStroke.value[6],\n          ],\n        },\n        pointControl: [],\n      };\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 6:\n    case 7: {\n      const pointControl: ControlPoint[] = [];\n      for (let i = 3; i + 2 <= selectedStroke.value.length; i += 2) {\n        pointControl.push({\n          x: selectedStroke.value[i],\n          y: selectedStroke.value[i + 1],\n          className: '', // FIXME: match detection\n        });\n      }\n      return { rectControl: null, pointControl };\n    }\n    default:\n      return { rectControl: null, pointControl: [] };\n  }\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch): SelectionControlActions => ({\n  handleMouseDownRectControl: (evt: React.MouseEvent, position: RectPointPosition) => {\n    dispatch(editorActions.startResize([evt, position]));\n    evt.stopPropagation();\n  },\n  handleMouseDownPointControl: (evt: React.MouseEvent, pointIndex: number) => {\n    dispatch(editorActions.startPointDrag([evt, pointIndex]));\n    evt.stopPropagation();\n  },\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectionControl);\n","import React, { useEffect } from 'react';\n\nimport { EditorState } from '../reducers/editor';\n\nimport Glyph from './Glyph';\nimport AreaSelectRect from './AreaSelectRect';\nimport SelectionControl from '../containers/SelectionControl';\n\nimport { GlyphAreaActions } from '../containers/GlyphArea';\nimport './GlyphArea.css';\n\ninterface OwnProps {\n}\n\ntype GlyphAreaProps = OwnProps & EditorState & GlyphAreaActions;\n\nconst GlyphArea = (props: GlyphAreaProps) => {\n  const { handleMouseMove, handleMouseUp } = props;\n  useEffect(() => {\n    document.addEventListener('mousemove', handleMouseMove)\n    document.addEventListener('mouseup', handleMouseUp);\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [handleMouseMove, handleMouseUp]);\n\n  return (\n    <div className=\"glyph-area\">\n      <svg\n        width=\"100%\" height=\"100%\" viewBox=\"-20 -20 500 240\"\n        onMouseDownCapture={props.handleMouseDownCapture}\n        onMouseDown={props.handleMouseDownBackground}\n      >\n        {/* TODO: grid */}\n        <rect x=\"0\" y=\"0\" width=\"200\" height=\"200\" className=\"glyph-boundary\" />\n        <rect x=\"12\" y=\"12\" width=\"176\" height=\"176\" className=\"glyph-guide\" />\n        <Glyph\n          glyph={props.glyph}\n          selection={props.selection}\n          handleMouseDownDeselectedStroke={props.handleMouseDownDeselectedStroke}\n          handleMouseDownSelectedStroke={props.handleMouseDownSelectedStroke}\n        />\n        <SelectionControl />\n        <AreaSelectRect rect={props.areaSelectRect} />\n      </svg>\n    </div>\n  );\n};\n\nexport default GlyphArea;\n","import { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\n\nimport { editorActions, CTMInv } from '../actions/editor';\nimport GlyphArea from '../components/GlyphArea';\nimport { AppState } from '../reducers';\n\nexport interface GlyphAreaActions {\n  handleMouseDownCapture: (evt: React.MouseEvent) => void;\n\n  handleMouseDownBackground: (evt: React.MouseEvent) => void;\n  handleMouseDownDeselectedStroke: (evt: React.MouseEvent, index: number) => void;\n  handleMouseDownSelectedStroke: (evt: React.MouseEvent, index: number) => void;\n\n  handleMouseMove: (evt: MouseEvent) => void;\n  handleMouseUp: (evt: MouseEvent) => void;\n};\n\nconst mapStateToProps = (state: AppState) => ({ ...state.editor });\n\nconst mapDispatchToProps = (dispatch: Dispatch): GlyphAreaActions => ({\n  handleMouseDownCapture: (evt: React.MouseEvent) => {\n    if (!(evt.target instanceof SVGSVGElement)) {\n      return;\n    }\n    const ctm = evt.target.getScreenCTM();\n    if (!ctm) {\n      return;\n    }\n    const pt = evt.target.createSVGPoint();\n    const ctmInv: CTMInv = (evtx, evty) => {\n      pt.x = evtx;\n      pt.y = evty;\n      const { x, y } = pt.matrixTransform(ctm.inverse());\n      return [x, y];\n    };\n    dispatch(editorActions.updateCTMInv(ctmInv));\n  },\n\n  handleMouseDownBackground: (evt: React.MouseEvent) => {\n    if (!(evt.shiftKey || evt.ctrlKey)) {\n      dispatch(editorActions.selectNone());\n    }\n    dispatch(editorActions.startAreaSelect(evt));\n  },\n  handleMouseDownDeselectedStroke: (evt: React.MouseEvent, index: number) => {\n    if (evt.shiftKey || evt.ctrlKey) {\n      dispatch(editorActions.selectAddSingle(index));\n    } else {\n      dispatch(editorActions.selectSingle(index));\n    }\n    dispatch(editorActions.startSelectionDrag(evt));\n    evt.stopPropagation();\n  },\n  handleMouseDownSelectedStroke: (evt: React.MouseEvent, index: number) => {\n    if (evt.shiftKey || evt.ctrlKey) {\n      dispatch(editorActions.selectRemoveSingle(index));\n    }\n    dispatch(editorActions.startSelectionDrag(evt));\n    evt.stopPropagation();\n  },\n\n  handleMouseMove: (evt: MouseEvent) => {\n    dispatch(editorActions.mouseMove(evt));\n  },\n  handleMouseUp: (evt: MouseEvent) => {\n    dispatch(editorActions.mouseUp(evt));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GlyphArea);\n","import React from 'react';\nimport './App.css';\n\nimport GlyphArea from './containers/GlyphArea';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GlyphArea />\n      <div className=\"editor-controls\">\n      </div>\n      <div className=\"parts-list-area\" />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport jaTranslation from './locales/ja.json';\n\nimport args from \"./args\";\n\nconst resources = {\n  ja: {\n    translation: jaTranslation,\n  },\n};\n\nconst host = args.get('host');\nlet lng = 'ja';\nif (host) {\n  switch (host.split('.')[0]) {\n    case 'en':\n      lng = 'en';\n      break;\n    case 'ko':\n      lng = 'ko';\n      break;\n    case 'zhs':\n      lng = 'zh-Hans';\n      break;\n    case 'zht':\n      lng = 'zh-Hant';\n      break;\n  }\n}\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng,\n\n    returnObjects: true,\n    interpolation: {\n      escapeValue: false, // react already safes from xss\n    },\n  });\n\nexport default i18n;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from './reducers';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './i18n';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}