{"version":3,"sources":["actions/editor.ts","kageUtils/match.ts","kageUtils/glyph.ts","kageUtils/bbx.ts","kageUtils/connection.ts","kageUtils/transform.ts","callapi.ts","kage.ts","kageUtils/stretchparam.ts","kageUtils/decompose.ts","args.ts","reducers/editor.ts","reducers/index.ts","store.ts","components/Stroke.tsx","components/Glyph.tsx","components/AreaSelectRect.tsx","components/ControlPoint.tsx","components/SelectionControl.tsx","containers/SelectionControl.ts","components/GlyphArea.tsx","containers/GlyphArea.ts","components/EditorControls.tsx","containers/EditorControls.ts","App.tsx","serviceWorker.ts","i18n.ts","index.tsx"],"names":["RectPointPosition","MatchType","actionCreator","actionCreatorFactory","editorActions","selectSingle","selectAddSingle","selectRemoveSingle","selectNone","selectAll","selectDeselected","selectPrev","selectNext","startAreaSelect","startSelectionDrag","startPointDrag","startResize","mouseMove","mouseUp","updateCTMInv","loadedBuhin","loadedStretchParam","undo","redo","paste","copy","cut","decomposeSelected","toggleFreehand","openOptionModal","closeOptionModal","getNumColumns","strokeType","unparseGlyphLine","glyphLine","values","value","slice","partName","join","parseGlyph","glyphStr","split","map","line","glyphLineStr","splitLine","numColumns","i","push","Math","floor","parseGlyphLine","filter","gLine","length","bbxOfPoints","points","xs","ys","min","max","getGlyphLineBBX","mergeBBX","x11","y11","x12","y12","x21","y21","x22","y22","getGlyphLinesBBX","memoizeOne","glyphLines","reduce","gLines1","gLines2","every","gLine1","index","connectablePairs","position","strokeTypes","shapeTypes","matchConnectablePoint","point","includes","shapeType","getConnectablePoints","result","coord","pointIndex","endPointIndex","listupConnectedPoints","glyph","sPoints","lineIndex","sPoint","forEach","dPoint","some","point2","point1","filter1","filter2","glyph1","points1","glyph2","points2","listupConnectedPointsOfSelection","selection","selectedDescs","applyGlyphLineOperation","tX","tY","applyGlyphPointOperation","pdescs","newGlyph","newValue","moveSelectedGlyphLines","dx","dy","targetDescs","x","round","y","moveSelectedPoint","selectedDesc","targetDesc","resizeSelectedGlyphLines","oldBBX","newBBX","resizeGlyphLine","callApi","path","a","fetch","response","ok","Error","URLSearchParams","text","getSource","name","encodeURIComponent","get","kage","Kage","waiting","Set","makeGlyphSeparated","data","kBuhin","search","has","add","then","source","stretchMatch","exec","params","store","dispatch","delete","catch","err","console","error","loadAbsentBuhin","getStretchPositions","normalizeStretchPositions","positions","sx","sy","tx","decompose","buhinMap","buhinSource","failedBuhin","strokesArray","getEachStrokes","unparseGlyph","box","getBox","x1","y1","x2","y2","ty","isStretchEnabled","oldGlyphLine","newGlyphLine","stretchedX","stretch","minX","maxX","stretchedY","minY","maxY","sx2","sy2","tx2","ty2","px1","py1","px2","py2","revX","revY","setStretchPositions","args","window","location","hash","resizeSelected","selectedGlyphLine","north","west","south","east","southeast","applyDraggingEffectToGlyph","state","dragSelection","dragPoint","resizeSelection","initialState","areaSelectRect","ctmInv","Map","stretchParamMap","freehandMode","showOptionModal","clipboard","editor","reducerWithInitialState","case","concat","index2","_gLine","firstSelected","evt","clientX","clientY","intersections","polygonsSep","gAreaPolygon","array","polygon","gPolygon","polygonInPolygon","polygonIntersectsPolygon","performAreaSelect","newSelection","Array","from","newMap","set","param","targetLines","newLines","subindex","combineReducers","createStore","reducer","StrokeComponent","props","polygons","key","GlyphComponent","nonSelection","_polygons","className","onMouseDown","handleMouseDownDeselectedStroke","Stroke","handleMouseDownSelectedStroke","AreaSelectRect","rect","temp","width","height","ControlPoint","handleMouseDown","SelectionControl","rectControl","coords","handleMouseDownRectControl","pointControl","handleMouseDownPointControl","getMatchType","none","isOnline","match","online","mapStateToProps","createSelector","selectedStrokes","multiSelect","selectedStroke","matchType","connect","stopPropagation","GlyphArea","handleMouseMove","handleMouseUp","useEffect","document","addEventListener","removeEventListener","viewBox","onMouseDownCapture","handleMouseDownCapture","handleMouseDownBackground","ctm","currentTarget","getScreenCTM","pt","createSVGPoint","ictm","inverse","evtx","evty","matrixTransform","shiftKey","ctrlKey","EditorControls","t","useTranslation","disabled","undoDisabled","onClick","redoDisabled","pasteDisabled","decomposeDisabled","options","finishEdit","App","Boolean","hostname","resources","ja","translation","host","lng","i18n","use","initReactI18next","init","returnObjects","interpolation","escapeValue","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f8ba6fcb.chunk.js","sourcesContent":["import actionCreatorFactory from 'typescript-fsa';\n\nimport { StretchParam } from '../kageUtils/stretchparam';\n\nexport type CTMInv = (x: number, y: number) => [number, number];\nexport enum RectPointPosition {\n  north,\n  south,\n  east,\n  west,\n  southeast,\n}\n\nconst actionCreator = actionCreatorFactory('EDITOR');\n\nexport const editorActions = {\n  selectSingle: actionCreator<number>('SELECT_SINGLE'),\n  selectAddSingle: actionCreator<number>('SELECT_ADD_SINGLE'),\n  selectRemoveSingle: actionCreator<number>('SELECT_REMOVE_SINGLE'),\n  selectNone: actionCreator('SELECT_NONE'),\n  selectAll: actionCreator('SELECT_ALL'),\n  selectDeselected: actionCreator('SELECT_TOGGLE_ALL'),\n  selectPrev: actionCreator('SELECT_PREV'),\n  selectNext: actionCreator('SELECT_NEXT'),\n\n  startAreaSelect: actionCreator<React.MouseEvent>('AREA_SELECT_START'),\n  startSelectionDrag: actionCreator<React.MouseEvent>('SELECTION_DRAG_START'),\n  startPointDrag: actionCreator<[React.MouseEvent, number]>('MOVE_POINT_START'),\n  startResize: actionCreator<[React.MouseEvent, RectPointPosition]>('RESIZE_START'),\n\n  mouseMove: actionCreator<MouseEvent>('MOUSE_MOVE'),\n  mouseUp: actionCreator<MouseEvent>('MOUSE_UP'),\n\n  updateCTMInv: actionCreator<CTMInv>('UPDATE_CTMINV'),\n\n  loadedBuhin: actionCreator<[string, string]>('LOAD_BUHIN_DATA'),\n  loadedStretchParam: actionCreator<[string, StretchParam]>('LOAD_STRETCH_PARAM'),\n\n  undo: actionCreator('UNDO'),\n  redo: actionCreator('REDO'),\n\n  paste: actionCreator('PASTE'),\n  copy: actionCreator('COPY_SELECTION'),\n  cut: actionCreator('CUT_SELECTION'),\n  decomposeSelected: actionCreator('DECOMPOSE_SELECTION'),\n\n  toggleFreehand: actionCreator('TOGGLE_FREEHAND_MODE'),\n\n  openOptionModal: actionCreator('OPEN_OPTION_MODAL'),\n  closeOptionModal: actionCreator('CLOSE_OPTION_MODAL'),\n};\n","import { Glyph, PointDescriptor, getNumColumns } from './glyph';\n\nexport enum MatchType {\n  none,\n  online,\n  match,\n}\n\nexport const getMatchType = (glyph: Glyph, point: PointDescriptor): MatchType => {\n  const glyphLine = glyph[point.lineIndex];\n\n  const endPointIndex = (getNumColumns(glyphLine.value[0]) - 3) / 2 - 1;\n  if (point.pointIndex !== 0 && point.pointIndex !== endPointIndex) {\n    return MatchType.none;\n  }\n\n  const x = glyphLine.value[3 + point.pointIndex * 2];\n  const y = glyphLine.value[3 + point.pointIndex * 2 + 1];\n  const isOnline = (x1: number, y1: number, x2: number, y2: number): boolean => (\n    (\n      x1 === x2 && // 垂直\n      x1 === x && y1 <= y && y <= y2\n    ) || (\n      y1 === y2 && // 水平\n      y1 === y && x1 <= x && x <= x2\n    )\n  );\n\n  let result = MatchType.none;\n  for (let lineIndex = 0; lineIndex < glyph.length; lineIndex++) {\n    if (point.lineIndex === lineIndex) {\n      continue;\n    }\n    const glyphLine = glyph[lineIndex];\n    if ([0, 9, 99].includes(glyphLine.value[0])) {\n      continue;\n    }\n\n    if (glyphLine.value[3] === x && glyphLine.value[4] === y) {\n      return MatchType.match;\n    }\n    const endPointIndex = (getNumColumns(glyphLine.value[0]) - 3) / 2 - 1;\n    if (\n      glyphLine.value[3 + endPointIndex * 2] === x &&\n      glyphLine.value[3 + endPointIndex * 2 + 1] === y\n    ) {\n      return MatchType.match;\n    }\n\n    switch (glyphLine.value[0]) {\n      case 3:\n      case 4:\n        if (\n          isOnline(glyphLine.value[3], glyphLine.value[4], glyphLine.value[5], glyphLine.value[6]) ||\n          isOnline(glyphLine.value[5], glyphLine.value[6], glyphLine.value[7], glyphLine.value[8])\n        ) {\n          result = MatchType.online;\n        }\n        break;\n      case 1:\n      case 7:\n        if (isOnline(glyphLine.value[3], glyphLine.value[4], glyphLine.value[5], glyphLine.value[6])) {\n          result = MatchType.online;\n        }\n        break;\n    }\n  }\n  return result;\n};\n","export interface GlyphLine {\n  value: number[];\n  partName?: string;\n}\n\nexport const getNumColumns = (strokeType: number): number => {\n  switch (strokeType) {\n    case 0:\n    case 1:\n    case 9:\n      return 7;\n    case 2:\n    case 3:\n    case 4:\n      return 9;\n    case 6:\n    case 7:\n    case 99:\n      return 11;\n    default:\n      return 0;\n  }\n};\n\nexport const parseGlyphLine = (glyphLineStr: string): GlyphLine => {\n  const splitLine = glyphLineStr.split(':');\n  const strokeType = +splitLine[0];\n  const numColumns = getNumColumns(strokeType);\n  const value = [];\n  for (let i = 0; i < numColumns; i++) {\n    value.push(Math.floor(+splitLine[i] || 0));\n  }\n  if (value[0] === 99) {\n    const partName = splitLine[7] || '';\n    return { value, partName }\n  }\n  return { value };\n};\n\nexport const unparseGlyphLine = (glyphLine: GlyphLine): string => {\n  const values: (number | string)[] = glyphLine.value.slice();\n  if (values[0] === 99) {\n    values[7] = glyphLine.partName || '';\n  }\n  return values.join(':');\n};\n\nexport const isValidGlyphLine = (glyphLine: GlyphLine): boolean => (\n  glyphLine.value.length !== 0 &&\n  (\n    glyphLine.value[0] !== 0 ||\n    glyphLine.value[1] === 97 || glyphLine.value[1] === 98 || glyphLine.value[1] === 99\n  )\n);\n\n\nexport type Glyph = GlyphLine[];\n\nexport const parseGlyph = (glyphStr: string): Glyph => (\n  glyphStr.split(/[$\\r\\n]+/)\n    .map((line) => parseGlyphLine(line))\n    .filter((gLine) => isValidGlyphLine(gLine))\n);\n\nexport const unparseGlyph = (glyph: Glyph): string => (\n  glyph\n    .map((gLine) => unparseGlyphLine(gLine))\n    .join('$')\n);\n\n\nexport interface PointDescriptor {\n  lineIndex: number;\n  pointIndex: number;\n}\n","import memoizeOne from 'memoize-one';\n\nimport { GlyphLine } from './glyph';\n\nexport type BBX = [number, number, number, number];\n\nexport const bbxOfPoints = (points: [number, number][]): BBX => {\n  const xs = points.map(([x]) => x);\n  const ys = points.map(([, y]) => y);\n  return [\n    Math.min(...xs),\n    Math.min(...ys),\n    Math.max(...xs),\n    Math.max(...ys),\n  ];\n};\n\nexport const getGlyphLineBBX = (glyphLine: GlyphLine): BBX => {\n  switch (glyphLine.value[0]) {\n    case 99:\n      return bbxOfPoints([\n        [glyphLine.value[3], glyphLine.value[4]],\n        [glyphLine.value[5], glyphLine.value[6]],\n      ]);\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 6:\n    case 7:\n    case 9: {\n      const points: [number, number][] = [];\n      for (let i = 3; i + 2 <= glyphLine.value.length; i += 2) {\n        points.push([glyphLine.value[i], glyphLine.value[i + 1]]);\n      }\n      return bbxOfPoints(points);\n    }\n    default:\n      return bbxOfPoints([]);\n  }\n}\n\nexport const mergeBBX = ([x11, y11, x12, y12]: BBX, [x21, y21, x22, y22]: BBX): BBX => [\n  Math.min(x11, x21),\n  Math.min(y11, y21),\n  Math.max(x12, x22),\n  Math.max(y12, y22),\n];\n\nexport const getGlyphLinesBBX = memoizeOne((glyphLines: GlyphLine[]): BBX => {\n  return glyphLines.map(getGlyphLineBBX).reduce(mergeBBX, bbxOfPoints([]));\n}, ([gLines1], [gLines2]) => (\n  gLines1.length === gLines2.length &&\n  gLines1.every((gLine1, index) => gLine1 === gLines2[index])\n));\n","import memoizeOne from 'memoize-one';\n\nimport { GlyphLine, Glyph, PointDescriptor, getNumColumns } from './glyph';\n\ninterface ConnectablePoint {\n  position: 'start' | 'end';\n  strokeType: number;\n  shapeType: number;\n  coord: [number, number];\n  pointIndex: number;\n}\n\ninterface ConnectablePointFilter {\n  position: 'start' | 'end';\n  strokeTypes: number[];\n  shapeTypes: number[];\n}\n\nconst connectablePairs: [ConnectablePointFilter, ConnectablePointFilter][] = [\n  [\n    // 左上\n    {\n      position: 'start',\n      strokeTypes: [1],\n      shapeTypes: [2],\n    },\n    {\n      position: 'start',\n      strokeTypes: [1, 2, 3, 4, 6, 7],\n      shapeTypes: [12],\n    },\n  ],\n  [\n    // 左下\n    {\n      position: 'start',\n      strokeTypes: [1],\n      shapeTypes: [2],\n    },\n    {\n      position: 'end',\n      strokeTypes: [1],\n      shapeTypes: [13, 313, 413],\n    },\n  ],\n  [\n    // 右上\n    {\n      position: 'end',\n      strokeTypes: [1],\n      shapeTypes: [2],\n    },\n    {\n      position: 'start',\n      strokeTypes: [1, 2, 3, 4, 6, 7],\n      shapeTypes: [22],\n    },\n  ],\n  [\n    // 右下\n    {\n      position: 'end',\n      strokeTypes: [1],\n      shapeTypes: [2],\n    },\n    {\n      position: 'end',\n      strokeTypes: [1],\n      shapeTypes: [23, 24],\n    },\n  ],\n];\n\nconst matchConnectablePoint = (filter: ConnectablePointFilter, point: ConnectablePoint) => (\n  filter.position === point.position &&\n  filter.strokeTypes.includes(point.strokeType) &&\n  filter.shapeTypes.includes(point.shapeType)\n)\n\nconst isConnectable = (point1: ConnectablePoint, point2: ConnectablePoint) => (\n  point1.coord[0] === point2.coord[0] &&\n  point1.coord[1] === point2.coord[1] &&\n  connectablePairs.some(([filter1, filter2]) => (\n    (matchConnectablePoint(filter1, point1) && matchConnectablePoint(filter2, point2)) ||\n    (matchConnectablePoint(filter2, point1) && matchConnectablePoint(filter1, point2))\n  ))\n);\n\nconst getConnectablePoints = (glyphLine: GlyphLine): ConnectablePoint[] => {\n  const result: ConnectablePoint[] = [];\n  switch (glyphLine.value[0]) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 6:\n    case 7: {\n      result.push({\n        position: 'start',\n        strokeType: glyphLine.value[0],\n        shapeType: glyphLine.value[1],\n        coord: [\n          glyphLine.value[3],\n          glyphLine.value[4],\n        ],\n        pointIndex: 0,\n      });\n      const endPointIndex = (getNumColumns(glyphLine.value[0]) - 3) / 2 - 1;\n      result.push({\n        position: 'end',\n        strokeType: glyphLine.value[0],\n        shapeType: glyphLine.value[2],\n        coord: [\n          glyphLine.value[3 + endPointIndex * 2],\n          glyphLine.value[3 + endPointIndex * 2 + 1],\n        ],\n        pointIndex: endPointIndex,\n      });\n      break;\n    }\n  }\n  return result;\n};\n\nexport const listupConnectedPoints = memoizeOne((glyph: Glyph, points: PointDescriptor[]): PointDescriptor[] => {\n  const sPoints: ConnectablePoint[] = [];\n  for (const { lineIndex, pointIndex } of points) {\n    for (const sPoint of getConnectablePoints(glyph[lineIndex])) {\n      if (sPoint.pointIndex === pointIndex) {\n        sPoints.push(sPoint);\n      }\n    }\n  }\n  const result: PointDescriptor[] = [];\n  glyph.forEach((glyphLine, lineIndex) => {\n    for (const dPoint of getConnectablePoints(glyphLine)) {\n      if (sPoints.some((sPoint) => isConnectable(sPoint, dPoint))) {\n        result.push({\n          lineIndex,\n          pointIndex: dPoint.pointIndex,\n        });\n      }\n    }\n  });\n  return result;\n}, ([glyph1, points1], [glyph2, points2]) => (\n  glyph1 === glyph2 &&\n  points1.length === points2.length &&\n  points1.every((point1, index) => (\n    point1.lineIndex === points2[index].lineIndex &&\n    point1.pointIndex === points2[index].pointIndex\n  ))\n));\n\nexport const listupConnectedPointsOfSelection = memoizeOne((glyph: Glyph, selection: number[]): PointDescriptor[] => {\n  const selectedDescs: PointDescriptor[] = [];\n  for (const lineIndex of selection) {\n    const glyphLine = glyph[lineIndex];\n    selectedDescs.push({ lineIndex, pointIndex: 0 });\n    selectedDescs.push({ lineIndex, pointIndex: (getNumColumns(glyphLine.value[0]) - 3) / 2 - 1 });\n  }\n  return listupConnectedPoints(glyph, selectedDescs)\n    .filter(({ lineIndex }) => !selection.includes(lineIndex));\n});\n","import { GlyphLine, Glyph, PointDescriptor } from './glyph';\n\nimport { BBX } from './bbx';\nimport { listupConnectedPoints, listupConnectedPointsOfSelection } from './connection';\n\nexport const applyGlyphLineOperation = (glyphLine: GlyphLine, tX: (x: number) => number, tY: (y: number) => number): GlyphLine => {\n  switch (glyphLine.value[0]) {\n    case 99: {\n      const value = glyphLine.value.slice();\n      value[3] = tX(value[3]);\n      value[4] = tY(value[4]);\n      value[5] = tX(value[5]);\n      value[6] = tY(value[6]);\n      return { value, partName: glyphLine.partName };\n    }\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 6:\n    case 7:\n    case 9: {\n      const value = glyphLine.value.slice();\n      for (let i = 3; i + 2 <= value.length; i += 2) {\n        value[i] = tX(value[i]);\n        value[i + 1] = tY(value[i + 1]);\n      }\n      return { value };\n    }\n    default:\n      return glyphLine;\n  }\n}\n\nexport const applyGlyphPointOperation = (glyph: Glyph, pdescs: PointDescriptor[], tX: (x: number) => number, tY: (y: number) => number): Glyph => {\n  if (pdescs.length === 0) {\n    return glyph;\n  }\n  const newGlyph = glyph.slice();\n  for (const { lineIndex, pointIndex } of pdescs) {\n    const glyphLine = newGlyph[lineIndex];\n    const newValue = glyphLine.value.slice();\n    newValue[3 + pointIndex * 2] = tX(newValue[3 + pointIndex * 2]);\n    newValue[3 + pointIndex * 2 + 1] = tY(newValue[3 + pointIndex * 2 + 1]);\n    newGlyph[lineIndex] = {\n      ...glyphLine,\n      value: newValue,\n    };\n  }\n  return newGlyph;\n};\n\n\nexport const moveSelectedGlyphLines = (glyph: Glyph, selection: number[], dx: number, dy: number): Glyph => {\n  const targetDescs = listupConnectedPointsOfSelection(glyph, selection);\n\n  const tX = (x: number) => Math.round(x + dx);\n  const tY = (y: number) => Math.round(y + dy);\n  glyph = glyph.map((glyphLine, index) => selection.includes(index)\n    ? applyGlyphLineOperation(glyphLine, tX, tY)\n    : glyphLine\n  );\n  glyph = applyGlyphPointOperation(glyph, targetDescs, tX, tY);\n  return glyph;\n};\n\nexport const moveSelectedPoint = (glyph: Glyph, selection: number[], pointIndex: number, dx: number, dy: number): Glyph => {\n  if (selection.length === 0) {\n    return glyph;\n  }\n  const lineIndex = selection[0];\n  const selectedDesc: PointDescriptor = { lineIndex, pointIndex };\n  const targetDescs = listupConnectedPoints(glyph, [selectedDesc])\n    .filter((targetDesc) => targetDesc.lineIndex !== lineIndex);\n  targetDescs.push(selectedDesc);\n\n  const tX = (x: number) => Math.round(x + dx);\n  const tY = (y: number) => Math.round(y + dy);\n  glyph = applyGlyphPointOperation(glyph, targetDescs, tX, tY);\n  return glyph;\n};\n\nexport const resizeGlyphLine = (glyphLine: GlyphLine, oldBBX: BBX, newBBX: BBX): GlyphLine => {\n  const [x11, y11, x12, y12] = oldBBX;\n  const [x21, y21, x22, y22] = newBBX;\n  const tX = (x: number) => Math.round(x21 + (x - x11) * (x22 - x21) / (x12 - x11));\n  const tY = (y: number) => Math.round(y21 + (y - y11) * (y22 - y21) / (y12 - y11));\n  return applyGlyphLineOperation(glyphLine, tX, tY);\n};\n\nexport const resizeSelectedGlyphLines = (glyph: Glyph, selection: number[], oldBBX: BBX, newBBX: BBX): Glyph => {\n  return glyph.map((glyphLine, index) => selection.includes(index)\n    ? resizeGlyphLine(glyphLine, oldBBX, newBBX)\n    : glyphLine\n  );\n};\n","// The temporary reverse proxy which adds 'Access-Control-Allow-Origin: *' header.\n// This header is required for cross-origin requests.\nconst apiUrlPrefix = 'https://asia-northeast1-ku6goma.cloudfunctions.net/gwproxy';\n\nconst callApi = async (path: string) => {\n  const response = await fetch(apiUrlPrefix + path);\n  if (!response.ok) {\n    throw new Error('API error occurred');\n  }\n  return new URLSearchParams(await response.text());\n};\n\nexport const getSource = async (name: string) => {\n  const result = await callApi(`/get_source.cgi?name=${encodeURIComponent(name)}`);\n  return result.get('data');\n};\n\nexport const search = async (query: string) => {\n  const result = await callApi(`/search4ge.cgi?query=${encodeURIComponent(query)}`);\n  return result.get('data')!;\n};\n\nexport const getCandidate = async (name: string) => {\n  const result = await callApi(`/get_candidate.cgi?name=${encodeURIComponent(name)}`);\n  return result.get('data')!;\n};\n","import memoizeOne from 'memoize-one';\n\nimport { Kage, Polygons } from '@kurgm/kage-engine';\nimport { Glyph, unparseGlyphLine } from './kageUtils/glyph';\nimport { StretchParam } from './kageUtils/stretchparam';\n\nimport store from './store';\nimport { editorActions } from './actions/editor';\n\nimport { getSource } from './callapi';\n\nexport const kage = new Kage();\n\nlet waiting = new Set<string>();\nconst loadAbsentBuhin = (name: string) => {\n  if (waiting.has(name)) {\n    return;\n  }\n  waiting.add(name);\n  getSource(name)\n    .then((source) => {\n      if (typeof source !== 'string') {\n        throw new Error(`failed to get buhin source of ${name}`);\n      }\n      const stretchMatch = /^0:1:0:(-?\\d+):(-?\\d+):(-?\\d+):(-?\\d+)(?=$|\\$)/.exec(source);\n      if (stretchMatch) {\n        const params: StretchParam = [\n          +stretchMatch[1] || 0,\n          +stretchMatch[2] || 0,\n          +stretchMatch[3] || 0,\n          +stretchMatch[4] || 0,\n        ];\n        store.dispatch(editorActions.loadedStretchParam([name, params]));\n      }\n      store.dispatch(editorActions.loadedBuhin([name, source]));\n      waiting.delete(name);\n    })\n    .catch((err) => console.error(err));\n};\n\nexport const makeGlyphSeparated = memoizeOne((glyph: Glyph, map: Map<string, string>): Polygons[] => {\n  const data = glyph.map(unparseGlyphLine);\n  kage.kBuhin.search = (name) => {\n    const result = map.get(name);\n    if (typeof result === 'undefined') {\n      loadAbsentBuhin(name);\n      return '';\n    }\n    return result;\n  };\n  const result = kage.makeGlyphSeparated(data);\n  return result;\n});\n","import { GlyphLine } from './glyph';\n\nexport type StretchParam = [number, number, number, number];\nexport type StretchPositions = [number, number, number, number];\n\nexport const getStretchPositions = (glyphLine: GlyphLine): StretchPositions | null => {\n  if (glyphLine.value[0] !== 99) {\n    return null;\n  }\n  const sx = glyphLine.value[9];\n  const sy = glyphLine.value[10];\n  const tx = glyphLine.value[1];\n  const ty = glyphLine.value[2];\n  return [sx, sy, tx, ty];\n};\n\nexport const setStretchPositions = (glyphLine: GlyphLine, positions: StretchPositions): GlyphLine => {\n  if (glyphLine.value[0] !== 99) {\n    return glyphLine;\n  }\n  const [sx, sy, tx, ty] = positions;\n\n  const newValue = glyphLine.value.slice();\n  newValue[9] = sx;\n  newValue[10] = sy;\n  newValue[1] = tx;\n  newValue[2] = ty;\n  return { value: newValue, partName: glyphLine.partName };\n};\n\nexport const normalizeStretchPositions = (positions: StretchPositions): StretchPositions => {\n  let [sx, sy, tx, ty] = positions;\n  if (tx <= 100) {\n    tx += 200;\n    sx = sy = 0;\n  }\n  return [sx, sy, tx, ty];\n};\n\nexport const calcStretchPositions = (param: StretchParam, k: number): StretchPositions => {\n  const [x0, y0, x1, y1] = param;\n  return [\n    x0 - 100,\n    y0 - 100,\n    x0 + (x1 - x0) * k / 20 + 100,\n    y0 + (y1 - y0) * k / 20 - 100,\n  ];\n};\n\nconst clampStretchScalar = (k: number): number => Math.max(-10, Math.min(10, k));\n\nexport const calcStretchScalar = (param: StretchParam, positions: StretchPositions): number => {\n  const [x0, y0, x1, y1] = param;\n  if (x0 === x1 && y0 === y1) {\n    return 0;\n  }\n  const [sx, sy, tx, ty] = normalizeStretchPositions(positions);\n  if (sx === tx - 200 && sy === ty) {\n    return 0;\n  }\n  return clampStretchScalar(Math.round(\n    Math.abs(x0 - x1) > Math.abs(y0 - y1)\n      ? (tx - 100 - x0) / (x1 - x0) * 20\n      : (ty + 100 - y0) / (y1 - y0) * 20\n  )) || 0;\n}\n","import { kage } from '../kage';\n\nimport { GlyphLine, parseGlyph, unparseGlyph } from './glyph';\nimport { getStretchPositions, normalizeStretchPositions, setStretchPositions } from './stretchparam';\nimport { applyGlyphLineOperation } from './transform';\n\nexport const decompose = (glyphLine: GlyphLine, buhinMap: Map<string, string>): GlyphLine[] => {\n  if (glyphLine.value[0] !== 99) {\n    return [glyphLine];\n  }\n  const buhinSource = buhinMap.get(glyphLine.partName!);\n  if (!buhinSource) {\n    return [glyphLine];\n  }\n\n  let failedBuhin = false;\n  kage.kBuhin.search = (name: string) => {\n    const data = buhinMap.get(name);\n    if (typeof data !== 'string') {\n      failedBuhin = true;\n      return '';\n    }\n    return data;\n  };\n\n  const glyph = parseGlyph(buhinSource);\n\n  const strokesArray =\n    // @ts-ignore 2445\n    kage.getEachStrokes(\n      unparseGlyph(glyph)\n    );\n  const box =\n    // @ts-ignore 2445\n    kage.getBox(\n      strokesArray\n    );\n\n  if (failedBuhin) {\n    return [glyphLine];\n  }\n\n  const x1 = glyphLine.value[3];\n  const y1 = glyphLine.value[4];\n  const x2 = glyphLine.value[5];\n  const y2 = glyphLine.value[6];\n  const [sx, sy, tx, ty] = normalizeStretchPositions(getStretchPositions(glyphLine)!);\n  const isStretchEnabled = !(sx === tx - 200 && sy === ty);\n\n  return glyph.map((oldGlyphLine) => {\n    const tX = (x: number) => {\n      const stretchedX = isStretchEnabled\n        ? kage.stretch(tx - 200, sx, x, box.minX, box.maxX)\n        : x;\n      return Math.round(stretchedX / 200 * (x2 - x1) + x1);\n    };\n    const tY = (y: number) => {\n      const stretchedY = isStretchEnabled\n        ? kage.stretch(ty, sy, y, box.minY, box.maxY)\n        : y;\n      return Math.round(stretchedY / 200 * (y2 - y1) + y1);\n    };\n    const newGlyphLine = applyGlyphLineOperation(oldGlyphLine, tX, tY);\n\n    if (!(isStretchEnabled && newGlyphLine.value[0] === 99)) {\n      return newGlyphLine;\n    }\n\n    const [sx2, sy2, tx2, ty2] = normalizeStretchPositions(getStretchPositions(newGlyphLine)!);\n    if (!(sx2 === tx2 - 200 && sy2 === ty2)) {\n      // Cannot compose two stretches...\n      return newGlyphLine;\n    }\n\n    const px1 = newGlyphLine.value[3];\n    const py1 = newGlyphLine.value[4];\n    const px2 = newGlyphLine.value[5];\n    const py2 = newGlyphLine.value[6];\n\n    if (px1 === px2 || py1 === py2) {\n      return newGlyphLine;\n    }\n\n    const revX = (x: number) => (x - px1) / (px2 - px1) * 200;\n    const revY = (y: number) => (y - py1) / (py2 - py1) * 200;\n    return setStretchPositions(newGlyphLine, [\n      revX(sx2 + 100),\n      revY(sy2 + 100),\n      revX(tx2 - 100) + 100,\n      revY(ty2 + 100),\n    ]);\n  });\n};\n","const args = new URLSearchParams(window.location.hash.slice(1));\n\nexport default args;\n","import { reducerWithInitialState } from 'typescript-fsa-reducers';\n\n// @ts-ignore\nimport { polygonInPolygon, polygonIntersectsPolygon } from 'geometric';\n\nimport { editorActions, RectPointPosition } from '../actions/editor';\nimport { GlyphLine, Glyph, parseGlyph } from '../kageUtils/glyph';\nimport { getGlyphLinesBBX } from '../kageUtils/bbx';\nimport { moveSelectedGlyphLines, moveSelectedPoint, resizeSelectedGlyphLines, applyGlyphLineOperation } from '../kageUtils/transform';\nimport { StretchParam } from '../kageUtils/stretchparam';\nimport { decompose } from '../kageUtils/decompose';\nimport { makeGlyphSeparated } from '../kage';\n\nimport args from '../args';\n\n\nconst performAreaSelect = (glyph: Glyph, buhinMap: Map<string, string>, x1: number, y1: number, x2: number, y2: number): number[] => {\n  const polygonsSep = makeGlyphSeparated(glyph, buhinMap);\n  const result = [];\n\n  const gAreaPolygon: [number, number][] = [\n    [x1, y1],\n    [x1, y2],\n    [x2, y2],\n    [x2, y1],\n    [x1, y1],\n  ];\n\n  for (let index = 0; index < polygonsSep.length; index++) {\n    const polygons = polygonsSep[index];\n    if (polygons.array.some((polygon) => {\n      const gPolygon = polygon.array.map(({ x, y }) => [x, y]);\n      gPolygon.push(gPolygon[0]); // close polygon\n\n      return (\n        polygonInPolygon(gAreaPolygon, gPolygon) ||\n        polygonInPolygon(gPolygon, gAreaPolygon) ||\n        polygonIntersectsPolygon(gAreaPolygon, gPolygon)\n      ) as boolean;\n    })) {\n      result.push(index);\n    }\n  }\n  return result;\n};\n\nexport const resizeSelected = (glyph: Glyph, selection: number[], position: RectPointPosition, dx: number, dy: number): Glyph => {\n  if (selection.length === 1) {\n    const selectedGlyphLine = glyph[selection[0]];\n    switch (selectedGlyphLine.value[0]) {\n      case 0:\n      case 9:\n      case 99: {\n        const newValue = selectedGlyphLine.value.slice();\n        switch (position) {\n          case RectPointPosition.north:\n            newValue[4] += dy;\n            break;\n          case RectPointPosition.west:\n            newValue[3] += dx;\n            break;\n          case RectPointPosition.south:\n            newValue[6] += dy;\n            break;\n          case RectPointPosition.east:\n            newValue[5] += dx;\n            break;\n          case RectPointPosition.southeast:\n            newValue[5] += dx;\n            newValue[6] += dy;\n            break;\n          default:\n            // exhaustive?\n            ((_x: never) => { })(position);\n        }\n        const newGlyphLine: GlyphLine = selectedGlyphLine.value[0] === 99\n          ? { value: newValue, partName: selectedGlyphLine.partName }\n          : { value: newValue };\n        return glyph.map((glyphLine, index) => index === selection[0] ? newGlyphLine : glyphLine);\n      }\n    }\n  }\n  const minSize = 20;\n  const oldBBX = getGlyphLinesBBX(selection.map((index) => glyph[index]));\n  const newBBX = oldBBX.slice() as typeof oldBBX;\n  switch (position) {\n    case RectPointPosition.north:\n      newBBX[1] = Math.min(newBBX[1] + dy, newBBX[3] - minSize);\n      break;\n    case RectPointPosition.west:\n      newBBX[0] = Math.min(newBBX[0] + dx, newBBX[2] - minSize);\n      break;\n    case RectPointPosition.south:\n      newBBX[3] = Math.max(newBBX[3] + dy, newBBX[1] + minSize);\n      break;\n    case RectPointPosition.east:\n      newBBX[2] = Math.max(newBBX[2] + dx, newBBX[0] + minSize);\n      break;\n    case RectPointPosition.southeast:\n      newBBX[2] = Math.max(newBBX[2] + dx, newBBX[0] + minSize);\n      newBBX[3] = Math.max(newBBX[3] + dy, newBBX[1] + minSize);\n      break;\n    default:\n      // exhaustive?\n      ((_x: never) => { })(position);\n  }\n  return resizeSelectedGlyphLines(glyph, selection, oldBBX, newBBX);\n};\n\nexport const applyDraggingEffectToGlyph = (state: EditorState): Glyph => {\n  let glyph = state.glyph;\n  if (state.dragSelection) {\n    const [x1, y1, x2, y2] = state.dragSelection;\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    glyph = moveSelectedGlyphLines(state.glyph, state.selection, dx, dy);\n  } else if (state.dragPoint) {\n    const [pointIndex, [x1, y1, x2, y2]] = state.dragPoint;\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    glyph = moveSelectedPoint(state.glyph, state.selection, pointIndex, dx, dy);\n  } else if (state.resizeSelection) {\n    const [position, [x1, y1, x2, y2]] = state.resizeSelection;\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    glyph = resizeSelected(state.glyph, state.selection, position, dx, dy);\n  }\n  return glyph;\n}\n\n\nexport interface EditorState {\n  glyph: Glyph;\n  selection: number[];\n  areaSelectRect: [number, number, number, number] | null;\n  dragSelection: [number, number, number, number] | null;\n  dragPoint: [number, [number, number, number, number]] | null;\n  resizeSelection: [RectPointPosition, [number, number, number, number]] | null;\n  ctmInv: ((x: number, y: number) => [number, number]) | null;\n  buhinMap: Map<string, string>;\n  stretchParamMap: Map<string, StretchParam>;\n  freehandMode: boolean;\n  showOptionModal: boolean;\n  clipboard: GlyphLine[];\n}\n\nconst initialState: EditorState = {\n  glyph: parseGlyph(args.get('data') || ''),\n  selection: [],\n  areaSelectRect: null,\n  dragSelection: null,\n  dragPoint: null,\n  resizeSelection: null,\n  ctmInv: null,\n  buhinMap: new Map<string, string>(),\n  stretchParamMap: new Map<string, StretchParam>(),\n  freehandMode: false,\n  showOptionModal: false,\n  clipboard: [],\n};\n\nconst editor = reducerWithInitialState(initialState)\n  .case(editorActions.selectSingle, (state, index) => ({\n    ...state,\n    selection: [index],\n  }))\n  .case(editorActions.selectAddSingle, (state, index) => ({\n    ...state,\n    selection: state.selection.includes(index) ? state.selection : state.selection.concat([index]),\n  }))\n  .case(editorActions.selectRemoveSingle, (state, index) => ({\n    ...state,\n    selection: state.selection.filter((index2) => index !== index2),\n  }))\n  .case(editorActions.selectAll, (state) => ({\n    ...state,\n    selection: state.glyph.map((_gLine, index) => index),\n  }))\n  .case(editorActions.selectDeselected, (state) => ({\n    ...state,\n    selection: state.glyph.map((_gLine, index) => index).filter((index) => !state.selection.includes(index)),\n  }))\n  .case(editorActions.selectNone, (state) => ({\n    ...state,\n    selection: [],\n  }))\n  .case(editorActions.selectPrev, (state) => {\n    if (state.glyph.length === 0) {\n      return { ...state, selection: [] };\n    }\n    const firstSelected = state.selection.length === 0 ? 0 : Math.min(...state.selection);\n    return {\n      ...state,\n      selection: [(firstSelected - 1 + state.glyph.length) % state.glyph.length],\n    };\n  })\n  .case(editorActions.selectNext, (state) => {\n    if (state.glyph.length === 0) {\n      return { ...state, selection: [] };\n    }\n    const firstSelected = state.selection.length === 0 ? -1 : Math.max(...state.selection);\n    return {\n      ...state,\n      selection: [(firstSelected + 1 + state.glyph.length) % state.glyph.length],\n    };\n  })\n\n  .case(editorActions.startAreaSelect, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      areaSelectRect: [x1, y1, x1, y1],\n    };\n  })\n  .case(editorActions.startSelectionDrag, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      dragSelection: [x1, y1, x1, y1],\n    };\n  })\n  .case(editorActions.startPointDrag, (state, [evt, pointIndex]) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      dragPoint: [pointIndex, [x1, y1, x1, y1]],\n    };\n  })\n  .case(editorActions.startResize, (state, [evt, position]) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      resizeSelection: [position, [x1, y1, x1, y1]],\n    };\n  })\n\n  .case(editorActions.mouseMove, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    if (state.areaSelectRect) {\n      const [x1, y1] = state.areaSelectRect;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        areaSelectRect: [x1, y1, x2, y2],\n      };\n    }\n    if (state.dragSelection) {\n      const [x1, y1] = state.dragSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        dragSelection: [x1, y1, x2, y2],\n      };\n    }\n    if (state.dragPoint) {\n      const [pointIndex, [x1, y1]] = state.dragPoint;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        dragPoint: [pointIndex, [x1, y1, x2, y2]],\n      };\n    }\n    if (state.resizeSelection) {\n      const [position, [x1, y1]] = state.resizeSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        resizeSelection: [position, [x1, y1, x2, y2]],\n      };\n    }\n    return state;\n  })\n  .case(editorActions.mouseUp, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    if (state.areaSelectRect) {\n      const [x1, y1] = state.areaSelectRect;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      const intersections = performAreaSelect(state.glyph, state.buhinMap, x1, y1, x2, y2);\n\n      const newSelection = Array.from(new Set(state.selection.concat(intersections)));\n      return {\n        ...state,\n        selection: newSelection,\n        areaSelectRect: null,\n      };\n    }\n    if (state.dragSelection) {\n      const [x1, y1] = state.dragSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n\n      const newGlyph = moveSelectedGlyphLines(state.glyph, state.selection, x2 - x1, y2 - y1);\n      return {\n        ...state,\n        glyph: newGlyph,\n        dragSelection: null,\n      };\n    }\n    if (state.dragPoint) {\n      const [pointIndex, [x1, y1]] = state.dragPoint;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n\n      const newGlyph = moveSelectedPoint(state.glyph, state.selection, pointIndex, x2 - x1, y2 - y1);\n      return {\n        ...state,\n        glyph: newGlyph,\n        dragPoint: null,\n      };\n    }\n    if (state.resizeSelection) {\n      const [position, [x1, y1]] = state.resizeSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n\n      const newGlyph = resizeSelected(state.glyph, state.selection, position, x2 - x1, y2 - y1);\n      return {\n        ...state,\n        glyph: newGlyph,\n        resizeSelection: null,\n      };\n    }\n    return state;\n  })\n\n  .case(editorActions.updateCTMInv, (state, ctmInv) => ({\n    ...state,\n    ctmInv,\n  }))\n\n  .case(editorActions.loadedBuhin, (state, [name, data]) => {\n    const newMap = new Map(state.buhinMap);\n    newMap.set(name, data);\n    return {\n      ...state,\n      buhinMap: newMap,\n    };\n  })\n  .case(editorActions.loadedStretchParam, (state, [name, param]) => {\n    const newMap = new Map(state.stretchParamMap);\n    newMap.set(name, param);\n    return {\n      ...state,\n      stretchParamMap: newMap,\n    }\n  })\n\n  .case(editorActions.undo, (state) => state) // TODO\n  .case(editorActions.redo, (state) => state) // TODO\n\n  .case(editorActions.paste, (state) => ({\n    ...state,\n    glyph: state.glyph.concat(state.clipboard),\n    selection: state.clipboard.map((_gLine, index) => state.glyph.length + index),\n  }))\n  .case(editorActions.copy, (state) => {\n    const targetLines = state.selection.map((index) => state.glyph[index]);\n    const [x1, y1] = getGlyphLinesBBX(targetLines);\n    const tX = (x: number) => 230 + x - x1;\n    const tY = (y: number) => 20 + y - y1;\n    return {\n      ...state,\n      clipboard: state.selection.map((index) => (\n        applyGlyphLineOperation(state.glyph[index], tX, tY)\n      )),\n    };\n  })\n  .case(editorActions.cut, (state) => ({\n    ...state,\n    glyph: state.glyph.filter((_gLine, index) => !state.selection.includes(index)),\n    clipboard: state.selection.map((index) => state.glyph[index]),\n    selection: [],\n  }))\n\n  .case(editorActions.decomposeSelected, (state) => {\n    let newGlyph: Glyph = [];\n    let newSelection: number[] = [];\n    state.glyph.forEach((gLine, index) => {\n      if (!state.selection.includes(index)) {\n        newGlyph.push(gLine);\n        return;\n      }\n      const newLines = decompose(gLine, state.buhinMap);\n      newSelection = newSelection.concat(\n        newLines.map((_gLine, subindex) => newGlyph.length + subindex)\n      );\n      newGlyph = newGlyph.concat(newLines);\n    });\n    return {\n      ...state,\n      glyph: newGlyph,\n      selection: newSelection,\n    };\n  })\n\n  .case(editorActions.toggleFreehand, (state) => ({\n    ...state,\n    selection: state.freehandMode ? state.selection : [],\n    freehandMode: !state.freehandMode,\n  }))\n\n  .case(editorActions.openOptionModal, (state) => ({\n    ...state,\n    showOptionModal: true,\n  }))\n  .case(editorActions.closeOptionModal, (state) => ({\n    ...state,\n    showOptionModal: false,\n  }));\n\nexport default editor;\n","import { combineReducers } from 'redux';\n\nimport editor, { EditorState } from './editor';\n\nexport type AppState = {\n  editor: EditorState;\n};\n\nexport default combineReducers<AppState>({\n  editor,\n});\n","import { createStore } from 'redux';\n\nimport reducer from './reducers';\n\nconst store = createStore(reducer);\n\nexport default store;\n","import React from 'react';\n\nimport { Polygons } from '@kurgm/kage-engine';\n\nexport interface StrokeComponentProps {\n  polygons: Polygons;\n}\n\nconst StrokeComponent = (props: StrokeComponentProps) => (\n  <>\n    {props.polygons.array.map((polygon, i) => (\n      <polygon key={i} points={polygon.array.map(({ x, y }) => `${x},${y} `).join(\"\")} />\n    ))}\n  </>\n);\n\nexport default StrokeComponent;\n","import React from 'react';\n\nimport { Glyph } from '../kageUtils/glyph';\nimport { makeGlyphSeparated } from '../kage';\nimport Stroke from './Stroke';\n\nimport './Glyph.css'\n\nexport interface GlyphComponentProps {\n  glyph: Glyph;\n  buhinMap: Map<string, string>;\n  selection: number[];\n  handleMouseDownDeselectedStroke?: (evt: React.MouseEvent, index: number) => void;\n  handleMouseDownSelectedStroke?: (evt: React.MouseEvent, index: number) => void;\n}\n\nconst GlyphComponent = (props: GlyphComponentProps) => {\n  const polygonsSep = makeGlyphSeparated(props.glyph, props.buhinMap);\n\n  const { selection } = props;\n  const nonSelection = polygonsSep.map((_polygons, index) => index)\n    .filter((index) => !selection.includes(index));\n\n  return (\n    <>\n      <g className=\"strokes-deselected\">\n        {nonSelection.map((index) => (\n          <g key={index} onMouseDown={(evt) => props.handleMouseDownDeselectedStroke?.(evt, index)}>\n            <Stroke polygons={polygonsSep[index]} />\n          </g>\n        ))}\n      </g>\n      <g className=\"strokes-selected\">\n        {selection.map((index) => (\n          <g key={index} onMouseDown={(evt) => props.handleMouseDownSelectedStroke?.(evt, index)}>\n            <Stroke polygons={polygonsSep[index]} />\n          </g>\n        ))}\n      </g>\n    </>\n  );\n};\n\nexport default GlyphComponent;\n","import React from 'react';\n\nimport './AreaSelectRect.css';\n\ninterface AreaSelectRectProps {\n  rect: [number, number, number, number] | null;\n}\n\nconst AreaSelectRect = (props: AreaSelectRectProps) => {\n  if (!props.rect) {\n    return null;\n  }\n  let [x1, y1, x2, y2] = props.rect;\n  if (x1 > x2) {\n    // swap\n    const temp = x1;\n    x1 = x2;\n    x2 = temp;\n  }\n  if (y1 > y2) {\n    // swap\n    const temp = y1;\n    y1 = y2;\n    y2 = temp;\n  }\n\n  return <rect className='areaselect-rect' x={x1} y={y1} width={x2 - x1} height={y2 - y1} />;\n};\n\nexport default AreaSelectRect;\n","import React from 'react';\n\nimport './ControlPoint.css';\n\ninterface ControlPointProps {\n  x: number;\n  y: number;\n  className?: string;\n  handleMouseDown: (evt: React.MouseEvent) => void;\n}\n\nconst ControlPoint = (props: ControlPointProps) => (\n  <rect\n    x={props.x - 4}\n    y={props.y - 4}\n    width={8} height={8}\n    className={`controlpoint-rect ${props.className || ''}`}\n    onMouseDown={props.handleMouseDown}\n  />\n);\n\nexport default ControlPoint;\n","import React from 'react';\n\nimport { RectPointPosition } from '../actions/editor';\nimport ControlPoint from './ControlPoint';\n\nimport { SelectionControlState, SelectionControlActions } from '../containers/SelectionControl';\n\nimport './SelectionControl.css';\n\ninterface OwnProps {\n}\n\ntype SelectionControlProps = OwnProps & SelectionControlState & SelectionControlActions;\n\nconst SelectionControl = (props: SelectionControlProps) => (\n  <>\n    {props.rectControl && <>\n      <rect\n        className='selection-rect'\n        x={props.rectControl.coords[0]}\n        y={props.rectControl.coords[1]}\n        width={props.rectControl.coords[2] - props.rectControl.coords[0]}\n        height={props.rectControl.coords[3] - props.rectControl.coords[1]}\n      />\n      <ControlPoint\n        x={(props.rectControl.coords[0] + props.rectControl.coords[2]) / 2}\n        y={props.rectControl.coords[1]}\n        className='north'\n        handleMouseDown={(evt) => props.handleMouseDownRectControl(evt, RectPointPosition.north)}\n      />\n      <ControlPoint\n        x={props.rectControl.coords[0]}\n        y={(props.rectControl.coords[1] + props.rectControl.coords[3]) / 2}\n        className='west'\n        handleMouseDown={(evt) => props.handleMouseDownRectControl(evt, RectPointPosition.west)}\n      />\n      <ControlPoint\n        x={(props.rectControl.coords[0] + props.rectControl.coords[2]) / 2}\n        y={props.rectControl.coords[3]}\n        className='south'\n        handleMouseDown={(evt) => props.handleMouseDownRectControl(evt, RectPointPosition.south)}\n      />\n      <ControlPoint\n        x={props.rectControl.coords[2]}\n        y={(props.rectControl.coords[1] + props.rectControl.coords[3]) / 2}\n        className='east'\n        handleMouseDown={(evt) => props.handleMouseDownRectControl(evt, RectPointPosition.east)}\n      />\n      <ControlPoint\n        x={props.rectControl.coords[2]}\n        y={props.rectControl.coords[3]}\n        className='southeast'\n        handleMouseDown={(evt) => props.handleMouseDownRectControl(evt, RectPointPosition.southeast)}\n      />\n    </>}\n    {props.pointControl.map(({ x, y, className }, index) => (\n      <ControlPoint\n        key={index}\n        x={x} y={y}\n        className={className}\n        handleMouseDown={(evt) => props.handleMouseDownPointControl(evt, index)}\n      />\n    ))}\n  </>\n);\n\nexport default SelectionControl;","import { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { createSelector } from 'reselect';\n\nimport { editorActions, RectPointPosition } from '../actions/editor';\nimport SelectionControl from '../components/SelectionControl';\nimport { AppState } from '../reducers';\nimport { getGlyphLinesBBX } from '../kageUtils/bbx';\nimport { applyDraggingEffectToGlyph } from '../reducers/editor';\nimport { getMatchType, MatchType } from '../kageUtils/match';\n\nexport interface RectControl {\n  multiSelect: boolean;\n  coords: [number, number, number, number];\n}\nexport interface ControlPoint {\n  x: number;\n  y: number;\n  className: string;\n}\n\nexport interface SelectionControlState {\n  rectControl: RectControl | null;\n  pointControl: ControlPoint[];\n}\n\nexport interface SelectionControlActions {\n  handleMouseDownRectControl: (evt: React.MouseEvent, position: RectPointPosition) => void;\n  handleMouseDownPointControl: (evt: React.MouseEvent, pointIndex: number) => void;\n}\n\nconst mapStateToProps = createSelector(\n  [\n    (state: AppState) => applyDraggingEffectToGlyph(state.editor),\n    (state: AppState) => state.editor.selection,\n  ],\n  (glyph, selection): SelectionControlState => {\n    if (selection.length === 0) {\n      return { rectControl: null, pointControl: [] };\n    }\n    if (selection.length > 1) {\n      const selectedStrokes = selection.map((index) => glyph[index]);\n      const bbx = getGlyphLinesBBX(selectedStrokes);\n      return {\n        rectControl: {\n          multiSelect: true,\n          coords: bbx,\n        },\n        pointControl: [],\n      };\n    }\n    const selectedStroke = glyph[selection[0]];\n    switch (selectedStroke.value[0]) {\n      case 0:\n      case 9:\n      case 99:\n        return {\n          rectControl: {\n            multiSelect: false,\n            coords: [\n              selectedStroke.value[3],\n              selectedStroke.value[4],\n              selectedStroke.value[5],\n              selectedStroke.value[6],\n            ],\n          },\n          pointControl: [],\n        };\n      case 1:\n      case 2:\n      case 3:\n      case 4:\n      case 6:\n      case 7: {\n        const pointControl: ControlPoint[] = [];\n        for (let i = 3; i + 2 <= selectedStroke.value.length; i += 2) {\n          const matchType = getMatchType(glyph, {\n            lineIndex: selection[0],\n            pointIndex: (i - 3) / 2,\n          });\n          let className = '';\n          if (matchType === MatchType.match) {\n              className = 'match';\n          } else if (matchType === MatchType.online) {\n              className = 'online';\n          }\n\n          pointControl.push({\n            x: selectedStroke.value[i],\n            y: selectedStroke.value[i + 1],\n            className,\n          });\n        }\n        return { rectControl: null, pointControl };\n      }\n      default:\n        return { rectControl: null, pointControl: [] };\n    }\n  }\n);\n\nconst mapDispatchToProps = (dispatch: Dispatch): SelectionControlActions => ({\n  handleMouseDownRectControl: (evt: React.MouseEvent, position: RectPointPosition) => {\n    dispatch(editorActions.startResize([evt, position]));\n    evt.stopPropagation();\n  },\n  handleMouseDownPointControl: (evt: React.MouseEvent, pointIndex: number) => {\n    dispatch(editorActions.startPointDrag([evt, pointIndex]));\n    evt.stopPropagation();\n  },\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectionControl);\n","import React, { useEffect } from 'react';\n\nimport { EditorState } from '../reducers/editor';\n\nimport Glyph from './Glyph';\nimport AreaSelectRect from './AreaSelectRect';\nimport SelectionControl from '../containers/SelectionControl';\n\nimport { GlyphAreaActions } from '../containers/GlyphArea';\nimport './GlyphArea.css';\n\ninterface OwnProps {\n}\n\ntype GlyphAreaProps = OwnProps & EditorState & GlyphAreaActions;\n\nconst GlyphArea = (props: GlyphAreaProps) => {\n  const { handleMouseMove, handleMouseUp } = props;\n  useEffect(() => {\n    document.addEventListener('mousemove', handleMouseMove)\n    document.addEventListener('mouseup', handleMouseUp);\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [handleMouseMove, handleMouseUp]);\n\n  return (\n    <div className=\"glyph-area\">\n      <svg\n        width=\"100%\" height=\"100%\" viewBox=\"-20 -20 500 240\"\n        onMouseDownCapture={props.handleMouseDownCapture}\n        onMouseDown={props.handleMouseDownBackground}\n      >\n        {/* TODO: grid */}\n        <rect x=\"0\" y=\"0\" width=\"200\" height=\"200\" className=\"glyph-boundary\" />\n        <rect x=\"12\" y=\"12\" width=\"176\" height=\"176\" className=\"glyph-guide\" />\n        <Glyph\n          glyph={props.glyph}\n          buhinMap={props.buhinMap}\n          selection={props.selection}\n          handleMouseDownDeselectedStroke={props.handleMouseDownDeselectedStroke}\n          handleMouseDownSelectedStroke={props.handleMouseDownSelectedStroke}\n        />\n        <SelectionControl />\n        <AreaSelectRect rect={props.areaSelectRect} />\n      </svg>\n    </div>\n  );\n};\n\nexport default GlyphArea;\n","import { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\n\nimport { editorActions, CTMInv } from '../actions/editor';\nimport GlyphArea from '../components/GlyphArea';\nimport { AppState } from '../reducers';\nimport { applyDraggingEffectToGlyph } from '../reducers/editor';\n\nexport interface GlyphAreaActions {\n  handleMouseDownCapture: (evt: React.MouseEvent<SVGSVGElement>) => void;\n\n  handleMouseDownBackground: (evt: React.MouseEvent) => void;\n  handleMouseDownDeselectedStroke: (evt: React.MouseEvent, index: number) => void;\n  handleMouseDownSelectedStroke: (evt: React.MouseEvent, index: number) => void;\n\n  handleMouseMove: (evt: MouseEvent) => void;\n  handleMouseUp: (evt: MouseEvent) => void;\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  ...state.editor,\n  glyph: applyDraggingEffectToGlyph(state.editor),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): GlyphAreaActions => ({\n  handleMouseDownCapture: (evt: React.MouseEvent<SVGSVGElement>) => {\n    const ctm = evt.currentTarget.getScreenCTM();\n    if (!ctm) {\n      return;\n    }\n    const pt = evt.currentTarget.createSVGPoint();\n    const ictm = ctm.inverse();\n    const ctmInv: CTMInv = (evtx, evty) => {\n      pt.x = evtx;\n      pt.y = evty;\n      const { x, y } = pt.matrixTransform(ictm);\n      return [x, y];\n    };\n    dispatch(editorActions.updateCTMInv(ctmInv));\n  },\n\n  handleMouseDownBackground: (evt: React.MouseEvent) => {\n    if (!(evt.shiftKey || evt.ctrlKey)) {\n      dispatch(editorActions.selectNone());\n    }\n    dispatch(editorActions.startAreaSelect(evt));\n  },\n  handleMouseDownDeselectedStroke: (evt: React.MouseEvent, index: number) => {\n    if (evt.shiftKey || evt.ctrlKey) {\n      dispatch(editorActions.selectAddSingle(index));\n    } else {\n      dispatch(editorActions.selectSingle(index));\n    }\n    dispatch(editorActions.startSelectionDrag(evt));\n    evt.stopPropagation();\n  },\n  handleMouseDownSelectedStroke: (evt: React.MouseEvent, index: number) => {\n    if (evt.shiftKey || evt.ctrlKey) {\n      dispatch(editorActions.selectRemoveSingle(index));\n    }\n    dispatch(editorActions.startSelectionDrag(evt));\n    evt.stopPropagation();\n  },\n\n  handleMouseMove: (evt: MouseEvent) => {\n    dispatch(editorActions.mouseMove(evt));\n  },\n  handleMouseUp: (evt: MouseEvent) => {\n    dispatch(editorActions.mouseUp(evt));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GlyphArea);\n","import React from 'react';\n\nimport { EditorControlsStateProps, EditorControlsActions } from '../containers/EditorControls';\nimport './EditorControls.css';\nimport { useTranslation } from 'react-i18next';\n\ninterface OwnProps {\n}\n\ntype EditorControlsProps = OwnProps & EditorControlsStateProps & EditorControlsActions;\n\nconst EditorControls = (props: EditorControlsProps) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"editor-controls\">\n      <div className=\"selection-info\">\n        selection info.\n      </div>\n      <div className=\"control-buttons\">\n        <button\n          disabled={props.undoDisabled}\n          onClick={props.undo}\n        >\n          {t('undo')}\n        </button>\n        <button\n          disabled={props.redoDisabled}\n          onClick={props.redo}\n        >\n          {t('redo')}\n        </button>\n        <button\n          disabled={props.freehandMode}\n          onClick={props.selectAll}\n        >\n          {t('select all')}\n        </button>\n        <button\n          disabled={props.freehandMode}\n          onClick={props.selectDeselected}\n        >\n          {t('invert selection')}\n        </button>\n        <button\n          disabled={props.selection.length === 0}\n          onClick={props.copy}\n        >\n          {t('copy')}\n        </button>\n        <button\n          disabled={props.pasteDisabled}\n          onClick={props.paste}\n        >\n          {t('paste')}\n        </button>\n        <button\n          disabled={props.selection.length === 0}\n          onClick={props.cut}\n        >\n          {t('cut')}\n        </button>\n        <button\n          disabled\n          onClick={props.toggleFreehand}\n        >\n          {props.freehandMode ? t('end freehand') : t('start freehand')}\n        </button>\n        <button\n          disabled={props.decomposeDisabled}\n          onClick={props.decompose}\n        >\n          {t('decompose')}\n        </button>\n        <button\n          disabled\n          onClick={props.options}\n        >\n          {t('options')}\n        </button>\n      </div>\n      <div className=\"preview\">\n        <svg className=\"preview-thumbnail\" viewBox=\"0 0 200 200\" width=\"50\" height=\"50\"></svg>\n        <button\n          disabled\n          onClick={props.finishEdit}\n        >\n          {t('finish edit')}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default EditorControls;\n","import { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { createSelector } from 'reselect';\n\nimport { editorActions } from '../actions/editor';\nimport EditorControls from '../components/EditorControls';\nimport { AppState } from '../reducers';\n\nimport { Glyph } from '../kageUtils/glyph';\n\nexport interface EditorControlsStateProps {\n  glyph: Glyph;\n  buhinMap: Map<string, string>;\n  selection: number[];\n\n  undoDisabled: boolean;\n  redoDisabled: boolean;\n  pasteDisabled: boolean;\n  decomposeDisabled: boolean;\n\n  freehandMode: boolean;\n};\n\nexport interface EditorControlsActions {\n  undo: () => void;\n  redo: () => void;\n  selectAll: () => void;\n  selectDeselected: () => void;\n  copy: () => void;\n  paste: () => void;\n  cut: () => void;\n  toggleFreehand: () => void;\n  decompose: () => void;\n  options: () => void;\n  finishEdit: () => void;\n};\n\nconst mapStateToProps = createSelector([\n  (state: AppState) => state.editor.glyph,\n  (state: AppState) => state.editor.buhinMap,\n  (state: AppState) => state.editor.selection,\n  (state: AppState) => state.editor.clipboard,\n  (state: AppState) => state.editor.freehandMode,\n], (glyph, buhinMap, selection, clipboard, freehandMode): EditorControlsStateProps => ({\n  glyph,\n  buhinMap,\n  selection,\n\n  undoDisabled: true,\n  redoDisabled: true,\n  pasteDisabled: clipboard.length === 0,\n  decomposeDisabled: !selection.some((index) => glyph[index].value[0] === 99),\n\n  freehandMode,\n}));\n\nconst mapDispatchToProps = (dispatch: Dispatch): EditorControlsActions => ({\n  undo: () => {\n    dispatch(editorActions.undo());\n  },\n  redo: () => {\n    dispatch(editorActions.redo());\n  },\n  selectAll: () => {\n    dispatch(editorActions.selectAll());\n  },\n  selectDeselected: () => {\n    dispatch(editorActions.selectDeselected());\n  },\n  copy: () => {\n    dispatch(editorActions.copy());\n  },\n  paste: () => {\n    dispatch(editorActions.paste());\n  },\n  cut: () => {\n    dispatch(editorActions.cut());\n  },\n  toggleFreehand: () => {\n    dispatch(editorActions.toggleFreehand());\n  },\n  decompose: () => {\n    dispatch(editorActions.decomposeSelected());\n  },\n  options: () => {\n    dispatch(editorActions.openOptionModal());\n  },\n  finishEdit: () => {\n    // FIXME\n    // location.href = ...\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditorControls);\n","import React from 'react';\nimport './App.css';\n\nimport GlyphArea from './containers/GlyphArea';\nimport EditorControls from './containers/EditorControls';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GlyphArea />\n      <EditorControls />\n      <div className=\"parts-list-area\" />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport jaTranslation from './locales/ja.json';\n\nimport args from \"./args\";\n\nconst resources = {\n  ja: {\n    translation: jaTranslation,\n  },\n};\n\nconst host = args.get('host');\nlet lng = 'ja';\nif (host) {\n  switch (host.split('.')[0]) {\n    case 'en':\n      lng = 'en';\n      break;\n    case 'ko':\n      lng = 'ko';\n      break;\n    case 'zhs':\n      lng = 'zh-Hans';\n      break;\n    case 'zht':\n      lng = 'zh-Hant';\n      break;\n  }\n}\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng,\n\n    returnObjects: true,\n    interpolation: {\n      escapeValue: false, // react already safes from xss\n    },\n  });\n\nexport default i18n;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\n\nimport store from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './i18n';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}