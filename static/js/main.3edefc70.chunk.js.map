{"version":3,"sources":["actions/drag.ts","kageUtils/glyph.ts","args.ts","actions/select.ts","kageUtils/match.ts","kageUtils/connection.ts","kageUtils/transform.ts","actions/editor.ts","callapi.ts","kage.ts","kageUtils/bbx.ts","selectors/draggedGlyph.ts","kageUtils/stretchparam.ts","kageUtils/decompose.ts","reducers/index.ts","reducers/select.ts","reducers/drag.ts","reducers/editor.ts","store.ts","components/Stroke.tsx","components/Glyph.tsx","components/AreaSelectRect.tsx","components/ControlPoint.tsx","components/SelectionControl.tsx","components/GlyphArea.tsx","components/SelectionInfo.tsx","components/EditorControls.tsx","App.tsx","serviceWorker.ts","i18n.ts","index.tsx"],"names":["RectPointPosition","getNumColumns","strokeType","unparseGlyphLine","glyphLine","values","value","slice","partName","join","parseGlyph","glyphStr","split","map","line","glyphLineStr","splitLine","numColumns","i","push","Math","floor","parseGlyphLine","filter","gLine","length","args","URLSearchParams","window","location","hash","actionCreator","actionCreatorFactory","selectActions","selectSingle","selectAddSingle","selectRemoveSingle","selectNone","selectAll","selectDeselected","selectPrev","selectNext","MatchType","dragActions","startAreaSelect","startSelectionDrag","startPointDrag","startResize","mouseMove","mouseUp","updateCTMInv","connectablePairs","position","strokeTypes","shapeTypes","matchConnectablePoint","point","includes","shapeType","getConnectablePoints","result","coord","pointIndex","endPointIndex","listupConnectedPoints","memoizeOne","glyph","points","sPoints","lineIndex","sPoint","forEach","dPoint","some","point2","point1","filter1","filter2","glyph1","points1","glyph2","points2","every","index","listupConnectedPointsOfSelection","selection","selectedDescs","applyGlyphLineOperation","tX","tY","applyGlyphPointOperation","pdescs","newGlyph","newValue","moveSelectedGlyphLines","dx","dy","targetDescs","x","round","y","moveSelectedPoint","selectedDesc","targetDesc","resizeSelectedGlyphLines","oldBBX","newBBX","x11","y11","x12","y12","x21","y21","x22","y22","resizeGlyphLine","editorActions","loadedBuhin","loadedStretchParam","swapWithPrev","swapWithNext","undo","redo","paste","copy","cut","decomposeSelected","toggleFreehand","openOptionModal","closeOptionModal","callApi","path","a","fetch","response","ok","Error","text","getSource","name","encodeURIComponent","get","kage","Kage","waiting","Set","makeGlyphSeparated","data","kBuhin","search","has","add","then","source","stretchMatch","exec","params","store","dispatch","delete","catch","err","console","error","loadAbsentBuhin","bbxOfPoints","xs","ys","min","max","getGlyphLineBBX","mergeBBX","getGlyphLinesBBX","glyphLines","reduce","gLines1","gLines2","gLine1","resizeSelected","selectedGlyphLine","north","west","south","east","southeast","newGlyphLine","draggedGlyphSelector","createSelector","state","dragSelection","dragPoint","resizeSelection","x1","y1","x2","y2","getStretchPositions","normalizeStretchPositions","positions","sx","sy","tx","calcStretchScalar","param","x0","y0","k","ty","abs","decompose","buhinMap","buhinSource","failedBuhin","strokesArray","getEachStrokes","unparseGlyph","box","getBox","isStretchEnabled","oldGlyphLine","stretchedX","stretch","minX","maxX","stretchedY","minY","maxY","sx2","sy2","tx2","ty2","px1","py1","px2","py2","revX","revY","setStretchPositions","initialState","areaSelectRect","ctmInv","Map","stretchParamMap","freehandMode","showOptionModal","clipboard","reducer","reducerWithInitialState","withHandling","builder","case","concat","index2","_gLine","firstSelected","evt","clientX","clientY","intersections","polygonsSep","gAreaPolygon","array","polygon","gPolygon","polygonInPolygon","polygonIntersectsPolygon","performAreaSelect","newSelection","Array","from","newMap","set","targetLines","newLines","subindex","createStore","StrokeComponent","props","polygons","key","GlyphComponent","nonSelection","_polygons","className","onMouseDown","handleMouseDownDeselectedStroke","Stroke","handleMouseDownSelectedStroke","AreaSelectRect","rect","temp","width","height","getMatchType","none","isOnline","match","online","ControlPoint","handleMouseDown","selectionControlSelector","rectControl","pointControl","selectedStrokes","multiSelect","coords","selectedStroke","matchType","SelectionControl","useSelector","useDispatch","handleMouseDownRectControl","useCallback","stopPropagation","handleMouseDownNorthPoint","handleMouseDownWestPoint","handleMouseDownSouthPoint","handleMouseDownEastPoint","handleMouseDownSoutheastPoint","handleMouseDownPointControls","useMemo","_control","GlyphArea","handleMouseDownCapture","ctm","currentTarget","getScreenCTM","pt","createSVGPoint","ictm","inverse","evtx","evty","matrixTransform","handleMouseDownBackground","shiftKey","ctrlKey","useEffect","handleMouseMove","handleMouseUp","document","addEventListener","removeEventListener","viewBox","onMouseDownCapture","strokeInfoSelector","selectedStroke_","headShapeType","tailShapeType","coordString","partInfoSelector","entityName","aliasMatch","stretchParam","stretchCoeff","otherInfoSelector","isMultiple","selectIndexStringSelector","glyphLength","selectedIndexString","sort","b","buttonsDisabledSelector","swapPrevDisabled","swapNextDisabled","selectPrevDisabled","selectNextDisabled","SelectionInfo","strokeInfo","partInfo","otherInfo","selectIndexString","shallowEqual","t","useTranslation","entity","type","disabled","onClick","EditorControls","pasteDisabled","decomposeDisabled","options","finishEdit","App","Boolean","hostname","resources","ja","translation","host","lng","i18n","use","initReactI18next","init","returnObjects","interpolation","escapeValue","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.3edefc70.chunk.js","sourcesContent":["import actionCreatorFactory from 'typescript-fsa';\n\nexport type CTMInv = (x: number, y: number) => [number, number];\nexport enum RectPointPosition {\n  north,\n  south,\n  east,\n  west,\n  southeast,\n}\n\nconst actionCreator = actionCreatorFactory('EDITOR');\n\nexport const dragActions = {\n  startAreaSelect: actionCreator<React.MouseEvent>('AREA_SELECT_START'),\n  startSelectionDrag: actionCreator<React.MouseEvent>('SELECTION_DRAG_START'),\n  startPointDrag: actionCreator<[React.MouseEvent, number]>('MOVE_POINT_START'),\n  startResize: actionCreator<[React.MouseEvent, RectPointPosition]>('RESIZE_START'),\n\n  mouseMove: actionCreator<MouseEvent>('MOUSE_MOVE'),\n  mouseUp: actionCreator<MouseEvent>('MOUSE_UP'),\n\n  updateCTMInv: actionCreator<CTMInv>('UPDATE_CTMINV'),\n}\n","export interface GlyphLine {\n  value: number[];\n  partName?: string;\n}\n\nexport const getNumColumns = (strokeType: number): number => {\n  switch (strokeType) {\n    case 0:\n    case 1:\n    case 9:\n      return 7;\n    case 2:\n    case 3:\n    case 4:\n      return 9;\n    case 6:\n    case 7:\n    case 99:\n      return 11;\n    default:\n      return 0;\n  }\n};\n\nexport const parseGlyphLine = (glyphLineStr: string): GlyphLine => {\n  const splitLine = glyphLineStr.split(':');\n  const strokeType = +splitLine[0];\n  const numColumns = getNumColumns(strokeType);\n  const value = [];\n  for (let i = 0; i < numColumns; i++) {\n    value.push(Math.floor(+splitLine[i] || 0));\n  }\n  if (value[0] === 99) {\n    const partName = splitLine[7] || '';\n    return { value, partName }\n  }\n  return { value };\n};\n\nexport const unparseGlyphLine = (glyphLine: GlyphLine): string => {\n  const values: (number | string)[] = glyphLine.value.slice();\n  if (values[0] === 99) {\n    values[7] = glyphLine.partName || '';\n  }\n  return values.join(':');\n};\n\nexport const isValidGlyphLine = (glyphLine: GlyphLine): boolean => (\n  glyphLine.value.length !== 0 &&\n  (\n    glyphLine.value[0] !== 0 ||\n    glyphLine.value[1] === 97 || glyphLine.value[1] === 98 || glyphLine.value[1] === 99\n  )\n);\n\n\nexport type Glyph = GlyphLine[];\n\nexport const parseGlyph = (glyphStr: string): Glyph => (\n  glyphStr.split(/[$\\r\\n]+/)\n    .map((line) => parseGlyphLine(line))\n    .filter((gLine) => isValidGlyphLine(gLine))\n);\n\nexport const unparseGlyph = (glyph: Glyph): string => (\n  glyph\n    .map((gLine) => unparseGlyphLine(gLine))\n    .join('$')\n);\n\n\nexport interface PointDescriptor {\n  lineIndex: number;\n  pointIndex: number;\n}\n","const args = new URLSearchParams(window.location.hash.slice(1));\n\nexport default args;\n","import actionCreatorFactory from 'typescript-fsa';\n\nconst actionCreator = actionCreatorFactory('SELECT');\n\nexport const selectActions = {\n  selectSingle: actionCreator<number>('SELECT_SINGLE'),\n  selectAddSingle: actionCreator<number>('SELECT_ADD_SINGLE'),\n  selectRemoveSingle: actionCreator<number>('SELECT_REMOVE_SINGLE'),\n  selectNone: actionCreator('SELECT_NONE'),\n  selectAll: actionCreator('SELECT_ALL'),\n  selectDeselected: actionCreator('SELECT_TOGGLE_ALL'),\n  selectPrev: actionCreator('SELECT_PREV'),\n  selectNext: actionCreator('SELECT_NEXT'),\n};\n","import { Glyph, PointDescriptor, getNumColumns } from './glyph';\n\nexport enum MatchType {\n  none,\n  online,\n  match,\n}\n\nexport const getMatchType = (glyph: Glyph, point: PointDescriptor): MatchType => {\n  const glyphLine = glyph[point.lineIndex];\n\n  const endPointIndex = (getNumColumns(glyphLine.value[0]) - 3) / 2 - 1;\n  if (point.pointIndex !== 0 && point.pointIndex !== endPointIndex) {\n    return MatchType.none;\n  }\n\n  const x = glyphLine.value[3 + point.pointIndex * 2];\n  const y = glyphLine.value[3 + point.pointIndex * 2 + 1];\n  const isOnline = (x1: number, y1: number, x2: number, y2: number): boolean => (\n    (\n      x1 === x2 && // 垂直\n      x1 === x && y1 <= y && y <= y2\n    ) || (\n      y1 === y2 && // 水平\n      y1 === y && x1 <= x && x <= x2\n    )\n  );\n\n  let result = MatchType.none;\n  for (let lineIndex = 0; lineIndex < glyph.length; lineIndex++) {\n    if (point.lineIndex === lineIndex) {\n      continue;\n    }\n    const glyphLine = glyph[lineIndex];\n    if ([0, 9, 99].includes(glyphLine.value[0])) {\n      continue;\n    }\n\n    if (glyphLine.value[3] === x && glyphLine.value[4] === y) {\n      return MatchType.match;\n    }\n    const endPointIndex = (getNumColumns(glyphLine.value[0]) - 3) / 2 - 1;\n    if (\n      glyphLine.value[3 + endPointIndex * 2] === x &&\n      glyphLine.value[3 + endPointIndex * 2 + 1] === y\n    ) {\n      return MatchType.match;\n    }\n\n    switch (glyphLine.value[0]) {\n      case 3:\n      case 4:\n        if (\n          isOnline(glyphLine.value[3], glyphLine.value[4], glyphLine.value[5], glyphLine.value[6]) ||\n          isOnline(glyphLine.value[5], glyphLine.value[6], glyphLine.value[7], glyphLine.value[8])\n        ) {\n          result = MatchType.online;\n        }\n        break;\n      case 1:\n      case 7:\n        if (isOnline(glyphLine.value[3], glyphLine.value[4], glyphLine.value[5], glyphLine.value[6])) {\n          result = MatchType.online;\n        }\n        break;\n    }\n  }\n  return result;\n};\n","import memoizeOne from 'memoize-one';\n\nimport { GlyphLine, Glyph, PointDescriptor, getNumColumns } from './glyph';\n\ninterface ConnectablePoint {\n  position: 'start' | 'end';\n  strokeType: number;\n  shapeType: number;\n  coord: [number, number];\n  pointIndex: number;\n}\n\ninterface ConnectablePointFilter {\n  position: 'start' | 'end';\n  strokeTypes: number[];\n  shapeTypes: number[];\n}\n\nconst connectablePairs: [ConnectablePointFilter, ConnectablePointFilter][] = [\n  [\n    // 左上\n    {\n      position: 'start',\n      strokeTypes: [1],\n      shapeTypes: [2],\n    },\n    {\n      position: 'start',\n      strokeTypes: [1, 2, 3, 4, 6, 7],\n      shapeTypes: [12],\n    },\n  ],\n  [\n    // 左下\n    {\n      position: 'start',\n      strokeTypes: [1],\n      shapeTypes: [2],\n    },\n    {\n      position: 'end',\n      strokeTypes: [1],\n      shapeTypes: [13, 313, 413],\n    },\n  ],\n  [\n    // 右上\n    {\n      position: 'end',\n      strokeTypes: [1],\n      shapeTypes: [2],\n    },\n    {\n      position: 'start',\n      strokeTypes: [1, 2, 3, 4, 6, 7],\n      shapeTypes: [22],\n    },\n  ],\n  [\n    // 右下\n    {\n      position: 'end',\n      strokeTypes: [1],\n      shapeTypes: [2],\n    },\n    {\n      position: 'end',\n      strokeTypes: [1],\n      shapeTypes: [23, 24],\n    },\n  ],\n];\n\nconst matchConnectablePoint = (filter: ConnectablePointFilter, point: ConnectablePoint) => (\n  filter.position === point.position &&\n  filter.strokeTypes.includes(point.strokeType) &&\n  filter.shapeTypes.includes(point.shapeType)\n)\n\nconst isConnectable = (point1: ConnectablePoint, point2: ConnectablePoint) => (\n  point1.coord[0] === point2.coord[0] &&\n  point1.coord[1] === point2.coord[1] &&\n  connectablePairs.some(([filter1, filter2]) => (\n    (matchConnectablePoint(filter1, point1) && matchConnectablePoint(filter2, point2)) ||\n    (matchConnectablePoint(filter2, point1) && matchConnectablePoint(filter1, point2))\n  ))\n);\n\nconst getConnectablePoints = (glyphLine: GlyphLine): ConnectablePoint[] => {\n  const result: ConnectablePoint[] = [];\n  switch (glyphLine.value[0]) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 6:\n    case 7: {\n      result.push({\n        position: 'start',\n        strokeType: glyphLine.value[0],\n        shapeType: glyphLine.value[1],\n        coord: [\n          glyphLine.value[3],\n          glyphLine.value[4],\n        ],\n        pointIndex: 0,\n      });\n      const endPointIndex = (getNumColumns(glyphLine.value[0]) - 3) / 2 - 1;\n      result.push({\n        position: 'end',\n        strokeType: glyphLine.value[0],\n        shapeType: glyphLine.value[2],\n        coord: [\n          glyphLine.value[3 + endPointIndex * 2],\n          glyphLine.value[3 + endPointIndex * 2 + 1],\n        ],\n        pointIndex: endPointIndex,\n      });\n      break;\n    }\n  }\n  return result;\n};\n\nexport const listupConnectedPoints = memoizeOne((glyph: Glyph, points: PointDescriptor[]): PointDescriptor[] => {\n  const sPoints: ConnectablePoint[] = [];\n  for (const { lineIndex, pointIndex } of points) {\n    for (const sPoint of getConnectablePoints(glyph[lineIndex])) {\n      if (sPoint.pointIndex === pointIndex) {\n        sPoints.push(sPoint);\n      }\n    }\n  }\n  const result: PointDescriptor[] = [];\n  glyph.forEach((glyphLine, lineIndex) => {\n    for (const dPoint of getConnectablePoints(glyphLine)) {\n      if (sPoints.some((sPoint) => isConnectable(sPoint, dPoint))) {\n        result.push({\n          lineIndex,\n          pointIndex: dPoint.pointIndex,\n        });\n      }\n    }\n  });\n  return result;\n}, ([glyph1, points1], [glyph2, points2]) => (\n  glyph1 === glyph2 &&\n  points1.length === points2.length &&\n  points1.every((point1, index) => (\n    point1.lineIndex === points2[index].lineIndex &&\n    point1.pointIndex === points2[index].pointIndex\n  ))\n));\n\nexport const listupConnectedPointsOfSelection = memoizeOne((glyph: Glyph, selection: number[]): PointDescriptor[] => {\n  const selectedDescs: PointDescriptor[] = [];\n  for (const lineIndex of selection) {\n    const glyphLine = glyph[lineIndex];\n    selectedDescs.push({ lineIndex, pointIndex: 0 });\n    selectedDescs.push({ lineIndex, pointIndex: (getNumColumns(glyphLine.value[0]) - 3) / 2 - 1 });\n  }\n  return listupConnectedPoints(glyph, selectedDescs)\n    .filter(({ lineIndex }) => !selection.includes(lineIndex));\n});\n","import { GlyphLine, Glyph, PointDescriptor } from './glyph';\n\nimport { BBX } from './bbx';\nimport { listupConnectedPoints, listupConnectedPointsOfSelection } from './connection';\n\nexport const applyGlyphLineOperation = (glyphLine: GlyphLine, tX: (x: number) => number, tY: (y: number) => number): GlyphLine => {\n  switch (glyphLine.value[0]) {\n    case 99: {\n      const value = glyphLine.value.slice();\n      value[3] = tX(value[3]);\n      value[4] = tY(value[4]);\n      value[5] = tX(value[5]);\n      value[6] = tY(value[6]);\n      return { value, partName: glyphLine.partName };\n    }\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 6:\n    case 7:\n    case 9: {\n      const value = glyphLine.value.slice();\n      for (let i = 3; i + 2 <= value.length; i += 2) {\n        value[i] = tX(value[i]);\n        value[i + 1] = tY(value[i + 1]);\n      }\n      return { value };\n    }\n    default:\n      return glyphLine;\n  }\n}\n\nexport const applyGlyphPointOperation = (glyph: Glyph, pdescs: PointDescriptor[], tX: (x: number) => number, tY: (y: number) => number): Glyph => {\n  if (pdescs.length === 0) {\n    return glyph;\n  }\n  const newGlyph = glyph.slice();\n  for (const { lineIndex, pointIndex } of pdescs) {\n    const glyphLine = newGlyph[lineIndex];\n    const newValue = glyphLine.value.slice();\n    newValue[3 + pointIndex * 2] = tX(newValue[3 + pointIndex * 2]);\n    newValue[3 + pointIndex * 2 + 1] = tY(newValue[3 + pointIndex * 2 + 1]);\n    newGlyph[lineIndex] = {\n      ...glyphLine,\n      value: newValue,\n    };\n  }\n  return newGlyph;\n};\n\n\nexport const moveSelectedGlyphLines = (glyph: Glyph, selection: number[], dx: number, dy: number): Glyph => {\n  const targetDescs = listupConnectedPointsOfSelection(glyph, selection);\n\n  const tX = (x: number) => Math.round(x + dx);\n  const tY = (y: number) => Math.round(y + dy);\n  glyph = glyph.map((glyphLine, index) => selection.includes(index)\n    ? applyGlyphLineOperation(glyphLine, tX, tY)\n    : glyphLine\n  );\n  glyph = applyGlyphPointOperation(glyph, targetDescs, tX, tY);\n  return glyph;\n};\n\nexport const moveSelectedPoint = (glyph: Glyph, selection: number[], pointIndex: number, dx: number, dy: number): Glyph => {\n  if (selection.length === 0) {\n    return glyph;\n  }\n  const lineIndex = selection[0];\n  const selectedDesc: PointDescriptor = { lineIndex, pointIndex };\n  const targetDescs = listupConnectedPoints(glyph, [selectedDesc])\n    .filter((targetDesc) => targetDesc.lineIndex !== lineIndex);\n  targetDescs.push(selectedDesc);\n\n  const tX = (x: number) => Math.round(x + dx);\n  const tY = (y: number) => Math.round(y + dy);\n  glyph = applyGlyphPointOperation(glyph, targetDescs, tX, tY);\n  return glyph;\n};\n\nexport const resizeGlyphLine = (glyphLine: GlyphLine, oldBBX: BBX, newBBX: BBX): GlyphLine => {\n  const [x11, y11, x12, y12] = oldBBX;\n  const [x21, y21, x22, y22] = newBBX;\n  const tX = (x: number) => Math.round(x21 + (x - x11) * (x22 - x21) / (x12 - x11));\n  const tY = (y: number) => Math.round(y21 + (y - y11) * (y22 - y21) / (y12 - y11));\n  return applyGlyphLineOperation(glyphLine, tX, tY);\n};\n\nexport const resizeSelectedGlyphLines = (glyph: Glyph, selection: number[], oldBBX: BBX, newBBX: BBX): Glyph => {\n  return glyph.map((glyphLine, index) => selection.includes(index)\n    ? resizeGlyphLine(glyphLine, oldBBX, newBBX)\n    : glyphLine\n  );\n};\n","import actionCreatorFactory from 'typescript-fsa';\n\nimport { StretchParam } from '../kageUtils/stretchparam';\n\nconst actionCreator = actionCreatorFactory('EDITOR');\n\nexport const editorActions = {\n  loadedBuhin: actionCreator<[string, string]>('LOAD_BUHIN_DATA'),\n  loadedStretchParam: actionCreator<[string, StretchParam]>('LOAD_STRETCH_PARAM'),\n\n  swapWithPrev: actionCreator('SWAP_WITH_PREV'),\n  swapWithNext: actionCreator('SWAP_WITH_NEXT'),\n\n  undo: actionCreator('UNDO'),\n  redo: actionCreator('REDO'),\n\n  paste: actionCreator('PASTE'),\n  copy: actionCreator('COPY_SELECTION'),\n  cut: actionCreator('CUT_SELECTION'),\n  decomposeSelected: actionCreator('DECOMPOSE_SELECTION'),\n\n  toggleFreehand: actionCreator('TOGGLE_FREEHAND_MODE'),\n\n  openOptionModal: actionCreator('OPEN_OPTION_MODAL'),\n  closeOptionModal: actionCreator('CLOSE_OPTION_MODAL'),\n};\n","// The temporary reverse proxy which adds 'Access-Control-Allow-Origin: *' header.\n// This header is required for cross-origin requests.\nconst apiUrlPrefix = 'https://asia-northeast1-ku6goma.cloudfunctions.net/gwproxy';\n\nconst callApi = async (path: string) => {\n  const response = await fetch(apiUrlPrefix + path);\n  if (!response.ok) {\n    throw new Error('API error occurred');\n  }\n  return new URLSearchParams(await response.text());\n};\n\nexport const getSource = async (name: string) => {\n  const result = await callApi(`/get_source.cgi?name=${encodeURIComponent(name)}`);\n  return result.get('data');\n};\n\nexport const search = async (query: string) => {\n  const result = await callApi(`/search4ge.cgi?query=${encodeURIComponent(query)}`);\n  return result.get('data')!;\n};\n\nexport const getCandidate = async (name: string) => {\n  const result = await callApi(`/get_candidate.cgi?name=${encodeURIComponent(name)}`);\n  return result.get('data')!;\n};\n","import memoizeOne from 'memoize-one';\n\nimport { Kage, Polygons } from '@kurgm/kage-engine';\nimport { Glyph, unparseGlyphLine } from './kageUtils/glyph';\nimport { StretchParam } from './kageUtils/stretchparam';\n\nimport store from './store';\nimport { editorActions } from './actions/editor';\n\nimport { getSource } from './callapi';\n\nexport const kage = new Kage();\n\nlet waiting = new Set<string>();\nconst loadAbsentBuhin = (name: string) => {\n  if (waiting.has(name)) {\n    return;\n  }\n  waiting.add(name);\n  getSource(name)\n    .then((source) => {\n      if (typeof source !== 'string') {\n        throw new Error(`failed to get buhin source of ${name}`);\n      }\n      const stretchMatch = /^0:1:0:(-?\\d+):(-?\\d+):(-?\\d+):(-?\\d+)(?=$|\\$)/.exec(source);\n      if (stretchMatch) {\n        const params: StretchParam = [\n          +stretchMatch[1] || 0,\n          +stretchMatch[2] || 0,\n          +stretchMatch[3] || 0,\n          +stretchMatch[4] || 0,\n        ];\n        store.dispatch(editorActions.loadedStretchParam([name, params]));\n      }\n      store.dispatch(editorActions.loadedBuhin([name, source]));\n      waiting.delete(name);\n    })\n    .catch((err) => console.error(err));\n};\n\nexport const makeGlyphSeparated = memoizeOne((glyph: Glyph, map: Map<string, string>): Polygons[] => {\n  const data = glyph.map(unparseGlyphLine);\n  kage.kBuhin.search = (name) => {\n    const result = map.get(name);\n    if (typeof result === 'undefined') {\n      loadAbsentBuhin(name);\n      return '';\n    }\n    return result;\n  };\n  const result = kage.makeGlyphSeparated(data);\n  return result;\n});\n","import memoizeOne from 'memoize-one';\n\nimport { GlyphLine } from './glyph';\n\nexport type BBX = [number, number, number, number];\n\nexport const bbxOfPoints = (points: [number, number][]): BBX => {\n  const xs = points.map(([x]) => x);\n  const ys = points.map(([, y]) => y);\n  return [\n    Math.min(...xs),\n    Math.min(...ys),\n    Math.max(...xs),\n    Math.max(...ys),\n  ];\n};\n\nexport const getGlyphLineBBX = (glyphLine: GlyphLine): BBX => {\n  switch (glyphLine.value[0]) {\n    case 99:\n      return bbxOfPoints([\n        [glyphLine.value[3], glyphLine.value[4]],\n        [glyphLine.value[5], glyphLine.value[6]],\n      ]);\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 6:\n    case 7:\n    case 9: {\n      const points: [number, number][] = [];\n      for (let i = 3; i + 2 <= glyphLine.value.length; i += 2) {\n        points.push([glyphLine.value[i], glyphLine.value[i + 1]]);\n      }\n      return bbxOfPoints(points);\n    }\n    default:\n      return bbxOfPoints([]);\n  }\n}\n\nexport const mergeBBX = ([x11, y11, x12, y12]: BBX, [x21, y21, x22, y22]: BBX): BBX => [\n  Math.min(x11, x21),\n  Math.min(y11, y21),\n  Math.max(x12, x22),\n  Math.max(y12, y22),\n];\n\nexport const getGlyphLinesBBX = memoizeOne((glyphLines: GlyphLine[]): BBX => {\n  return glyphLines.map(getGlyphLineBBX).reduce(mergeBBX, bbxOfPoints([]));\n}, ([gLines1], [gLines2]) => (\n  gLines1.length === gLines2.length &&\n  gLines1.every((gLine1, index) => gLine1 === gLines2[index])\n));\n","import { createSelector } from 'reselect';\n\nimport { RectPointPosition } from '../actions/drag';\n\nimport { AppState } from '../reducers';\n\nimport { Glyph, GlyphLine } from '../kageUtils/glyph';\nimport { getGlyphLinesBBX } from '../kageUtils/bbx';\nimport { moveSelectedGlyphLines, moveSelectedPoint, resizeSelectedGlyphLines } from '../kageUtils/transform';\n\nexport const resizeSelected = (glyph: Glyph, selection: number[], position: RectPointPosition, dx: number, dy: number): Glyph => {\n  if (selection.length === 1) {\n    const selectedGlyphLine = glyph[selection[0]];\n    switch (selectedGlyphLine.value[0]) {\n      case 0:\n      case 9:\n      case 99: {\n        const newValue = selectedGlyphLine.value.slice();\n        switch (position) {\n          case RectPointPosition.north:\n            newValue[4] += dy;\n            break;\n          case RectPointPosition.west:\n            newValue[3] += dx;\n            break;\n          case RectPointPosition.south:\n            newValue[6] += dy;\n            break;\n          case RectPointPosition.east:\n            newValue[5] += dx;\n            break;\n          case RectPointPosition.southeast:\n            newValue[5] += dx;\n            newValue[6] += dy;\n            break;\n          default:\n            // exhaustive?\n            ((_x: never) => { })(position);\n        }\n        const newGlyphLine: GlyphLine = selectedGlyphLine.value[0] === 99\n          ? { value: newValue, partName: selectedGlyphLine.partName }\n          : { value: newValue };\n        return glyph.map((glyphLine, index) => index === selection[0] ? newGlyphLine : glyphLine);\n      }\n    }\n  }\n  const minSize = 20;\n  const oldBBX = getGlyphLinesBBX(selection.map((index) => glyph[index]));\n  const newBBX = oldBBX.slice() as typeof oldBBX;\n  switch (position) {\n    case RectPointPosition.north:\n      newBBX[1] = Math.min(newBBX[1] + dy, newBBX[3] - minSize);\n      break;\n    case RectPointPosition.west:\n      newBBX[0] = Math.min(newBBX[0] + dx, newBBX[2] - minSize);\n      break;\n    case RectPointPosition.south:\n      newBBX[3] = Math.max(newBBX[3] + dy, newBBX[1] + minSize);\n      break;\n    case RectPointPosition.east:\n      newBBX[2] = Math.max(newBBX[2] + dx, newBBX[0] + minSize);\n      break;\n    case RectPointPosition.southeast:\n      newBBX[2] = Math.max(newBBX[2] + dx, newBBX[0] + minSize);\n      newBBX[3] = Math.max(newBBX[3] + dy, newBBX[1] + minSize);\n      break;\n    default:\n      // exhaustive?\n      ((_x: never) => { })(position);\n  }\n  return resizeSelectedGlyphLines(glyph, selection, oldBBX, newBBX);\n};\n\nexport const draggedGlyphSelector = createSelector([\n  (state: AppState) => state.glyph,\n  (state: AppState) => state.selection,\n  (state: AppState) => state.dragSelection,\n  (state: AppState) => state.dragPoint,\n  (state: AppState) => state.resizeSelection,\n], (glyph, selection, dragSelection, dragPoint, resizeSelection) => {\n  if (dragSelection) {\n    const [x1, y1, x2, y2] = dragSelection;\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    glyph = moveSelectedGlyphLines(glyph, selection, dx, dy);\n  } else if (dragPoint) {\n    const [pointIndex, [x1, y1, x2, y2]] = dragPoint;\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    glyph = moveSelectedPoint(glyph, selection, pointIndex, dx, dy);\n  } else if (resizeSelection) {\n    const [position, [x1, y1, x2, y2]] = resizeSelection;\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    glyph = resizeSelected(glyph, selection, position, dx, dy);\n  };\n  return glyph;\n});\n","import { GlyphLine } from './glyph';\n\nexport type StretchParam = [number, number, number, number];\nexport type StretchPositions = [number, number, number, number];\n\nexport const getStretchPositions = (glyphLine: GlyphLine): StretchPositions | null => {\n  if (glyphLine.value[0] !== 99) {\n    return null;\n  }\n  const sx = glyphLine.value[9];\n  const sy = glyphLine.value[10];\n  const tx = glyphLine.value[1];\n  const ty = glyphLine.value[2];\n  return [sx, sy, tx, ty];\n};\n\nexport const setStretchPositions = (glyphLine: GlyphLine, positions: StretchPositions): GlyphLine => {\n  if (glyphLine.value[0] !== 99) {\n    return glyphLine;\n  }\n  const [sx, sy, tx, ty] = positions;\n\n  const newValue = glyphLine.value.slice();\n  newValue[9] = sx;\n  newValue[10] = sy;\n  newValue[1] = tx;\n  newValue[2] = ty;\n  return { value: newValue, partName: glyphLine.partName };\n};\n\nexport const normalizeStretchPositions = (positions: StretchPositions): StretchPositions => {\n  let [sx, sy, tx, ty] = positions;\n  if (tx <= 100) {\n    tx += 200;\n    sx = sy = 0;\n  }\n  return [sx, sy, tx, ty];\n};\n\nexport const calcStretchPositions = (param: StretchParam, k: number): StretchPositions => {\n  const [x0, y0, x1, y1] = param;\n  return [\n    x0 - 100,\n    y0 - 100,\n    x0 + (x1 - x0) * k / 20 + 100,\n    y0 + (y1 - y0) * k / 20 - 100,\n  ];\n};\n\nconst clampStretchScalar = (k: number): number => Math.max(-10, Math.min(10, k));\n\nexport const calcStretchScalar = (param: StretchParam, positions: StretchPositions): number => {\n  const [x0, y0, x1, y1] = param;\n  if (x0 === x1 && y0 === y1) {\n    return 0;\n  }\n  const [sx, sy, tx, ty] = normalizeStretchPositions(positions);\n  if (sx === tx - 200 && sy === ty) {\n    return 0;\n  }\n  return clampStretchScalar(Math.round(\n    Math.abs(x0 - x1) > Math.abs(y0 - y1)\n      ? (tx - 100 - x0) / (x1 - x0) * 20\n      : (ty + 100 - y0) / (y1 - y0) * 20\n  )) || 0;\n}\n","import { kage } from '../kage';\n\nimport { GlyphLine, parseGlyph, unparseGlyph } from './glyph';\nimport { getStretchPositions, normalizeStretchPositions, setStretchPositions } from './stretchparam';\nimport { applyGlyphLineOperation } from './transform';\n\nexport const decompose = (glyphLine: GlyphLine, buhinMap: Map<string, string>): GlyphLine[] => {\n  if (glyphLine.value[0] !== 99) {\n    return [glyphLine];\n  }\n  const buhinSource = buhinMap.get(glyphLine.partName!);\n  if (!buhinSource) {\n    return [glyphLine];\n  }\n\n  let failedBuhin = false;\n  kage.kBuhin.search = (name: string) => {\n    const data = buhinMap.get(name);\n    if (typeof data !== 'string') {\n      failedBuhin = true;\n      return '';\n    }\n    return data;\n  };\n\n  const glyph = parseGlyph(buhinSource);\n\n  const strokesArray =\n    // @ts-ignore 2445\n    kage.getEachStrokes(\n      unparseGlyph(glyph)\n    );\n  const box =\n    // @ts-ignore 2445\n    kage.getBox(\n      strokesArray\n    );\n\n  if (failedBuhin) {\n    return [glyphLine];\n  }\n\n  const x1 = glyphLine.value[3];\n  const y1 = glyphLine.value[4];\n  const x2 = glyphLine.value[5];\n  const y2 = glyphLine.value[6];\n  const [sx, sy, tx, ty] = normalizeStretchPositions(getStretchPositions(glyphLine)!);\n  const isStretchEnabled = !(sx === tx - 200 && sy === ty);\n\n  return glyph.map((oldGlyphLine) => {\n    const tX = (x: number) => {\n      const stretchedX = isStretchEnabled\n        ? kage.stretch(tx - 200, sx, x, box.minX, box.maxX)\n        : x;\n      return Math.round(stretchedX / 200 * (x2 - x1) + x1);\n    };\n    const tY = (y: number) => {\n      const stretchedY = isStretchEnabled\n        ? kage.stretch(ty, sy, y, box.minY, box.maxY)\n        : y;\n      return Math.round(stretchedY / 200 * (y2 - y1) + y1);\n    };\n    const newGlyphLine = applyGlyphLineOperation(oldGlyphLine, tX, tY);\n\n    if (!(isStretchEnabled && newGlyphLine.value[0] === 99)) {\n      return newGlyphLine;\n    }\n\n    const [sx2, sy2, tx2, ty2] = normalizeStretchPositions(getStretchPositions(newGlyphLine)!);\n    if (!(sx2 === tx2 - 200 && sy2 === ty2)) {\n      // Cannot compose two stretches...\n      return newGlyphLine;\n    }\n\n    const px1 = newGlyphLine.value[3];\n    const py1 = newGlyphLine.value[4];\n    const px2 = newGlyphLine.value[5];\n    const py2 = newGlyphLine.value[6];\n\n    if (px1 === px2 || py1 === py2) {\n      return newGlyphLine;\n    }\n\n    const revX = (x: number) => (x - px1) / (px2 - px1) * 200;\n    const revY = (y: number) => (y - py1) / (py2 - py1) * 200;\n    return setStretchPositions(newGlyphLine, [\n      revX(sx2 + 100),\n      revY(sy2 + 100),\n      revX(tx2 - 100) + 100,\n      revY(ty2 + 100),\n    ]);\n  });\n};\n","import { reducerWithInitialState } from 'typescript-fsa-reducers';\n\nimport { RectPointPosition, CTMInv } from '../actions/drag';\n\nimport { GlyphLine, Glyph, parseGlyph } from '../kageUtils/glyph';\nimport { StretchParam } from '../kageUtils/stretchparam';\nimport args from '../args';\n\nimport select from './select';\nimport drag from './drag';\nimport editor from './editor';\n\n\nexport interface AppState {\n  glyph: Glyph;\n  selection: number[];\n  areaSelectRect: [number, number, number, number] | null;\n  dragSelection: [number, number, number, number] | null;\n  dragPoint: [number, [number, number, number, number]] | null;\n  resizeSelection: [RectPointPosition, [number, number, number, number]] | null;\n  ctmInv: CTMInv | null;\n  buhinMap: Map<string, string>;\n  stretchParamMap: Map<string, StretchParam>;\n  freehandMode: boolean;\n  showOptionModal: boolean;\n  clipboard: GlyphLine[];\n}\n\nconst initialState: AppState = {\n  glyph: parseGlyph(args.get('data') || ''),\n  selection: [],\n  areaSelectRect: null,\n  dragSelection: null,\n  dragPoint: null,\n  resizeSelection: null,\n  ctmInv: null,\n  buhinMap: new Map<string, string>(),\n  stretchParamMap: new Map<string, StretchParam>(),\n  freehandMode: false,\n  showOptionModal: false,\n  clipboard: [],\n};\n\nconst reducer = reducerWithInitialState(initialState)\n  .withHandling(select)\n  .withHandling(drag)\n  .withHandling(editor);\n\nexport default reducer;\n","import { ReducerBuilder } from 'typescript-fsa-reducers';\n\nimport { selectActions } from '../actions/select';\n\nimport { AppState } from '.';\n\nexport default (builder: ReducerBuilder<AppState>) => builder\n  .case(selectActions.selectSingle, (state, index) => ({\n    ...state,\n    selection: [index],\n  }))\n  .case(selectActions.selectAddSingle, (state, index) => ({\n    ...state,\n    selection: state.selection.includes(index) ? state.selection : state.selection.concat([index]),\n  }))\n  .case(selectActions.selectRemoveSingle, (state, index) => ({\n    ...state,\n    selection: state.selection.filter((index2) => index !== index2),\n  }))\n  .case(selectActions.selectAll, (state) => ({\n    ...state,\n    selection: state.glyph.map((_gLine, index) => index),\n  }))\n  .case(selectActions.selectDeselected, (state) => ({\n    ...state,\n    selection: state.glyph.map((_gLine, index) => index).filter((index) => !state.selection.includes(index)),\n  }))\n  .case(selectActions.selectNone, (state) => ({\n    ...state,\n    selection: [],\n  }))\n  .case(selectActions.selectPrev, (state) => {\n    if (state.glyph.length === 0) {\n      return { ...state, selection: [] };\n    }\n    const firstSelected = state.selection.length === 0 ? 0 : Math.min(...state.selection);\n    return {\n      ...state,\n      selection: [(firstSelected - 1 + state.glyph.length) % state.glyph.length],\n    };\n  })\n  .case(selectActions.selectNext, (state) => {\n    if (state.glyph.length === 0) {\n      return { ...state, selection: [] };\n    }\n    const firstSelected = state.selection.length === 0 ? -1 : Math.max(...state.selection);\n    return {\n      ...state,\n      selection: [(firstSelected + 1 + state.glyph.length) % state.glyph.length],\n    };\n  });\n","import { ReducerBuilder } from 'typescript-fsa-reducers';\n\n// @ts-ignore\nimport { polygonInPolygon, polygonIntersectsPolygon } from 'geometric';\n\nimport { dragActions } from '../actions/drag';\n\nimport { moveSelectedGlyphLines, moveSelectedPoint } from '../kageUtils/transform';\nimport { Glyph } from '../kageUtils/glyph';\nimport { makeGlyphSeparated } from '../kage';\n\nimport { AppState } from '.';\nimport { resizeSelected } from '../selectors/draggedGlyph';\n\nconst performAreaSelect = (glyph: Glyph, buhinMap: Map<string, string>, x1: number, y1: number, x2: number, y2: number): number[] => {\n  const polygonsSep = makeGlyphSeparated(glyph, buhinMap);\n  const result = [];\n\n  const gAreaPolygon: [number, number][] = [\n    [x1, y1],\n    [x1, y2],\n    [x2, y2],\n    [x2, y1],\n    [x1, y1],\n  ];\n\n  for (let index = 0; index < polygonsSep.length; index++) {\n    const polygons = polygonsSep[index];\n    if (polygons.array.some((polygon) => {\n      const gPolygon = polygon.array.map(({ x, y }) => [x, y]);\n      gPolygon.push(gPolygon[0]); // close polygon\n\n      return (\n        polygonInPolygon(gAreaPolygon, gPolygon) ||\n        polygonInPolygon(gPolygon, gAreaPolygon) ||\n        polygonIntersectsPolygon(gAreaPolygon, gPolygon)\n      ) as boolean;\n    })) {\n      result.push(index);\n    }\n  }\n  return result;\n};\n\nexport default (builder: ReducerBuilder<AppState>) => builder\n  .case(dragActions.startAreaSelect, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      areaSelectRect: [x1, y1, x1, y1],\n    };\n  })\n  .case(dragActions.startSelectionDrag, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      dragSelection: [x1, y1, x1, y1],\n    };\n  })\n  .case(dragActions.startPointDrag, (state, [evt, pointIndex]) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      dragPoint: [pointIndex, [x1, y1, x1, y1]],\n    };\n  })\n  .case(dragActions.startResize, (state, [evt, position]) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      resizeSelection: [position, [x1, y1, x1, y1]],\n    };\n  })\n\n  .case(dragActions.mouseMove, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    if (state.areaSelectRect) {\n      const [x1, y1] = state.areaSelectRect;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        areaSelectRect: [x1, y1, x2, y2],\n      };\n    }\n    if (state.dragSelection) {\n      const [x1, y1] = state.dragSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        dragSelection: [x1, y1, x2, y2],\n      };\n    }\n    if (state.dragPoint) {\n      const [pointIndex, [x1, y1]] = state.dragPoint;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        dragPoint: [pointIndex, [x1, y1, x2, y2]],\n      };\n    }\n    if (state.resizeSelection) {\n      const [position, [x1, y1]] = state.resizeSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        resizeSelection: [position, [x1, y1, x2, y2]],\n      };\n    }\n    return state;\n  })\n  .case(dragActions.mouseUp, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    if (state.areaSelectRect) {\n      const [x1, y1] = state.areaSelectRect;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      const intersections = performAreaSelect(state.glyph, state.buhinMap, x1, y1, x2, y2);\n\n      const newSelection = Array.from(new Set(state.selection.concat(intersections)));\n      return {\n        ...state,\n        selection: newSelection,\n        areaSelectRect: null,\n      };\n    }\n    if (state.dragSelection) {\n      const [x1, y1] = state.dragSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n\n      const newGlyph = moveSelectedGlyphLines(state.glyph, state.selection, x2 - x1, y2 - y1);\n      return {\n        ...state,\n        glyph: newGlyph,\n        dragSelection: null,\n      };\n    }\n    if (state.dragPoint) {\n      const [pointIndex, [x1, y1]] = state.dragPoint;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n\n      const newGlyph = moveSelectedPoint(state.glyph, state.selection, pointIndex, x2 - x1, y2 - y1);\n      return {\n        ...state,\n        glyph: newGlyph,\n        dragPoint: null,\n      };\n    }\n    if (state.resizeSelection) {\n      const [position, [x1, y1]] = state.resizeSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n\n      const newGlyph = resizeSelected(state.glyph, state.selection, position, x2 - x1, y2 - y1);\n      return {\n        ...state,\n        glyph: newGlyph,\n        resizeSelection: null,\n      };\n    }\n    return state;\n  })\n\n  .case(dragActions.updateCTMInv, (state, ctmInv) => ({\n    ...state,\n    ctmInv,\n  }));\n","import { ReducerBuilder } from 'typescript-fsa-reducers';\n\nimport { editorActions } from '../actions/editor';\n\nimport { getGlyphLinesBBX } from '../kageUtils/bbx';\nimport { Glyph } from '../kageUtils/glyph';\nimport { applyGlyphLineOperation } from '../kageUtils/transform';\nimport { decompose } from '../kageUtils/decompose';\n\nimport { AppState } from '.';\n\nexport default (builder: ReducerBuilder<AppState>) => builder\n  .case(editorActions.loadedBuhin, (state, [name, data]) => {\n    const newMap = new Map(state.buhinMap);\n    newMap.set(name, data);\n    return {\n      ...state,\n      buhinMap: newMap,\n    };\n  })\n  .case(editorActions.loadedStretchParam, (state, [name, param]) => {\n    const newMap = new Map(state.stretchParamMap);\n    newMap.set(name, param);\n    return {\n      ...state,\n      stretchParamMap: newMap,\n    }\n  })\n\n  .case(editorActions.swapWithPrev, (state) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    if (lineIndex === 0) {\n      return state;\n    }\n    const newGlyph = state.glyph.slice();\n    newGlyph[lineIndex - 1] = state.glyph[lineIndex];\n    newGlyph[lineIndex] = state.glyph[lineIndex - 1];\n    return {\n      ...state,\n      glyph: newGlyph,\n      selection: [lineIndex - 1],\n    };\n  })\n  .case(editorActions.swapWithNext, (state) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    if (lineIndex === state.glyph.length - 1) {\n      return state;\n    }\n    const newGlyph = state.glyph.slice();\n    newGlyph[lineIndex + 1] = state.glyph[lineIndex];\n    newGlyph[lineIndex] = state.glyph[lineIndex + 1];\n    return {\n      ...state,\n      glyph: newGlyph,\n      selection: [lineIndex + 1],\n    };\n  })\n\n  .case(editorActions.undo, (state) => state) // TODO\n  .case(editorActions.redo, (state) => state) // TODO\n\n  .case(editorActions.paste, (state) => ({\n    ...state,\n    glyph: state.glyph.concat(state.clipboard),\n    selection: state.clipboard.map((_gLine, index) => state.glyph.length + index),\n  }))\n  .case(editorActions.copy, (state) => {\n    const targetLines = state.selection.map((index) => state.glyph[index]);\n    const [x1, y1] = getGlyphLinesBBX(targetLines);\n    const tX = (x: number) => 230 + x - x1;\n    const tY = (y: number) => 20 + y - y1;\n    return {\n      ...state,\n      clipboard: state.selection.map((index) => (\n        applyGlyphLineOperation(state.glyph[index], tX, tY)\n      )),\n    };\n  })\n  .case(editorActions.cut, (state) => ({\n    ...state,\n    glyph: state.glyph.filter((_gLine, index) => !state.selection.includes(index)),\n    clipboard: state.selection.map((index) => state.glyph[index]),\n    selection: [],\n  }))\n\n  .case(editorActions.decomposeSelected, (state) => {\n    let newGlyph: Glyph = [];\n    let newSelection: number[] = [];\n    state.glyph.forEach((gLine, index) => {\n      if (!state.selection.includes(index)) {\n        newGlyph.push(gLine);\n        return;\n      }\n      const newLines = decompose(gLine, state.buhinMap);\n      newSelection = newSelection.concat(\n        newLines.map((_gLine, subindex) => newGlyph.length + subindex)\n      );\n      newGlyph = newGlyph.concat(newLines);\n    });\n    return {\n      ...state,\n      glyph: newGlyph,\n      selection: newSelection,\n    };\n  })\n\n  .case(editorActions.toggleFreehand, (state) => ({\n    ...state,\n    selection: state.freehandMode ? state.selection : [],\n    freehandMode: !state.freehandMode,\n  }))\n\n  .case(editorActions.openOptionModal, (state) => ({\n    ...state,\n    showOptionModal: true,\n  }))\n  .case(editorActions.closeOptionModal, (state) => ({\n    ...state,\n    showOptionModal: false,\n  }));\n","import { createStore } from 'redux';\n\nimport reducer from './reducers';\n\nconst store = createStore(reducer);\n\nexport default store;\n","import React from 'react';\n\nimport { Polygons } from '@kurgm/kage-engine';\n\nexport interface StrokeComponentProps {\n  polygons: Polygons;\n}\n\nconst StrokeComponent = (props: StrokeComponentProps) => (\n  <>\n    {props.polygons.array.map((polygon, i) => (\n      <polygon key={i} points={polygon.array.map(({ x, y }) => `${x},${y} `).join(\"\")} />\n    ))}\n  </>\n);\n\nexport default StrokeComponent;\n","import React from 'react';\n\nimport { Glyph } from '../kageUtils/glyph';\nimport { makeGlyphSeparated } from '../kage';\nimport Stroke from './Stroke';\n\nimport './Glyph.css'\n\nexport interface GlyphComponentProps {\n  glyph: Glyph;\n  buhinMap: Map<string, string>;\n  selection: number[];\n  handleMouseDownDeselectedStroke?: (evt: React.MouseEvent, index: number) => void;\n  handleMouseDownSelectedStroke?: (evt: React.MouseEvent, index: number) => void;\n}\n\nconst GlyphComponent = (props: GlyphComponentProps) => {\n  const polygonsSep = makeGlyphSeparated(props.glyph, props.buhinMap);\n\n  const { selection } = props;\n  const nonSelection = polygonsSep.map((_polygons, index) => index)\n    .filter((index) => !selection.includes(index));\n\n  return (\n    <>\n      <g className=\"strokes-deselected\">\n        {nonSelection.map((index) => (\n          <g key={index} onMouseDown={(evt) => props.handleMouseDownDeselectedStroke?.(evt, index)}>\n            <Stroke polygons={polygonsSep[index]} />\n          </g>\n        ))}\n      </g>\n      <g className=\"strokes-selected\">\n        {selection.map((index) => (\n          <g key={index} onMouseDown={(evt) => props.handleMouseDownSelectedStroke?.(evt, index)}>\n            <Stroke polygons={polygonsSep[index]} />\n          </g>\n        ))}\n      </g>\n    </>\n  );\n};\n\nexport default GlyphComponent;\n","import React from 'react';\n\nimport './AreaSelectRect.css';\n\ninterface AreaSelectRectProps {\n  rect: [number, number, number, number] | null;\n}\n\nconst AreaSelectRect = (props: AreaSelectRectProps) => {\n  if (!props.rect) {\n    return null;\n  }\n  let [x1, y1, x2, y2] = props.rect;\n  if (x1 > x2) {\n    // swap\n    const temp = x1;\n    x1 = x2;\n    x2 = temp;\n  }\n  if (y1 > y2) {\n    // swap\n    const temp = y1;\n    y1 = y2;\n    y2 = temp;\n  }\n\n  return <rect className='areaselect-rect' x={x1} y={y1} width={x2 - x1} height={y2 - y1} />;\n};\n\nexport default AreaSelectRect;\n","import React from 'react';\n\nimport './ControlPoint.css';\n\ninterface ControlPointProps {\n  x: number;\n  y: number;\n  className?: string;\n  handleMouseDown: (evt: React.MouseEvent) => void;\n}\n\nconst ControlPoint = (props: ControlPointProps) => (\n  <rect\n    x={props.x - 4}\n    y={props.y - 4}\n    width={8} height={8}\n    className={`controlpoint-rect ${props.className || ''}`}\n    onMouseDown={props.handleMouseDown}\n  />\n);\n\nexport default ControlPoint;\n","import React, { useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { createSelector } from 'reselect';\n\nimport { dragActions, RectPointPosition } from '../actions/drag';\nimport { AppState } from '../reducers';\nimport { draggedGlyphSelector } from '../selectors/draggedGlyph';\nimport { getGlyphLinesBBX } from '../kageUtils/bbx';\nimport { getMatchType, MatchType } from '../kageUtils/match';\n\nimport ControlPoint from './ControlPoint';\n\nimport './SelectionControl.css';\n\ninterface RectControl {\n  multiSelect: boolean;\n  coords: [number, number, number, number];\n}\ninterface ControlPoint {\n  x: number;\n  y: number;\n  className: string;\n}\n\ninterface SelectionControlSpec {\n  rectControl: RectControl | null;\n  pointControl: ControlPoint[];\n}\n\nconst selectionControlSelector = createSelector(\n  [\n    draggedGlyphSelector,\n    (state: AppState) => state.selection,\n  ],\n  (glyph, selection): SelectionControlSpec => {\n    if (selection.length === 0) {\n      return { rectControl: null, pointControl: [] };\n    }\n    if (selection.length > 1) {\n      const selectedStrokes = selection.map((index) => glyph[index]);\n      const bbx = getGlyphLinesBBX(selectedStrokes);\n      return {\n        rectControl: {\n          multiSelect: true,\n          coords: bbx,\n        },\n        pointControl: [],\n      };\n    }\n    const selectedStroke = glyph[selection[0]];\n    switch (selectedStroke.value[0]) {\n      case 0:\n      case 9:\n      case 99:\n        return {\n          rectControl: {\n            multiSelect: false,\n            coords: [\n              selectedStroke.value[3],\n              selectedStroke.value[4],\n              selectedStroke.value[5],\n              selectedStroke.value[6],\n            ],\n          },\n          pointControl: [],\n        };\n      case 1:\n      case 2:\n      case 3:\n      case 4:\n      case 6:\n      case 7: {\n        const pointControl: ControlPoint[] = [];\n        for (let i = 3; i + 2 <= selectedStroke.value.length; i += 2) {\n          const matchType = getMatchType(glyph, {\n            lineIndex: selection[0],\n            pointIndex: (i - 3) / 2,\n          });\n          let className = '';\n          if (matchType === MatchType.match) {\n              className = 'match';\n          } else if (matchType === MatchType.online) {\n              className = 'online';\n          }\n\n          pointControl.push({\n            x: selectedStroke.value[i],\n            y: selectedStroke.value[i + 1],\n            className,\n          });\n        }\n        return { rectControl: null, pointControl };\n      }\n      default:\n        return { rectControl: null, pointControl: [] };\n    }\n  }\n);\n\nconst SelectionControl = () => {\n  const { rectControl, pointControl } = useSelector(selectionControlSelector);\n\n  const dispatch = useDispatch();\n  const handleMouseDownRectControl = useCallback((evt: React.MouseEvent, position: RectPointPosition) => {\n    dispatch(dragActions.startResize([evt, position]));\n    evt.stopPropagation();\n  }, [dispatch]);\n\n  const handleMouseDownNorthPoint = useCallback(\n    (evt: React.MouseEvent) => handleMouseDownRectControl(evt, RectPointPosition.north),\n    [handleMouseDownRectControl]\n  );\n  const handleMouseDownWestPoint = useCallback(\n    (evt: React.MouseEvent) => handleMouseDownRectControl(evt, RectPointPosition.west),\n    [handleMouseDownRectControl]\n  );\n  const handleMouseDownSouthPoint = useCallback(\n    (evt: React.MouseEvent) => handleMouseDownRectControl(evt, RectPointPosition.south),\n    [handleMouseDownRectControl]\n  );\n  const handleMouseDownEastPoint = useCallback(\n    (evt: React.MouseEvent) => handleMouseDownRectControl(evt, RectPointPosition.east),\n    [handleMouseDownRectControl]\n  );\n  const handleMouseDownSoutheastPoint = useCallback(\n    (evt: React.MouseEvent) => handleMouseDownRectControl(evt, RectPointPosition.southeast),\n    [handleMouseDownRectControl]\n  );\n\n  const handleMouseDownPointControls = useMemo(() => {\n    return pointControl.map((_control, pointIndex) => (evt: React.MouseEvent) => {\n      dispatch(dragActions.startPointDrag([evt, pointIndex]));\n      evt.stopPropagation();\n    });\n  }, [dispatch, pointControl]);\n\n  return <>\n    {rectControl && <>\n      <rect\n        className='selection-rect'\n        x={rectControl.coords[0]}\n        y={rectControl.coords[1]}\n        width={rectControl.coords[2] - rectControl.coords[0]}\n        height={rectControl.coords[3] - rectControl.coords[1]}\n      />\n      <ControlPoint\n        x={(rectControl.coords[0] + rectControl.coords[2]) / 2}\n        y={rectControl.coords[1]}\n        className='north'\n        handleMouseDown={handleMouseDownNorthPoint}\n      />\n      <ControlPoint\n        x={rectControl.coords[0]}\n        y={(rectControl.coords[1] + rectControl.coords[3]) / 2}\n        className='west'\n        handleMouseDown={handleMouseDownWestPoint}\n      />\n      <ControlPoint\n        x={(rectControl.coords[0] + rectControl.coords[2]) / 2}\n        y={rectControl.coords[3]}\n        className='south'\n        handleMouseDown={handleMouseDownSouthPoint}\n      />\n      <ControlPoint\n        x={rectControl.coords[2]}\n        y={(rectControl.coords[1] + rectControl.coords[3]) / 2}\n        className='east'\n        handleMouseDown={handleMouseDownEastPoint}\n      />\n      <ControlPoint\n        x={rectControl.coords[2]}\n        y={rectControl.coords[3]}\n        className='southeast'\n        handleMouseDown={handleMouseDownSoutheastPoint}\n      />\n    </>}\n    {pointControl.map(({ x, y, className }, index) => (\n      <ControlPoint\n        key={index}\n        x={x} y={y}\n        className={className}\n        handleMouseDown={handleMouseDownPointControls[index]}\n      />\n    ))}\n  </>;\n};\n\nexport default SelectionControl;","import React, { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { AppState } from '../reducers';\n\nimport { selectActions } from '../actions/select';\nimport { dragActions, CTMInv } from '../actions/drag';\nimport { draggedGlyphSelector } from '../selectors/draggedGlyph';\nimport Glyph from './Glyph';\nimport AreaSelectRect from './AreaSelectRect';\nimport SelectionControl from './SelectionControl';\n\nimport './GlyphArea.css';\n\nconst GlyphArea = () => {\n  const glyph = useSelector(draggedGlyphSelector);\n  const buhinMap = useSelector((state: AppState) => state.buhinMap);\n  const selection = useSelector((state: AppState) => state.selection);\n  const areaSelectRect = useSelector((state: AppState) => state.areaSelectRect);\n\n  const dispatch = useDispatch();\n  const handleMouseDownCapture = useCallback((evt: React.MouseEvent<SVGSVGElement>) => {\n    const ctm = evt.currentTarget.getScreenCTM();\n    if (!ctm) {\n      return;\n    }\n    const pt = evt.currentTarget.createSVGPoint();\n    const ictm = ctm.inverse();\n    const ctmInv: CTMInv = (evtx, evty) => {\n      pt.x = evtx;\n      pt.y = evty;\n      const { x, y } = pt.matrixTransform(ictm);\n      return [x, y];\n    };\n    dispatch(dragActions.updateCTMInv(ctmInv));\n  }, [dispatch]);\n\n  const handleMouseDownBackground = useCallback((evt: React.MouseEvent) => {\n    if (!(evt.shiftKey || evt.ctrlKey)) {\n      dispatch(selectActions.selectNone());\n    }\n    dispatch(dragActions.startAreaSelect(evt));\n  }, [dispatch]);\n  const handleMouseDownDeselectedStroke = useCallback((evt: React.MouseEvent, index: number) => {\n    if (evt.shiftKey || evt.ctrlKey) {\n      dispatch(selectActions.selectAddSingle(index));\n    } else {\n      dispatch(selectActions.selectSingle(index));\n    }\n    dispatch(dragActions.startSelectionDrag(evt));\n    evt.stopPropagation();\n  }, [dispatch]);\n  const handleMouseDownSelectedStroke = useCallback((evt: React.MouseEvent, index: number) => {\n    if (evt.shiftKey || evt.ctrlKey) {\n      dispatch(selectActions.selectRemoveSingle(index));\n    }\n    dispatch(dragActions.startSelectionDrag(evt));\n    evt.stopPropagation();\n  }, [dispatch]);\n\n  useEffect(() => {\n    const handleMouseMove = (evt: MouseEvent) => {\n      dispatch(dragActions.mouseMove(evt));\n    };\n    const handleMouseUp = (evt: MouseEvent) => {\n      dispatch(dragActions.mouseUp(evt));\n    };\n    document.addEventListener('mousemove', handleMouseMove)\n    document.addEventListener('mouseup', handleMouseUp);\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [dispatch]);\n\n  return (\n    <div className=\"glyph-area\">\n      <svg\n        width=\"100%\" height=\"100%\" viewBox=\"-20 -20 500 240\"\n        onMouseDownCapture={handleMouseDownCapture}\n        onMouseDown={handleMouseDownBackground}\n      >\n        {/* TODO: grid */}\n        <rect x=\"0\" y=\"0\" width=\"200\" height=\"200\" className=\"glyph-boundary\" />\n        <rect x=\"12\" y=\"12\" width=\"176\" height=\"176\" className=\"glyph-guide\" />\n        <Glyph\n          glyph={glyph}\n          buhinMap={buhinMap}\n          selection={selection}\n          handleMouseDownDeselectedStroke={handleMouseDownDeselectedStroke}\n          handleMouseDownSelectedStroke={handleMouseDownSelectedStroke}\n        />\n        <SelectionControl />\n        <AreaSelectRect rect={areaSelectRect} />\n      </svg>\n    </div>\n  );\n};\n\nexport default GlyphArea;\n","import React, { useCallback } from 'react';\n\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { createSelector } from 'reselect';\n\nimport { editorActions } from '../actions/editor';\nimport { selectActions } from '../actions/select';\nimport { AppState } from '../reducers';\nimport { calcStretchScalar, getStretchPositions } from '../kageUtils/stretchparam';\n\nimport { useTranslation } from 'react-i18next';\n\nimport './SelectionInfo.css'\n\n\ninterface StrokeInfo {\n  strokeType: number;\n  headShapeType: number;\n  tailShapeType: number;\n  coordString: string;\n}\nconst strokeInfoSelector = createSelector([\n  (state: AppState) => state.selection,\n  (state: AppState) => state.selection.length ? state.glyph[state.selection[0]] : null,\n], (selection, selectedStroke_): StrokeInfo | null => {\n  if (selection.length !== 1) {\n    return null;\n  }\n  const selectedStroke = selectedStroke_!;\n  if (![1, 2, 3, 4, 6, 7].includes(selectedStroke.value[0])) {\n    return null;\n  }\n\n  const points = [];\n  for (let i = 3; i + 2 <= selectedStroke.value.length; i += 2) {\n    points.push(`(${selectedStroke.value[i]},${selectedStroke.value[i + 1]})`);\n  }\n  return {\n    strokeType: selectedStroke.value[0],\n    headShapeType: selectedStroke.value[1],\n    tailShapeType: selectedStroke.value[2],\n    coordString: points.join(' → '),\n  };\n});\n\ninterface PartInfo {\n  partName: string;\n  entityName: string | null;\n  coordString: string;\n  stretchCoeff: number | null;\n}\nconst partInfoSelector = createSelector([\n  (state: AppState) => state.selection,\n  (state: AppState) => state.selection.length ? state.glyph[state.selection[0]] : null,\n  (state: AppState) => state.buhinMap,\n  (state: AppState) => state.stretchParamMap,\n], (selection, selectedStroke_, buhinMap, stretchParamMap): PartInfo | null => {\n  if (selection.length !== 1) {\n    return null;\n  }\n  const selectedStroke = selectedStroke_!;\n  if (selectedStroke.value[0] !== 99) {\n    return null;\n  }\n  const partName = selectedStroke.partName!;\n  const buhinSource = buhinMap.get(partName);\n  let entityName: string | null = null;\n  if (buhinSource) {\n    const aliasMatch = /^(?:0:1:0:[^$]+\\$)?99:0:0:0:0:200:200:([^$]+)$/.exec(buhinSource);\n    if (aliasMatch) {\n      entityName = aliasMatch[1];\n    }\n  }\n  const stretchParam = stretchParamMap.get(partName);\n  const stretchCoeff = stretchParam\n    ? calcStretchScalar(stretchParam, getStretchPositions(selectedStroke)!)\n    : null;\n\n  return {\n    partName,\n    entityName,\n    coordString: `(${selectedStroke.value[3]},${selectedStroke.value[4]}) → (${selectedStroke.value[5]},${selectedStroke.value[6]})`,\n    stretchCoeff,\n  };\n});\n\ninterface OtherInfo {\n  isMultiple: boolean;\n  coordString?: string;\n}\nconst otherInfoSelector = createSelector([\n  (state: AppState) => state.selection,\n  (state: AppState) => state.selection.length ? state.glyph[state.selection[0]] : null,\n], (selection, selectedStroke_): OtherInfo | null => {\n  if (selection.length > 1) {\n    return { isMultiple: true };\n  }\n  if (selection.length === 0) {\n    return { isMultiple: false };\n  }\n  const selectedStroke = selectedStroke_!;\n  if ([1, 2, 3, 4, 6, 7, 99].includes(selectedStroke.value[0])) {\n    return null;\n  }\n\n  const points = [];\n  for (let i = 3; i + 2 <= selectedStroke.value.length; i += 2) {\n    points.push(`(${selectedStroke.value[i]},${selectedStroke.value[i + 1]})`);\n  }\n  return { isMultiple: false, coordString: points.join(' → ') };\n});\n\nconst selectIndexStringSelector = createSelector([\n  (state: AppState) => state.glyph.length,\n  (state: AppState) => state.selection,\n], (glyphLength, selection) => {\n  const selectedIndexString = selection\n    .map((index) => index + 1)\n    .sort((a, b) => a - b).join(',');\n  return `${selectedIndexString || '-'} / ${glyphLength || '-'}`;\n});\n\nconst buttonsDisabledSelector = createSelector([\n  (state: AppState) => state.glyph.length,\n  (state: AppState) => state.selection,\n], (glyphLength, selection) => ({\n  swapPrevDisabled: selection.length !== 1 || selection[0] === 0,\n  swapNextDisabled: selection.length !== 1 || selection[0] === glyphLength - 1,\n  selectPrevDisabled: glyphLength === 0,\n  selectNextDisabled: glyphLength === 0,\n}));\n\nconst SelectionInfo = () => {\n\n  const strokeInfo = useSelector(strokeInfoSelector);\n  const partInfo = useSelector(partInfoSelector);\n  const otherInfo = useSelector(otherInfoSelector);\n\n  const selectIndexString = useSelector(selectIndexStringSelector);\n\n  const {\n    swapPrevDisabled, swapNextDisabled,\n    selectPrevDisabled, selectNextDisabled,\n  } = useSelector(buttonsDisabledSelector, shallowEqual);\n\n  const dispatch = useDispatch();\n  const selectPrev = useCallback(() => {\n    dispatch(selectActions.selectPrev());\n  }, [dispatch]);\n  const selectNext = useCallback(() => {\n    dispatch(selectActions.selectNext());\n  }, [dispatch]);\n  const swapWithPrev = useCallback(() => {\n    dispatch(editorActions.swapWithPrev());\n  }, [dispatch]);\n  const swapWithNext = useCallback(() => {\n    dispatch(editorActions.swapWithNext());\n  }, [dispatch]);\n\n  const { t } = useTranslation();\n  return (\n    <div className=\"select-control\">\n      <div className=\"selected-info\">\n        {strokeInfo && <>\n          <div>\n            {t('stroke type')}\n            <select value={strokeInfo.strokeType}>\n              {[1, 2, 3, 4, 6, 7].map((strokeType) => (\n                <option key={strokeType} value={strokeType}>{t(`stroke type ${strokeType}`)}</option>\n              ))}\n            </select>\n            {/* TODO: 頭形状，尾形状 */}\n          </div>\n          <div>{strokeInfo.coordString}</div>\n        </>}\n        {partInfo && <>\n          <div>\n            {t('part')}\n            {' '}\n            <strong>{partInfo.partName}</strong>\n            {' '}\n            {partInfo.entityName && t('alias of', { entity: partInfo.entityName })}\n          </div>\n          <div>{partInfo.coordString}</div>\n          {partInfo.stretchCoeff !== null && (\n            <div>\n              {t('stretch')}\n              {' '}\n              <input type=\"range\" min={-10} max={10} value={partInfo.stretchCoeff} />\n              {' '}\n              {partInfo.stretchCoeff}\n            </div>\n          )}\n        </>}\n        {otherInfo && <>\n          {otherInfo.isMultiple && <div>{t('selecting multiple strokes')}</div>}\n          {otherInfo.coordString && <div>{otherInfo.coordString}</div>}\n        </>}\n      </div>\n      <div className=\"selection-control\">\n        <button\n          disabled={swapPrevDisabled}\n          onClick={swapWithPrev}\n        >\n          {t('swap with prev')}\n        </button>\n        <button\n          className=\"select-prevnext-button\"\n          disabled={selectPrevDisabled}\n          onClick={selectPrev}\n        >\n          {t('select prev')}\n        </button>\n        <div className=\"selection-num\">\n          {selectIndexString}\n        </div>\n        <button\n          className=\"select-prevnext-button\"\n          disabled={selectNextDisabled}\n          onClick={selectNext}\n        >\n          {t('select next')}\n        </button>\n        <button\n          disabled={swapNextDisabled}\n          onClick={swapWithNext}\n        >\n          {t('swap with next')}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default SelectionInfo;\n","import React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { useTranslation } from 'react-i18next';\n\nimport { AppState } from '../reducers';\nimport { editorActions } from '../actions/editor';\nimport { selectActions } from '../actions/select';\n\nimport SelectionInfo from './SelectionInfo';\n\nimport './EditorControls.css';\n\nconst EditorControls = () => {\n  const glyph = useSelector((state: AppState) => state.glyph);\n  const selection = useSelector((state: AppState) => state.selection);\n  const clipboard = useSelector((state: AppState) => state.clipboard);\n  const freehandMode = useSelector((state: AppState) => state.freehandMode);\n\n  const undoDisabled = true;\n  const redoDisabled = true;\n  const pasteDisabled = clipboard.length === 0;\n  const decomposeDisabled = !selection.some((index) => glyph[index].value[0] === 99);\n\n  const dispatch = useDispatch();\n  const undo = useCallback(() => {\n    dispatch(editorActions.undo());\n  }, [dispatch]);\n  const redo = useCallback(() => {\n    dispatch(editorActions.redo());\n  }, [dispatch]);\n  const selectAll = useCallback(() => {\n    dispatch(selectActions.selectAll());\n  }, [dispatch]);\n  const selectDeselected = useCallback(() => {\n    dispatch(selectActions.selectDeselected());\n  }, [dispatch]);\n  const copy = useCallback(() => {\n    dispatch(editorActions.copy());\n  }, [dispatch]);\n  const paste = useCallback(() => {\n    dispatch(editorActions.paste());\n  }, [dispatch]);\n  const cut = useCallback(() => {\n    dispatch(editorActions.cut());\n  }, [dispatch]);\n  const toggleFreehand = useCallback(() => {\n    dispatch(editorActions.toggleFreehand());\n  }, [dispatch]);\n  const decompose = useCallback(() => {\n    dispatch(editorActions.decomposeSelected());\n  }, [dispatch]);\n  const options = useCallback(() => {\n    dispatch(editorActions.openOptionModal());\n  }, [dispatch]);\n  const finishEdit = useCallback(() => {\n    // FIXME\n    // location.href = ...\n  }, []);\n\n  const { t } = useTranslation();\n  return (\n    <div className=\"editor-controls\">\n      <SelectionInfo />\n      <div className=\"control-buttons\">\n        <button\n          disabled={undoDisabled}\n          onClick={undo}\n        >\n          {t('undo')}\n        </button>\n        <button\n          disabled={redoDisabled}\n          onClick={redo}\n        >\n          {t('redo')}\n        </button>\n        <button\n          disabled={freehandMode || glyph.length === 0}\n          onClick={selectAll}\n        >\n          {t('select all')}\n        </button>\n        <button\n          disabled={freehandMode || glyph.length === 0}\n          onClick={selectDeselected}\n        >\n          {t('invert selection')}\n        </button>\n        <button\n          disabled={selection.length === 0}\n          onClick={copy}\n        >\n          {t('copy')}\n        </button>\n        <button\n          disabled={pasteDisabled}\n          onClick={paste}\n        >\n          {t('paste')}\n        </button>\n        <button\n          disabled={selection.length === 0}\n          onClick={cut}\n        >\n          {t('cut')}\n        </button>\n        <button\n          disabled\n          onClick={toggleFreehand}\n        >\n          {freehandMode ? t('end freehand') : t('start freehand')}\n        </button>\n        <button\n          disabled={decomposeDisabled}\n          onClick={decompose}\n        >\n          {t('decompose')}\n        </button>\n        <button\n          disabled\n          onClick={options}\n        >\n          {t('options')}\n        </button>\n      </div>\n      <div className=\"preview\">\n        <svg className=\"preview-thumbnail\" viewBox=\"0 0 200 200\" width=\"50\" height=\"50\"></svg>\n        <button\n          disabled\n          onClick={finishEdit}\n        >\n          {t('finish edit')}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default EditorControls;\n","import React from 'react';\nimport './App.css';\n\nimport GlyphArea from './components/GlyphArea';\nimport EditorControls from './components/EditorControls';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GlyphArea />\n      <EditorControls />\n      <div className=\"parts-list-area\" />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport jaTranslation from './locales/ja.json';\n\nimport args from \"./args\";\n\nconst resources = {\n  ja: {\n    translation: jaTranslation,\n  },\n};\n\nconst host = args.get('host');\nlet lng = 'ja';\nif (host) {\n  switch (host.split('.')[0]) {\n    case 'en':\n      lng = 'en';\n      break;\n    case 'ko':\n      lng = 'ko';\n      break;\n    case 'zhs':\n      lng = 'zh-Hans';\n      break;\n    case 'zht':\n      lng = 'zh-Hant';\n      break;\n  }\n}\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng,\n\n    returnObjects: true,\n    interpolation: {\n      escapeValue: false, // react already safes from xss\n    },\n  });\n\nexport default i18n;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\n\nimport store from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './i18n';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}